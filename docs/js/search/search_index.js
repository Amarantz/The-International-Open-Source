var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AdvancedFindDistanceOpts.html",[0,1.59,1,3.912]],["body/interfaces/AdvancedFindDistanceOpts.html",[1,5.328,2,2.111,3,0.092,4,0.079,5,5.328,6,0.079,7,0.814,8,0.493,9,8.014,10,8.014,11,1.606,12,0.311,13,0.008,14,4.269,15,0.007,16,0.007]],["title/interfaces/AllyRequest.html",[0,1.59,17,3.57]],["body/interfaces/AllyRequest.html",[2,1.33,3,0.058,4,0.05,6,0.05,7,0.598,8,0.521,12,0.313,13,0.008,15,0.005,16,0.005,17,3.065,18,3.065,19,5.616,20,2.012,21,5.616,22,4.465,23,5.616,24,5.616,25,5.125,26,4.221,27,6.362,28,5.125,29,4.012,30,1.86,31,3.804,32,3.804,33,3.804,34,3.804,35,2.67,36,1.407,37,3.358,38,2.845,39,2.67,40,3.804,41,3.358,42,5.616,43,4.758,44,3.804,45,4.465,46,5.125,47,4.388,48,3.804,49,3.804,50,3.804,51,3.065,52,2.845,53,2.29,54,2.845,55,2.29,56,3.804,57,5.447,58,4.073]],["title/classes/AllyRequestManager.html",[59,0.319,60,3.912]],["body/classes/AllyRequestManager.html",[3,0.044,4,0.038,6,0.038,7,0.492,8,0.388,12,0.277,13,0.008,15,0.004,16,0.004,17,2.353,18,2.353,19,3.952,21,3.952,22,4.283,23,5.388,24,5.388,25,4.386,26,5.178,28,3.607,29,3.849,30,1.91,36,1.5,38,3.348,39,4.283,55,4.778,58,3.348,60,2.578,61,0.202,62,1.313,63,2.921,64,2.921,65,0.307,66,2.578,67,2.578,68,2.353,69,2.578,70,2.184,71,2.353,72,2.921,73,3.348,74,2.921,75,2.578,76,3.348,77,2.353,78,4.477,79,4.477,80,4.477,81,4.806,82,4.806,83,4.477,84,4.477,85,4.477,86,4.477,87,4.477,88,2.384,89,4.477,90,2.353,91,2.578,92,4.806,93,2.184,94,3.607,95,2.578,96,2.578,97,0.408,98,0.54,99,2.578,100,2.353,101,2.921,102,0.565,103,0.546,104,2.707,105,2.786,106,2.921,107,2.921,108,2.921,109,2.921,110,2.921]],["title/classes/AllyVanguard.html",[59,0.319,111,3.912]],["body/classes/AllyVanguard.html",[3,0.067,4,0.057,6,0.057,8,0.518,11,1.488,12,0.255,13,0.009,15,0.006,16,0.006,20,1.901,30,1.303,36,1.106,61,0.304,65,0.339,97,0.462,98,0.552,102,0.589,103,0.57,111,3.865,112,4.378,113,1.419,114,1.319,115,6.864,116,4.131,117,6.864,118,6.864,119,2.669,120,1.948,121,2.215,122,4.495,123,0.568,124,1.571,125,1.571,126,4.378,127,3.274,128,3.865,129,3.527,130,3.865,131,1.613,132,1.97,133,2.157,134,3.527,135,3.073]],["title/interfaces/AnimatedStyle.html",[0,1.59,136,3.57]],["body/interfaces/AnimatedStyle.html",[2,1.945,3,0.085,4,0.073,6,0.073,7,0.773,8,0.518,12,0.302,13,0.008,15,0.007,16,0.007,30,1.854,36,1.295,136,4.48,137,4.159,138,7.723,139,7.723,140,6.817,141,7.723]],["title/classes/Antifa.html",[59,0.319,142,2.795]],["body/classes/Antifa.html",[3,0.056,4,0.048,6,0.048,8,0.531,11,1.762,12,0.232,13,0.009,15,0.005,16,0.005,20,1.678,36,1.256,45,2.575,61,0.254,65,0.299,97,0.481,98,0.51,102,0.535,103,0.517,113,1.189,114,1.105,119,2.424,120,1.72,121,1.955,123,0.476,124,1.317,125,1.317,131,1.352,132,1.79,133,1.904,142,2.313,143,3.669,144,5.022,145,4.662,146,4.662,147,5.503,148,5.306,149,6.234,150,4.662,151,4.662,152,6.234,153,6.234,154,5.503,155,3.669,156,2.744,157,3.239,158,2.114,159,3.669,160,2.955,161,3.669,162,3.239]],["title/classes/BasePlans.html",[59,0.319,163,3.912]],["body/classes/BasePlans.html",[3,0.072,4,0.062,6,0.062,7,0.693,8,0.449,12,0.316,13,0.009,14,4.105,15,0.006,16,0.006,30,1.65,36,1.46,61,0.326,65,0.356,97,0.43,102,0.653,103,0.632,120,2.046,123,0.61,163,5.572,164,4.706,165,4.492,166,5.572,167,6.288,168,5.572,169,4.154,170,2.968,171,4.154,172,4.154,173,4.154,174,4.721,175,3.303,176,4.154,177,4.154]],["title/classes/Builder.html",[59,0.319,178,3.912]],["body/classes/Builder.html",[3,0.081,4,0.07,6,0.07,8,0.47,12,0.254,13,0.008,15,0.007,16,0.007,20,2.159,36,1.256,61,0.367,65,0.385,97,0.426,98,0.564,102,0.586,103,0.567,113,1.718,114,1.597,119,2.936,120,2.213,121,2.515,123,0.687,124,1.902,125,1.902,131,1.953,132,2.168,133,2.45,178,4.68,179,5.301,180,1.389]],["title/classes/BuilderManager.html",[59,0.319,181,3.912]],["body/classes/BuilderManager.html",[3,0.071,4,0.061,6,0.061,7,0.688,8,0.446,12,0.294,13,0.009,15,0.006,16,0.006,61,0.322,65,0.353,97,0.427,98,0.566,102,0.65,103,0.629,104,2.575,105,2.65,114,2.453,132,2.338,180,1.151,181,4.103,182,4.648,183,4.682,184,4.153,185,5.526,186,1.802,187,5.526,188,5.043,189,3.262,190,3.084,191,4.103,192,4.103,193,3.744,194,3.744]],["title/classes/Claimer.html",[59,0.319,195,3.912]],["body/classes/Claimer.html",[3,0.078,4,0.068,6,0.068,8,0.465,12,0.249,13,0.008,15,0.007,16,0.007,20,2.12,36,1.233,61,0.357,65,0.378,97,0.42,98,0.557,102,0.575,103,0.556,113,1.671,114,1.553,119,2.898,120,2.174,121,2.47,123,0.669,124,1.85,125,1.85,128,4.552,129,4.153,130,4.552,131,1.9,132,2.265,133,2.406,195,4.552,196,5.156,197,7.451,198,5.156,199,5.156]],["title/classes/CollectiveManager.html",[59,0.319,200,3.912]],["body/classes/CollectiveManager.html",[3,0.033,4,0.028,6,0.028,7,0.386,8,0.334,11,0.467,12,0.324,13,0.009,14,2.966,15,0.003,16,0.003,26,1.429,28,4.902,29,1.358,30,1.642,35,2.468,36,1.181,52,1.611,54,1.611,61,0.149,62,0.968,65,0.198,73,1.611,88,1.873,90,4.145,91,1.901,93,1.611,97,0.391,98,0.384,102,0.383,103,0.471,104,1.447,105,1.489,114,0.649,129,1.735,132,1.628,142,1.358,158,1.241,160,1.735,184,1.429,200,1.901,201,2.154,202,1.901,203,2.154,204,2.154,205,2.154,206,3.517,207,3.517,208,3.517,209,3.517,210,3.517,211,3.517,212,3.517,213,3.517,214,3.517,215,3.517,216,3.517,217,3.517,218,3.517,219,3.517,220,3.517,221,3.517,222,3.517,223,2.833,224,3.517,225,3.517,226,3.517,227,3.517,228,3.517,229,3.517,230,4.458,231,4.458,232,3.517,233,3.517,234,3.517,235,4.458,236,4.458,237,4.458,238,3.935,239,3.517,240,3.517,241,7.126,242,3.517,243,3.517,244,3.517,245,3.517,246,3.517,247,3.517,248,3.517,249,3.517,250,3.517,251,3.517,252,3.517,253,2.833,254,6.929,255,2.833,256,3.105,257,3.517,258,3.591,259,1.429,260,1.735,261,2.833,262,2.154,263,1.611,264,1.901,265,1.901,266,2.154,267,2.833,268,1.901,269,2.154,270,5.146,271,3.517,272,1.873,273,1.901,274,2.154,275,3.517,276,2.154,277,2.154,278,3.517,279,2.154,280,2.154,281,2.154,282,2.154,283,1.901,284,1.735,285,2.154,286,1.901,287,2.154,288,1.901,289,2.154,290,2.154,291,4.458,292,2.154,293,2.154,294,2.154,295,2.154,296,2.154,297,2.154,298,2.154,299,1.735,300,2.154,301,2.154,302,2.154,303,2.154,304,2.154,305,1.901,306,2.154,307,2.154,308,2.154]],["title/classes/Collectivizer.html",[59,0.319,309,3.57]],["body/classes/Collectivizer.html",[3,0.093,4,0.08,6,0.08,13,0.008,15,0.007,16,0.007,61,0.425,62,2.758,65,0.422,97,0.346,98,0.458,123,0.97,180,1.485,309,6.026,310,5.415,311,6.134,312,6.134,313,6.134,314,6.134,315,6.134,316,4.941,317,6.134]],["title/classes/CombatRequestManager.html",[59,0.319,318,3.57]],["body/classes/CombatRequestManager.html",[3,0.057,4,0.049,6,0.11,7,0.594,8,0.449,11,0.817,12,0.292,13,0.009,15,0.005,16,0.005,30,1.8,36,1.527,61,0.261,65,0.305,97,0.443,98,0.569,102,0.654,103,0.633,123,0.488,180,1.164,186,2.02,318,3.034,319,3.766,320,2.884,321,5.408,322,6.327,323,5.408,324,5.408,325,4.774,326,5.408,327,1.669,328,1.506,329,3.766,330,5.898,331,3.766,332,3.766,333,3.766,334,3.766]],["title/classes/CommuneManager.html",[59,0.319,320,1.677]],["body/classes/CommuneManager.html",[3,0.024,4,0.021,6,0.063,7,0.3,8,0.329,11,0.346,12,0.324,13,0.009,14,0.919,15,0.003,16,0.003,20,0.865,22,1.92,26,1.058,30,1.753,36,0.783,39,1.12,42,1.408,43,3.183,46,1.285,47,1.285,55,0.96,61,0.111,65,0.154,88,1.456,97,0.382,98,0.417,102,0.48,103,0.464,104,1.75,105,1.802,114,0.48,123,0.355,132,1.833,135,1.12,180,0.66,186,2.002,190,1.058,238,2.415,253,1.285,260,1.285,272,0.849,273,1.408,286,1.408,318,2.892,320,0.604,327,0.844,330,1.285,335,1.595,336,2.735,337,2.735,338,2.735,339,2.735,340,2.735,341,2.735,342,2.735,343,2.735,344,2.735,345,2.735,346,2.735,347,2.735,348,2.735,349,2.735,350,2.735,351,2.892,352,2.735,353,2.892,354,2.735,355,2.892,356,2.735,357,2.892,358,2.892,359,2.892,360,2.892,361,2.892,362,2.735,363,2.892,364,2.735,365,2.892,366,2.735,367,2.735,368,2.892,369,2.892,370,2.892,371,2.892,372,2.892,373,2.735,374,2.892,375,2.892,376,2.735,377,2.735,378,2.735,379,2.735,380,2.735,381,3.591,382,2.069,383,3.591,384,1.815,385,2.52,386,2.735,387,2.735,388,2.735,389,2.735,390,2.735,391,2.735,392,2.735,393,2.735,394,2.735,395,2.735,396,2.735,397,2.735,398,2.735,399,2.735,400,2.735,401,2.735,402,2.735,403,2.735,404,2.735,405,2.735,406,2.735,407,2.735,408,2.735,409,1.595,410,1.408,411,1.595,412,1.595,413,1.595,414,1.595,415,2.735,416,1.595,417,1.285,418,0.96,419,1.595,420,1.595,421,1.595,422,1.595,423,1.408,424,1.595,425,1.595,426,1.595,427,1.595,428,1.595,429,1.595,430,1.408,431,1.595,432,1.595,433,2.735,434,1.595,435,1.595,436,2.735,437,1.285,438,1.595,439,1.058,440,1.595,441,1.595,442,1.595,443,2.415,444,1.058,445,1.595,446,1.595,447,1.595,448,1.595,449,1.595,450,1.595,451,1.595,452,1.193,453,1.595,454,1.595,455,1.595,456,1.595,457,2.415,458,1.285,459,1.595,460,1.595,461,1.595,462,1.408,463,1.595,464,2.046,465,1.408,466,1.408,467,1.193,468,1.408,469,1.595,470,1.193,471,1.595,472,1.595,473,1.595,474,1.595,475,1.408,476,1.408,477,1.595,478,1.595,479,1.595,480,1.595,481,1.595,482,1.408,483,1.595,484,1.408,485,1.595,486,1.595,487,1.595,488,1.595,489,1.595,490,1.595,491,1.595]],["title/classes/ConstructionManager.html",[59,0.319,351,3.57]],["body/classes/ConstructionManager.html",[3,0.06,4,0.052,6,0.052,7,0.615,8,0.383,12,0.288,13,0.009,15,0.005,16,0.005,30,1.794,35,2.772,61,0.274,65,0.316,97,0.449,98,0.578,102,0.558,103,0.539,104,1.625,105,1.672,123,0.512,132,2.028,186,1.996,255,3.182,320,2.93,327,1.727,328,1.579,351,3.182,382,3.744,452,2.954,457,4.939,492,3.95,493,5.595,494,5.595,495,6.496,496,5.233,497,5.735,498,5.595,499,5.595,500,6.496,501,3.95,502,3.95,503,3.95,504,3.487,505,3.95,506,3.487,507,3.95,508,7.066,509,3.95]],["title/classes/ConstructionSiteManager.html",[59,0.319,510,3.912]],["body/classes/ConstructionSiteManager.html",[3,0.094,4,0.081,6,0.081,13,0.008,15,0.007,16,0.007,61,0.43,62,2.788,65,0.425,97,0.35,98,0.463,180,1.492,510,5.474,511,6.201,512,6.201,513,6.201,514,6.201,515,6.201,516,6.201,517,6.201,518,5.474,519,6.201]],["title/classes/ContainerManager.html",[59,0.319,520,3.912]],["body/classes/ContainerManager.html",[3,0.075,4,0.065,6,0.065,7,0.717,8,0.292,12,0.243,13,0.009,15,0.006,16,0.006,61,0.343,65,0.369,97,0.468,98,0.619,102,0.425,103,0.411,123,0.642,186,2.042,520,4.372,521,4.953,522,4.991,523,5.465,524,7.307,525,7.307,526,7.307,527,5.128,528,7.307,529,2.981]],["title/classes/ControllerUpgrader.html",[59,0.319,530,3.57]],["body/classes/ControllerUpgrader.html",[3,0.081,4,0.07,6,0.07,8,0.402,11,1.149,12,0.254,13,0.008,15,0.007,16,0.007,20,2.159,36,1.256,61,0.367,65,0.385,97,0.426,98,0.51,102,0.586,103,0.567,113,1.718,114,1.597,119,2.936,120,2.213,121,2.515,123,0.687,124,1.902,125,1.902,131,1.953,132,2.168,133,2.45,327,2.107,530,4.27,531,5.301,532,4.178]],["title/classes/ControllerUpgraderManager.html",[59,0.319,533,3.912]],["body/classes/ControllerUpgraderManager.html",[3,0.067,4,0.058,6,0.058,7,0.662,8,0.457,11,0.953,12,0.298,13,0.009,15,0.006,16,0.006,61,0.305,65,0.34,97,0.438,98,0.553,102,0.665,103,0.644,104,2.479,105,2.551,114,2.552,132,2.299,180,1.109,183,4.507,184,3.998,185,5.32,186,1.761,187,5.32,188,4.855,189,3.085,191,3.88,192,3.88,193,3.541,194,3.541,530,3.541,532,3.335,533,3.88,534,4.395,535,4.395]],["title/interfaces/CreepCombatData.html",[0,1.59,536,3.912]],["body/interfaces/CreepCombatData.html",[2,1.954,3,0.085,4,0.073,6,0.073,7,0.776,12,0.312,13,0.009,15,0.007,16,0.007,18,4.502,30,1.939,47,6.235,536,4.934,537,7.74,538,6.833,539,7.74,540,7.74]],["title/classes/CreepOrganizer.html",[59,0.319,541,3.912]],["body/classes/CreepOrganizer.html",[3,0.089,4,0.077,6,0.077,8,0.345,12,0.218,13,0.008,15,0.007,16,0.007,36,1.336,61,0.405,65,0.41,97,0.41,98,0.543,102,0.502,103,0.485,123,0.942,180,1.454,186,1.728,327,2.242,541,5.163,542,5.849,543,6.413,544,5.163,545,5.163]],["title/classes/CreepRoleManager.html",[59,0.319,546,3.912]],["body/classes/CreepRoleManager.html",[3,0.079,4,0.069,6,0.069,7,0.743,8,0.399,12,0.279,13,0.009,15,0.007,16,0.007,61,0.362,65,0.382,97,0.423,98,0.56,102,0.581,103,0.561,123,0.678,180,1.38,184,3.468,186,1.61,189,4.748,327,2.448,522,5.065,529,3.146,546,4.615,547,5.228,548,7.501,549,5.972,550,5.228]],["title/interfaces/CustomLogOpts.html",[0,1.59,551,3.912]],["body/interfaces/CustomLogOpts.html",[2,2.035,3,0.088,4,0.076,5,5.137,6,0.076,7,0.795,8,0.51,12,0.293,13,0.008,15,0.007,16,0.007,30,1.57,36,1.517,551,5.137,552,7.884,553,7.884,554,6.96]],["title/interfaces/DeadCreepNames.html",[0,1.59,555,3.912]],["body/interfaces/DeadCreepNames.html",[2,2.134,3,0.093,4,0.08,6,0.08,7,0.819,12,0.299,13,0.008,15,0.007,16,0.007,38,6.022,555,5.386,556,5.386,557,6.486,558,6.545]],["title/classes/DefenceManager.html",[59,0.319,353,3.57]],["body/classes/DefenceManager.html",[3,0.06,4,0.052,6,0.052,7,0.618,8,0.235,11,1.414,12,0.264,13,0.009,15,0.006,16,0.006,30,0.862,61,0.276,65,0.317,76,2.975,97,0.479,98,0.609,102,0.341,103,0.33,123,0.516,165,2.509,180,1.2,186,2.096,259,2.639,320,2.937,328,1.59,353,3.205,484,3.512,559,3.978,560,5.623,561,5.623,562,6.521,563,6.521,564,6.521,565,6.521,566,6.521,567,6.521,568,6.521,569,6.521,570,6.521,571,6.521,572,3.978,573,3.205,574,3.978,575,3.512,576,3.978]],["title/classes/DroppedResourceManager.html",[59,0.319,577,3.912]],["body/classes/DroppedResourceManager.html",[3,0.088,4,0.076,6,0.076,7,0.79,8,0.34,12,0.268,13,0.008,15,0.007,16,0.007,61,0.399,65,0.406,97,0.406,98,0.537,102,0.494,103,0.478,123,0.747,522,5.194,523,5.869,527,5.507,529,3.466,577,5.084,578,5.76]],["title/classes/Duo.html",[59,0.319,579,3.912]],["body/classes/Duo.html",[3,0.057,4,0.049,6,0.07,7,0.59,8,0.406,11,1.737,12,0.271,13,0.009,15,0.005,16,0.005,36,0.988,45,2.617,55,2.244,61,0.259,65,0.303,88,2.859,97,0.483,98,0.514,102,0.461,103,0.446,104,2.208,105,2.273,123,0.484,142,3.386,144,5.068,145,4.705,146,4.705,147,5.554,150,4.705,151,4.705,154,5.554,156,2.789,180,1.157,579,3.292,580,3.729,581,4.325,582,5.068,583,5.068,584,5.554,585,4.325,586,5.068,587,5.068,588,5.068,589,5.068,590,4.325,591,3.004,592,3.004,593,4.325,594,4.325,595,2.789,596,3.004,597,3.004,598,3.004]],["title/classes/DynamicSquad.html",[59,0.319,599,3.912]],["body/classes/DynamicSquad.html",[3,0.047,4,0.041,6,0.062,7,0.516,8,0.436,11,1.367,12,0.304,13,0.009,15,0.005,16,0.005,36,1.041,45,3.299,53,1.874,55,1.874,61,0.216,62,1.4,65,0.265,88,2.503,90,2.508,97,0.466,98,0.552,102,0.581,103,0.562,104,2.329,105,2.397,114,2.226,123,0.404,142,2.964,150,3.515,151,4.234,156,4.234,180,1.041,186,1.118,263,2.329,581,3.786,582,4.561,583,4.561,584,4.998,585,3.786,586,4.561,587,4.561,588,4.561,589,4.561,590,3.786,591,2.508,592,2.508,593,3.786,594,3.786,595,2.329,596,2.508,597,2.508,598,2.508,599,2.749,600,3.114,601,3.114,602,2.329,603,2.749,604,3.114,605,3.114,606,3.114,607,3.114,608,3.114,609,4.7,610,4.149,611,4.7,612,5.662,613,5.662,614,5.662,615,4.149,616,4.998,617,3.114,618,4.7,619,3.114,620,3.114,621,2.749]],["title/classes/EndTickCreepManager.html",[59,0.319,622,3.912]],["body/classes/EndTickCreepManager.html",[3,0.079,4,0.069,6,0.069,7,0.743,8,0.308,12,0.252,13,0.008,15,0.007,16,0.007,61,0.362,65,0.382,71,4.211,93,3.909,97,0.423,98,0.505,102,0.449,103,0.434,123,0.678,180,1.38,186,1.887,259,3.468,327,2.088,522,5.065,529,3.146,558,3.909,622,4.615,623,5.228,624,7.501,625,7.501,626,5.972,627,5.228,628,4.615,629,5.228]],["title/classes/EndTickManager.html",[59,0.319,630,3.912]],["body/classes/EndTickManager.html",[3,0.095,4,0.082,6,0.082,13,0.008,15,0.007,16,0.007,61,0.432,62,2.804,65,0.426,93,4.663,97,0.352,98,0.466,180,1.495,202,5.504,630,5.504,631,6.236,632,5.504,633,6.236,634,6.236,635,5.023,636,6.236]],["title/interfaces/EnemyThreatData.html",[0,1.59,637,3.57]],["body/interfaces/EnemyThreatData.html",[2,2.181,3,0.095,4,0.082,6,0.082,7,0.83,12,0.281,13,0.008,15,0.007,16,0.007,637,5.023,638,5.504,639,8.129,640,8.129,641,7.556,642,7.556]],["title/interfaces/ErrorData.html",[0,1.59,643,3.57]],["body/interfaces/ErrorData.html",[2,2.157,3,0.094,4,0.081,6,0.081,7,0.824,8,0.442,12,0.279,13,0.008,15,0.007,16,0.007,30,1.627,36,1.381,643,4.968,644,5.444,645,7.142,646,5.368]],["title/classes/ErrorExporter.html",[59,0.319,647,3.912]],["body/classes/ErrorExporter.html",[3,0.081,4,0.07,6,0.07,8,0.404,12,0.255,13,0.008,15,0.007,16,0.007,30,1.484,36,1.259,61,0.369,65,0.386,97,0.427,98,0.511,102,0.588,103,0.568,120,2.742,170,3.359,643,6.096,644,4.702,646,4.543,647,4.702,648,6.847,649,7.568,650,6.847,651,5.326,652,4.702,653,5.326,654,4.702]],["title/classes/ErrorMapper.html",[59,0.319,655,3.912]],["body/classes/ErrorMapper.html",[3,0.063,4,0.054,6,0.054,7,0.635,8,0.425,12,0.282,13,0.009,14,2.385,15,0.006,16,0.006,36,1.225,61,0.287,62,1.861,65,0.326,88,3.078,94,3.333,97,0.326,98,0.432,102,0.496,103,0.48,104,1.702,105,1.752,120,2.668,165,2.61,186,1.375,261,3.333,430,3.653,444,2.745,482,3.653,635,3.333,652,5.881,655,3.653,656,4.138,657,5.781,658,5.781,659,5.781,660,5.781,661,5.781,662,4.138,663,4.138,664,6.366,665,4.138,666,6.662,667,3.333,668,3.835,669,3.653,670,5.781,671,4.138,672,4.138,673,4.138,674,5.103,675,3.653,676,3.653,677,5.103,678,4.138,679,4.138,680,4.138,681,4.138,682,4.138,683,4.138,684,4.138,685,4.138,686,3.333,687,2.904,688,4.138]],["title/classes/FactoryManager.html",[59,0.319,355,3.57]],["body/classes/FactoryManager.html",[3,0.052,4,0.045,6,0.045,7,0.557,8,0.417,11,0.747,12,0.284,13,0.009,15,0.005,16,0.005,61,0.239,65,0.286,97,0.451,98,0.528,102,0.606,103,0.586,123,0.447,180,1.106,320,2.797,328,1.377,355,2.775,689,3.445,690,5.069,691,5.069,692,6.013,693,5.069,694,5.069,695,6.013,696,6.013,697,5.069,698,6.013,699,3.445,700,3.445,701,8.001,702,7.063,703,8.001,704,8.001,705,6.013,706,3.445,707,2.577,708,3.445,709,3.445]],["title/classes/FastFiller.html",[59,0.319,710,3.57]],["body/classes/FastFiller.html",[3,0.077,4,0.067,6,0.067,8,0.509,11,1.441,12,0.247,13,0.008,15,0.007,16,0.007,20,2.102,36,1.222,61,0.353,65,0.375,97,0.443,98,0.38,102,0.57,103,0.552,113,1.649,114,1.532,120,2.154,121,2.449,123,0.66,124,1.825,125,1.825,131,1.874,132,2.125,133,2.385,710,4.097,711,5.087,712,7.403,713,7.403,714,7.403]],["title/interfaces/FeatureFlagConfig.html",[0,1.59,715,3.57]],["body/interfaces/FeatureFlagConfig.html",[2,2.363,3,0.103,4,0.089,6,0.089,7,0.871,13,0.008,15,0.008,16,0.008,715,5.443,716,5.965]],["title/classes/FeatureFlagManager.html",[59,0.319,717,3.912]],["body/classes/FeatureFlagManager.html",[3,0.079,4,0.069,6,0.069,7,0.743,8,0.442,11,1.467,12,0.295,13,0.009,15,0.007,16,0.007,61,0.362,65,0.382,97,0.382,102,0.644,103,0.623,123,0.678,186,1.61,715,6.042,716,4.615,717,4.615,718,6.765,719,7.501,720,6.765,721,6.765,722,5.228,723,4.615,724,5.228,725,7.932,726,5.228,727,5.228]],["title/interfaces/FindDynamicStampAnchorArgs.html",[0,1.59,728,2.94]],["body/interfaces/FindDynamicStampAnchorArgs.html",[2,1.898,3,0.083,4,0.071,6,0.071,7,0.761,8,0.49,11,1.177,12,0.299,13,0.008,15,0.007,16,0.007,30,1.503,65,0.391,97,0.306,102,0.466,103,0.45,728,3.601,729,3.809,730,5.066,731,6.216,732,5.066,733,4.172,734,3.601,735,4.599]],["title/interfaces/FindDynamicStampAnchorArgs-1.html",[0,1.326,53,2.224,728,2.451]],["body/interfaces/FindDynamicStampAnchorArgs-1.html",[2,1.898,3,0.083,4,0.071,6,0.071,7,0.761,8,0.49,11,1.177,12,0.299,13,0.008,15,0.007,16,0.007,30,1.503,65,0.391,97,0.306,102,0.466,103,0.45,728,3.601,730,5.066,731,6.216,732,5.066,733,4.172,734,3.601,735,4.599,736,3.809]],["title/interfaces/FindDynamicStampAnchorWeightedArgs.html",[0,1.59,737,3.314]],["body/interfaces/FindDynamicStampAnchorWeightedArgs.html",[2,2.217,3,0.096,4,0.083,6,0.083,7,0.838,8,0.45,12,0.236,13,0.008,15,0.008,16,0.008,113,2.055,728,4.206,729,4.45,737,4.742,738,6.123,739,5.708]],["title/interfaces/FindDynamicStampAnchorWeightedArgs-1.html",[0,1.326,53,2.224,737,2.763]],["body/interfaces/FindDynamicStampAnchorWeightedArgs-1.html",[2,2.217,3,0.096,4,0.083,6,0.083,7,0.838,8,0.45,12,0.236,13,0.008,15,0.008,16,0.008,113,2.055,728,4.206,736,4.45,737,4.742,738,6.123,739,5.708]],["title/interfaces/FindStampAnchorArgs.html",[0,1.59,740,3.314]],["body/interfaces/FindStampAnchorArgs.html",[2,1.763,3,0.077,4,0.066,6,0.066,7,0.726,8,0.501,11,1.598,12,0.31,13,0.009,15,0.006,16,0.006,30,1.432,65,0.373,97,0.284,102,0.433,103,0.418,729,3.538,730,4.89,731,6.073,732,4.89,733,3.977,734,3.345,735,4.494,740,3.77,741,5.512,742,6.073]],["title/interfaces/FindStampAnchorArgs-1.html",[0,1.326,53,2.224,740,2.763]],["body/interfaces/FindStampAnchorArgs-1.html",[2,1.763,3,0.077,4,0.066,6,0.066,7,0.726,8,0.501,11,1.598,12,0.31,13,0.009,15,0.006,16,0.006,30,1.432,65,0.373,97,0.284,102,0.433,103,0.418,730,4.89,731,6.073,732,4.89,733,3.977,734,3.345,735,4.494,736,3.538,740,3.77,741,5.512,742,6.073]],["title/classes/FlagManager.html",[59,0.319,743,3.912]],["body/classes/FlagManager.html",[3,0.041,4,0.035,6,0.035,8,0.466,12,0.294,13,0.009,15,0.004,16,0.004,36,1.674,61,0.187,65,0.237,94,2.168,97,0.452,98,0.598,102,0.678,103,0.656,180,1.075,186,2.042,223,3.386,260,3.386,327,1.297,573,3.386,602,2.013,687,1.889,743,2.376,744,2.692,745,4.203,746,2.65,747,3.71,748,4.203,749,3.71,750,4.203,751,4.203,752,4.203,753,4.203,754,2.692,755,8.661,756,7.899,757,2.692,758,2.692,759,2.692,760,2.692,761,2.692,762,2.692,763,2.692,764,2.692,765,2.376,766,2.692,767,2.692,768,2.692,769,2.692,770,2.692]],["title/classes/HaulRequestManager.html",[59,0.319,359,3.57]],["body/classes/HaulRequestManager.html",[3,0.066,4,0.057,6,0.107,7,0.657,8,0.434,12,0.287,13,0.009,15,0.006,16,0.006,30,1.73,36,1.468,61,0.301,65,0.337,97,0.436,98,0.577,102,0.632,103,0.611,123,0.563,180,1.257,186,1.899,320,3.02,327,2.273,328,1.737,330,5.507,359,3.5,382,3.94,771,4.345,772,5.979,773,5.979,774,5.979,775,4.345,776,4.345,777,4.345]],["title/classes/Hauler.html",[59,0.319,190,2.94]],["body/classes/Hauler.html",[3,0.083,4,0.072,6,0.072,8,0.475,12,0.259,13,0.008,15,0.007,16,0.007,20,2.199,36,1.279,61,0.378,65,0.392,97,0.392,98,0.519,102,0.597,103,0.577,113,1.768,114,1.643,120,2.254,121,2.562,123,0.707,124,1.957,125,1.957,131,2.01,132,2.197,133,2.495,180,1.408,190,3.619,778,5.454]],["title/classes/HaulerManager.html",[59,0.319,779,3.912]],["body/classes/HaulerManager.html",[3,0.081,4,0.07,6,0.07,7,0.75,8,0.402,12,0.281,13,0.009,15,0.007,16,0.007,61,0.367,65,0.385,97,0.385,98,0.51,102,0.586,103,0.567,104,2.808,105,2.89,114,2.274,132,2.168,180,1.256,183,5.105,184,4.529,186,1.624,188,5.499,189,3.72,190,3.517,193,4.27,194,4.27,779,4.68,780,5.301]],["title/classes/HaulerNeedManager.html",[59,0.319,357,3.57]],["body/classes/HaulerNeedManager.html",[3,0.083,4,0.072,6,0.072,7,0.766,8,0.323,12,0.259,13,0.009,15,0.007,16,0.007,61,0.38,65,0.394,97,0.433,98,0.573,102,0.47,103,0.455,123,0.711,180,1.411,186,1.921,320,3.225,328,2.191,357,4.415,781,5.481,782,7.67,783,7.67]],["title/classes/HaulerSizeManager.html",[59,0.319,358,3.57]],["body/classes/HaulerSizeManager.html",[3,0.087,4,0.075,6,0.075,7,0.785,8,0.336,12,0.266,13,0.008,15,0.007,16,0.007,61,0.395,65,0.403,97,0.403,98,0.534,102,0.489,103,0.473,123,0.739,180,1.437,186,1.701,320,3.257,328,2.279,358,4.593,784,5.702,785,7.811]],["title/classes/HubHauler.html",[59,0.319,786,3.57]],["body/classes/HubHauler.html",[3,0.056,4,0.049,6,0.049,8,0.53,11,1.793,12,0.199,13,0.009,15,0.005,16,0.005,20,1.69,36,0.983,61,0.257,65,0.302,92,7.193,97,0.478,98,0.399,102,0.459,103,0.444,113,1.201,114,1.116,120,1.732,121,1.969,123,0.48,124,1.33,125,1.33,131,1.365,132,1.799,133,1.918,786,2.984,787,3.705,788,6.268,789,6.268,790,6.268,791,6.268,792,6.268,793,6.268,794,6.268,795,6.268,796,6.268,797,6.268,798,6.268,799,8.148]],["title/classes/InitManager.html",[59,0.319,800,3.912]],["body/classes/InitManager.html",[3,0.078,4,0.068,6,0.068,13,0.008,15,0.007,16,0.007,61,0.357,62,2.318,65,0.378,68,4.153,70,5.014,97,0.445,98,0.589,99,4.552,180,1.371,186,1.877,327,2.069,628,5.919,687,3.618,800,4.552,801,5.156,802,5.156,803,5.156,804,5.156,805,5.156,806,5.156,807,7.451,808,7.451,809,7.451,810,4.552,811,4.552,812,4.552,813,4.552,814,6.705,815,5.156,816,6.705]],["title/classes/Int32Queue.html",[59,0.319,817,3.912]],["body/classes/Int32Queue.html",[3,0.07,4,0.06,6,0.06,7,0.684,8,0.416,12,0.302,13,0.009,15,0.006,16,0.006,30,1.855,61,0.32,65,0.351,88,3.315,97,0.426,98,0.527,102,0.605,103,0.585,123,0.598,186,1.933,677,5.496,817,4.07,818,4.61,819,6.226,820,6.226,821,6.226,822,7.049,823,5.496,824,7.049,825,6.226,826,4.61,827,4.61,828,4.61,829,4.61,830,4.07,831,4.61,832,4.61,833,4.61]],["title/classes/InterShardPlanner.html",[59,0.319,834,3.912]],["body/classes/InterShardPlanner.html",[3,0.105,4,0.09,13,0.008,15,0.008,16,0.008,61,0.477,834,6.073,835,6.88]],["title/interfaces/InterpretedRoomEvent.html",[0,1.59,836,3.912]],["body/interfaces/InterpretedRoomEvent.html",[2,1.926,3,0.084,4,0.072,6,0.072,7,0.768,8,0.503,12,0.301,13,0.009,15,0.007,16,0.007,20,2.212,30,1.516,43,5.749,556,4.862,836,4.862,837,7.688,838,7.688,839,5.749,840,6.995,841,6.995,842,6.995]],["title/classes/LabManager.html",[59,0.319,360,3.57]],["body/classes/LabManager.html",[3,0.03,4,0.026,6,0.026,7,0.355,8,0.379,11,1.492,12,0.304,13,0.009,14,1.865,15,0.003,16,0.003,20,0.616,30,1.492,43,2.42,51,1.568,61,0.135,65,0.183,88,1.723,97,0.459,98,0.54,102,0.552,103,0.534,104,1.708,105,1.758,114,1.745,123,0.252,180,0.764,186,2.031,272,1.036,299,1.568,320,2.193,327,1.493,328,0.778,360,1.568,382,2.393,467,1.456,470,1.456,702,5.676,707,1.456,839,1.456,843,1.946,844,3.236,845,3.236,846,3.236,847,3.236,848,3.236,849,3.236,850,3.236,851,3.236,852,3.236,853,4.153,854,3.236,855,3.236,856,3.236,857,5.795,858,3.236,859,3.236,860,4.153,861,4.153,862,3.236,863,4.153,864,3.236,865,3.236,866,4.153,867,4.153,868,4.153,869,2.914,870,3.236,871,4.153,872,3.236,873,4.153,874,4.153,875,3.236,876,4.153,877,4.153,878,4.153,879,3.236,880,3.236,881,3.236,882,3.236,883,5.795,884,6.884,885,5.37,886,1.946,887,1.946,888,1.946,889,6.675,890,1.946,891,1.946,892,1.946,893,1.946,894,1.946,895,1.946,896,1.946,897,1.946,898,1.946,899,5.37,900,1.946,901,3.236,902,1.946,903,3.236,904,1.946,905,1.946,906,1.946,907,1.456,908,1.946,909,1.946,910,1.946,911,1.946,912,1.946,913,1.946,914,1.946,915,1.946,916,1.946,917,1.946,918,1.946,919,1.946,920,1.946,921,1.946,922,1.946,923,1.946]],["title/classes/LinkManager.html",[59,0.319,361,3.57]],["body/classes/LinkManager.html",[3,0.077,4,0.067,6,0.067,7,0.73,8,0.3,12,0.247,13,0.009,15,0.007,16,0.007,61,0.353,65,0.375,97,0.46,98,0.608,102,0.437,103,0.422,123,0.66,180,1.362,186,2.053,320,3.161,328,2.034,361,4.097,924,5.087,925,7.403,926,7.403,927,7.403,928,7.403]],["title/classes/Maintainer.html",[59,0.319,929,3.912]],["body/classes/Maintainer.html",[3,0.081,4,0.07,6,0.07,8,0.47,12,0.254,13,0.008,15,0.007,16,0.007,20,2.159,36,1.256,61,0.367,65,0.385,97,0.426,98,0.564,102,0.586,103,0.567,113,1.718,114,1.597,119,2.936,120,2.213,121,2.515,123,0.687,124,1.902,125,1.902,131,1.953,132,2.168,133,2.45,180,1.389,929,4.68,930,5.301]],["title/classes/MapVisualsManager.html",[59,0.319,931,3.912]],["body/classes/MapVisualsManager.html",[3,0.083,4,0.071,6,0.071,8,0.32,12,0.202,13,0.008,15,0.007,16,0.007,29,3.423,36,1.275,61,0.376,62,2.441,65,0.391,71,4.373,97,0.431,98,0.57,102,0.466,103,0.45,165,3.423,180,1.405,186,1.914,385,4.864,931,4.792,932,5.428,933,5.428,934,5.428,935,5.428,936,4.792,937,6.74,938,5.428,939,8.045]],["title/classes/MeleeDefender.html",[59,0.319,940,3.912]],["body/classes/MeleeDefender.html",[3,0.07,4,0.061,6,0.061,8,0.515,11,1.353,12,0.263,13,0.009,15,0.006,16,0.006,20,1.974,36,1.148,61,0.321,65,0.352,97,0.459,98,0.528,102,0.606,103,0.586,113,1.501,114,2.128,119,2.747,120,2.024,121,2.3,123,0.6,124,1.661,125,1.661,131,1.706,132,2.028,133,2.24,940,4.086,941,4.629,942,6.236,943,5.511,944,6.236,945,6.236,946,4.086,947,3.729]],["title/classes/MemHack.html",[59,0.319,948,3.912]],["body/classes/MemHack.html",[3,0.086,4,0.074,6,0.074,7,0.781,12,0.21,13,0.008,15,0.007,16,0.007,61,0.391,62,2.538,65,0.401,70,5.815,76,4.221,77,4.547,97,0.319,98,0.422,123,0.921,180,1.501,253,4.547,258,4.547,686,5.723,948,6.272,949,5.645,950,5.645,951,5.645,952,4.983,953,4.983,954,5.645,955,5.645,956,4.983,957,5.645]],["title/classes/MigrationManager.html",[59,0.319,958,3.912]],["body/classes/MigrationManager.html",[3,0.095,4,0.082,6,0.082,13,0.008,15,0.007,16,0.007,61,0.432,62,2.804,65,0.426,97,0.352,98,0.466,100,5.023,180,1.495,327,2.332,496,5.023,646,4.137,958,5.504,959,6.236,960,6.236,961,5.504]],["title/classes/MineralHarvester.html",[59,0.319,962,3.57]],["body/classes/MineralHarvester.html",[3,0.078,4,0.067,6,0.067,8,0.481,12,0.276,13,0.009,15,0.007,16,0.007,20,2.114,36,1.23,61,0.356,65,0.377,97,0.42,98,0.499,102,0.638,103,0.617,113,1.664,114,1.546,119,2.891,120,2.167,121,2.463,123,0.666,124,1.842,125,1.842,131,1.891,132,2.134,133,2.399,264,6.563,962,4.135,963,5.133,964,6.685,965,5.133]],["title/classes/NukerManager.html",[59,0.319,966,3.912]],["body/classes/NukerManager.html",[3,0.085,4,0.073,6,0.073,7,0.776,8,0.329,12,0.288,13,0.009,15,0.007,16,0.007,61,0.387,65,0.398,97,0.398,98,0.417,102,0.48,103,0.464,123,0.725,180,1.424,186,1.68,320,3.241,328,2.234,869,5.432,966,4.934,967,5.589,968,7.061,969,5.589]],["title/classes/ObserverManager.html",[59,0.319,363,3.57]],["body/classes/ObserverManager.html",[3,0.083,4,0.072,6,0.072,7,0.766,8,0.323,12,0.3,13,0.009,15,0.007,16,0.007,36,1.008,61,0.38,65,0.394,97,0.394,98,0.521,102,0.47,103,0.455,123,0.711,320,3.225,328,2.191,363,4.415,382,4.421,970,5.481,971,6.974,972,6.974,973,6.771,974,5.481]],["title/classes/Operator.html",[59,0.319,975,3.912]],["body/classes/Operator.html",[3,0.057,4,0.049,6,0.049,8,0.533,11,1.583,12,0.2,13,0.009,15,0.005,16,0.005,20,1.702,36,0.99,61,0.259,65,0.304,81,5.564,97,0.49,98,0.515,102,0.462,103,0.447,113,1.213,119,2.451,120,1.745,123,0.485,124,1.343,125,1.343,132,1.809,133,1.931,975,3.303,976,3.742,977,3.742,978,6.303,979,6.303,980,6.303,981,6.303,982,6.303,983,6.303,984,6.303,985,6.303,986,6.303,987,6.303,988,5.382,989,6.303,990,6.303,991,3.742,992,3.742]],["title/interfaces/OutputArgs.html",[0,1.59,993,3.912]],["body/interfaces/OutputArgs.html",[2,2.078,3,0.09,4,0.078,6,0.078,7,0.806,8,0.49,11,1.59,12,0.273,13,0.008,15,0.007,16,0.007,30,1.59,104,2.443,464,4.443,993,5.244,994,5.941,995,7.958,996,7.958,997,5.941,998,5.244,999,5.244]],["title/interfaces/PlanStampsArgs.html",[0,1.59,1000,3.314]],["body/interfaces/PlanStampsArgs.html",[2,1.348,3,0.059,4,0.051,6,0.051,7,0.604,8,0.522,11,1.783,12,0.317,13,0.009,15,0.005,16,0.005,30,1.515,62,1.734,65,0.31,97,0.31,98,0.288,102,0.472,103,0.456,602,4.794,729,2.706,730,4.253,732,4.253,733,3.31,734,2.558,735,4.473,738,4.794,739,4.113,741,4.794,742,5.526,1000,2.884,1001,5.659,1002,5.659,1003,5.659,1004,5.659,1005,4.855,1006,3.106,1007,3.404,1008,3.404,1009,3.404,1010,4.855,1011,3.404,1012,3.404,1013,3.404,1014,3.404,1015,4.855]],["title/interfaces/PlanStampsArgs-1.html",[0,1.326,53,2.224,1000,2.763]],["body/interfaces/PlanStampsArgs-1.html",[2,1.348,3,0.059,4,0.051,6,0.051,7,0.604,8,0.522,11,1.783,12,0.317,13,0.009,15,0.005,16,0.005,30,1.515,62,1.734,65,0.31,97,0.31,98,0.288,102,0.472,103,0.456,602,4.794,730,4.253,732,4.253,733,3.31,734,2.558,735,4.473,736,2.706,738,4.794,739,4.113,741,4.794,742,5.526,1000,2.884,1001,5.659,1002,5.659,1003,5.659,1004,5.659,1005,4.855,1006,3.106,1007,3.404,1008,3.404,1009,3.404,1010,4.855,1011,3.404,1012,3.404,1013,3.404,1014,3.404,1015,4.855]],["title/classes/PlayerManager.html",[59,0.319,1016,3.912]],["body/classes/PlayerManager.html",[3,0.069,4,0.06,6,0.06,7,0.676,8,0.363,11,0.983,12,0.292,13,0.009,15,0.006,16,0.006,25,3.654,30,1.753,35,3.183,36,1.286,54,3.392,55,2.73,61,0.314,62,2.04,65,0.347,88,3.279,97,0.394,98,0.339,102,0.529,103,0.511,104,1.866,105,1.92,123,0.799,175,3.183,180,1.286,186,1.465,261,3.654,305,4.004,464,3.392,1016,4.004,1017,4.536,1018,6.158,1019,6.158,1020,6.158,1021,6.158,1022,6.991,1023,6.158,1024,4.536,1025,4.004,1026,4.536,1027,4.004,1028,4.004,1029,4.536,1030,4.536,1031,4.004,1032,4.004,1033,4.536,1034,4.536]],["title/classes/PowerCreepOrganizer.html",[59,0.319,1035,3.912]],["body/classes/PowerCreepOrganizer.html",[3,0.089,4,0.077,6,0.077,8,0.345,12,0.218,13,0.008,15,0.007,16,0.007,36,1.336,61,0.405,65,0.41,97,0.41,98,0.543,102,0.502,103,0.485,123,0.942,180,1.454,186,1.728,327,2.242,543,6.413,544,5.163,545,5.163,1035,5.163,1036,5.849]],["title/classes/PowerCreepRoleManager.html",[59,0.319,1037,3.912]],["body/classes/PowerCreepRoleManager.html",[3,0.083,4,0.071,6,0.071,7,0.761,8,0.409,12,0.284,13,0.008,15,0.007,16,0.007,61,0.376,65,0.391,97,0.391,98,0.518,102,0.595,103,0.575,123,0.704,180,1.405,186,1.649,327,2.139,522,5.116,529,3.267,549,6.118,1037,4.792,1038,5.428,1039,5.428,1040,6.931,1041,5.428]],["title/classes/PowerSpawnsManager.html",[59,0.319,417,3.57]],["body/classes/PowerSpawnsManager.html",[3,0.077,4,0.066,6,0.066,7,0.726,8,0.297,12,0.274,13,0.008,15,0.006,16,0.006,61,0.349,65,0.373,97,0.416,98,0.551,102,0.433,103,0.418,123,0.654,127,3.77,158,2.905,180,1.356,186,1.861,259,3.345,320,3.153,327,2.039,328,2.015,417,4.061,467,3.77,475,4.45,1042,5.041,1043,6.607,1044,7.371,1045,7.371,1046,5.041,1047,5.041,1048,4.45,1049,5.041,1050,6.607,1051,5.041]],["title/classes/Quad.html",[59,0.319,1052,3.912]],["body/classes/Quad.html",[3,0.034,4,0.029,6,0.048,7,0.399,8,0.365,11,1.659,12,0.299,13,0.009,14,1.29,15,0.004,16,0.004,30,0.992,36,1.065,45,1.571,54,1.674,55,1.348,61,0.155,65,0.205,73,1.674,88,1.933,97,0.476,98,0.508,102,0.532,103,0.514,104,2.166,105,2.229,114,0.674,123,0.29,142,2.289,144,3.688,145,3.424,146,3.424,150,3.424,151,3.424,156,3.424,158,1.29,180,0.842,186,1.617,263,2.715,437,1.804,538,3.204,581,2.924,582,3.688,583,3.688,585,2.924,586,3.688,587,3.688,588,3.688,589,3.688,590,2.924,591,1.804,592,1.804,593,2.924,594,3.688,595,1.674,596,2.924,597,1.804,598,1.804,610,3.204,615,3.204,616,4.041,621,1.977,637,1.804,638,1.977,686,2.924,735,3.611,746,1.412,839,2.715,1052,1.977,1053,3.63,1054,3.63,1055,3.63,1056,3.63,1057,4.578,1058,4.578,1059,3.63,1060,3.63,1061,4.578,1062,4.578,1063,4.578,1064,4.578,1065,4.578,1066,4.578,1067,3.63,1068,4.578,1069,4.578,1070,3.63,1071,3.63,1072,3.63,1073,3.204,1074,5.266,1075,3.63,1076,4.578,1077,2.239,1078,2.239,1079,2.239,1080,2.239,1081,1.977,1082,2.239,1083,2.239,1084,2.239,1085,1.977,1086,1.977,1087,1.804,1088,2.239,1089,2.239,1090,2.239,1091,2.239,1092,2.239,1093,2.239,1094,2.239,1095,2.239,1096,2.239,1097,2.239,1098,2.239,1099,2.239,1100,2.239,1101,2.239,1102,2.239,1103,2.239,1104,2.239,1105,2.239,1106,2.239]],["title/classes/RampartPlans.html",[59,0.319,1107,3.912]],["body/classes/RampartPlans.html",[3,0.072,4,0.062,6,0.062,7,0.693,8,0.449,12,0.316,13,0.009,14,4.105,15,0.006,16,0.006,30,1.65,36,1.46,61,0.326,65,0.356,97,0.43,102,0.653,103,0.632,120,2.046,123,0.61,165,4.492,166,5.572,167,6.288,168,5.572,169,4.154,170,2.968,171,4.154,172,4.154,173,4.154,174,4.721,175,3.303,176,4.154,177,4.154,1107,5.572,1108,4.706,1109,6.313]],["title/classes/RangedDefender.html",[59,0.319,1110,3.912]],["body/classes/RangedDefender.html",[3,0.068,4,0.059,6,0.059,8,0.52,11,1.324,12,0.258,13,0.009,15,0.006,16,0.006,20,1.932,36,1.124,61,0.311,65,0.345,97,0.465,98,0.557,102,0.596,103,0.577,113,1.453,114,2.093,119,2.702,120,1.98,121,2.25,123,0.581,124,1.609,125,1.609,131,1.651,132,1.995,133,2.192,146,5.196,942,6.134,943,5.392,944,6.134,945,6.134,946,3.957,947,3.611,1110,3.957,1111,4.482]],["title/classes/RemoteBuilder.html",[59,0.319,1112,3.912]],["body/classes/RemoteBuilder.html",[3,0.065,4,0.056,6,0.056,8,0.516,11,1.47,12,0.252,13,0.009,15,0.006,16,0.006,20,1.871,36,1.346,61,0.297,65,0.334,97,0.468,98,0.574,102,0.582,103,0.563,113,1.387,114,1.289,116,4.082,119,2.637,120,1.918,121,2.18,123,0.555,124,1.536,125,1.536,131,1.577,132,1.947,133,2.123,272,2.278,327,1.826,384,4.499,418,2.575,439,2.839,532,3.753,1112,3.777,1113,4.279,1114,3.925,1115,4.499,1116,5.987,1117,3.2,1118,2.839]],["title/classes/RemoteCoreAttacker.html",[59,0.319,1119,3.912]],["body/classes/RemoteCoreAttacker.html",[3,0.067,4,0.058,6,0.058,8,0.514,11,1.307,12,0.224,13,0.009,15,0.006,16,0.006,20,1.906,36,1.109,61,0.305,65,0.34,97,0.471,98,0.553,102,0.517,103,0.5,113,1.425,114,1.324,116,4.14,119,2.675,120,1.954,121,2.221,123,0.57,124,1.577,125,1.577,131,1.619,132,1.974,133,2.163,158,2.533,272,2.34,327,1.86,384,4.563,418,2.645,532,3.806,746,2.772,1114,4.563,1115,4.563,1118,2.916,1119,3.88,1120,4.395,1121,6.878,1122,4.395]],["title/classes/RemoteDefender.html",[59,0.319,1123,3.912]],["body/classes/RemoteDefender.html",[3,0.073,4,0.063,6,0.063,8,0.485,11,1.561,12,0.238,13,0.008,15,0.006,16,0.006,20,2.025,36,1.178,61,0.333,65,0.361,97,0.451,98,0.478,102,0.549,103,0.531,113,1.558,114,1.447,116,4.333,119,2.799,120,2.075,121,2.359,123,0.623,124,1.725,125,1.725,131,1.771,132,2.066,133,2.297,158,2.77,272,2.559,327,1.976,418,2.892,532,3.983,746,3.031,747,4.242,947,3.871,1123,4.242,1124,4.806,1125,7.199]],["title/classes/RemoteDismantler.html",[59,0.319,1126,3.912]],["body/classes/RemoteDismantler.html",[3,0.068,4,0.059,6,0.059,8,0.508,11,1.62,12,0.228,13,0.009,15,0.006,16,0.006,20,1.937,36,1.127,61,0.312,65,0.346,97,0.466,98,0.52,102,0.526,103,0.508,113,1.459,114,1.355,116,4.19,119,2.707,120,1.985,121,2.257,123,0.584,124,1.615,125,1.615,131,1.658,132,1.999,133,2.198,145,5.207,158,2.594,272,2.396,327,1.89,418,2.708,452,3.365,532,3.853,746,2.838,1114,4.619,1115,4.619,1118,2.986,1126,3.973,1127,4.5]],["title/classes/RemoteHarvester.html",[59,0.319,1128,3.912]],["body/classes/RemoteHarvester.html",[3,0.05,4,0.043,6,0.043,8,0.52,11,1.407,12,0.27,13,0.009,15,0.005,16,0.005,20,1.551,30,1.714,36,1.337,41,2.909,61,0.228,65,0.277,73,2.464,97,0.476,98,0.543,102,0.624,103,0.603,113,1.068,114,0.992,116,3.525,119,2.278,120,1.59,121,1.807,122,3.667,123,0.427,124,1.182,125,1.182,131,1.214,132,1.681,133,1.76,134,2.654,135,4.868,186,1.167,272,1.754,327,1.513,384,3.886,418,2.952,439,3.254,532,3.241,1114,3.254,1115,3.886,1116,5.171,1117,2.464,1118,2.186,1128,2.909,1129,3.295,1130,4.718,1131,5.171,1132,4.329,1133,4.329,1134,5.858,1135,3.295,1136,2.909,1137,3.295,1138,4.329,1139,3.295]],["title/classes/RemoteHauler.html",[59,0.319,1140,3.912]],["body/classes/RemoteHauler.html",[3,0.044,4,0.038,6,0.038,8,0.532,11,1.72,12,0.269,13,0.009,15,0.004,16,0.004,20,1.413,30,1.321,36,1.276,46,2.347,61,0.202,65,0.252,97,0.48,98,0.539,102,0.62,103,0.599,113,0.944,114,1.346,116,3.271,119,2.114,120,1.449,121,1.646,123,0.378,124,1.046,125,1.046,131,1.073,132,1.56,133,1.604,135,4.278,180,1,272,1.551,327,1.379,384,3.606,418,1.753,439,2.965,443,2.572,532,3.008,735,3.996,1114,2.965,1115,3.606,1117,2.179,1118,1.933,1130,4.379,1132,3.945,1136,2.572,1140,2.572,1141,2.913,1142,5.436,1143,5.436,1144,5.436,1145,5.436,1146,5.436,1147,4.468,1148,4.468,1149,4.468,1150,2.913,1151,2.913,1152,4.468,1153,2.913,1154,2.913]],["title/classes/RemoteReserver.html",[59,0.319,1155,3.912]],["body/classes/RemoteReserver.html",[3,0.057,4,0.049,6,0.049,8,0.529,11,1.369,12,0.235,13,0.009,15,0.005,16,0.005,20,1.706,36,1.27,61,0.26,65,0.304,97,0.483,98,0.586,102,0.542,103,0.524,113,1.217,114,1.131,116,3.801,119,2.456,120,1.749,121,1.988,123,0.487,124,1.347,125,1.347,131,1.383,132,1.813,133,1.936,272,1.999,327,1.665,384,4.19,418,2.259,439,2.49,527,4.432,532,3.494,1114,3.579,1115,4.19,1117,2.807,1118,2.49,1130,5.087,1155,3.314,1156,3.754,1157,6.315,1158,6.315,1159,6.315,1160,6.315]],["title/classes/RemotesManager.html",[59,0.319,365,3.57]],["body/classes/RemotesManager.html",[3,0.064,4,0.055,6,0.055,7,0.64,8,0.449,11,0.907,12,0.293,13,0.009,15,0.006,16,0.006,36,1.518,61,0.29,65,0.329,97,0.445,98,0.569,102,0.654,103,0.632,123,0.543,175,2.936,180,1.233,186,1.963,320,2.985,325,5.142,327,2.236,328,1.673,365,3.37,382,3.862,439,4.808,444,2.776,1032,3.694,1161,4.184,1162,5.825,1163,5.825,1164,5.825,1165,4.184,1166,4.184,1167,4.184,1168,3.694,1169,4.184,1170,4.184,1171,4.184]],["title/classes/RequestHauler.html",[59,0.319,1172,3.57]],["body/classes/RequestHauler.html",[3,0.084,4,0.072,6,0.072,8,0.412,12,0.26,13,0.008,15,0.007,16,0.007,20,2.212,36,1.287,61,0.382,65,0.395,97,0.395,98,0.523,102,0.6,103,0.581,113,1.785,114,1.659,119,2.989,120,2.268,121,2.577,123,0.714,124,1.976,125,1.976,131,2.029,132,2.207,133,2.51,1172,4.436,1173,5.507]],["title/classes/RespawnManager.html",[59,0.319,1174,3.912]],["body/classes/RespawnManager.html",[3,0.092,4,0.079,6,0.079,11,1.309,13,0.008,15,0.007,16,0.007,61,0.418,62,2.714,65,0.418,97,0.418,98,0.451,180,1.474,186,1.762,316,4.862,1174,5.328,1175,6.036,1176,6.036,1177,6.036,1178,6.036,1179,6.036,1180,8.014]],["title/classes/RoomPruningManager.html",[59,0.319,1181,3.912]],["body/classes/RoomPruningManager.html",[3,0.092,4,0.079,6,0.079,7,0.814,12,0.224,13,0.008,15,0.007,16,0.007,30,1.309,61,0.418,65,0.418,97,0.341,98,0.451,104,2.482,105,2.555,180,1.474,1181,5.328,1182,6.036,1183,7.407,1184,7.407,1185,6.036,1186,6.036]],["title/interfaces/RoomVisual.html",[0,1.59,1187,3.912]],["body/interfaces/RoomVisual.html",[2,1.035,3,0.045,4,0.039,6,0.039,7,0.497,8,0.441,12,0.31,13,0.008,15,0.004,16,0.004,30,1.956,36,0.832,58,5.6,65,0.255,97,0.433,98,0.494,102,0.643,103,0.622,136,3.643,137,2.213,170,4.722,174,6.179,175,5.669,385,3.852,437,3.643,476,4.845,595,5.431,603,6.611,707,3.382,1187,5.844,1188,4.522,1189,4.522,1190,4.522,1191,4.522,1192,4.522,1193,4.522,1194,2.959,1195,2.959,1196,2.959,1197,2.959,1198,2.959,1199,4.522,1200,2.959,1201,2.959,1202,3.643,1203,2.959,1204,2.959,1205,4.522,1206,4.522,1207,3.992]],["title/classes/RoomVisualsManager.html",[59,0.319,1208,3.912]],["body/classes/RoomVisualsManager.html",[3,0.042,4,0.036,6,0.036,7,0.47,8,0.468,12,0.299,13,0.009,15,0.004,16,0.004,30,1.868,61,0.191,65,0.242,97,0.478,98,0.561,102,0.682,103,0.659,123,0.358,174,5.851,180,0.966,186,2.106,223,4.23,327,1.827,522,4.083,529,1.659,1208,2.434,1209,2.757,1210,4.635,1211,5.251,1212,5.251,1213,4.635,1214,4.283,1215,4.283,1216,4.283,1217,4.283,1218,4.283,1219,4.283,1220,4.283,1221,4.283,1222,4.283,1223,4.283,1224,4.635,1225,5.251,1226,4.283,1227,2.757,1228,2.757,1229,2.757,1230,2.757,1231,2.757,1232,2.757,1233,2.757,1234,2.757,1235,2.757,1236,2.757,1237,2.757]],["title/classes/RoomsManager.html",[59,0.319,1238,3.912]],["body/classes/RoomsManager.html",[3,0.092,4,0.079,6,0.079,13,0.008,15,0.007,16,0.007,61,0.418,65,0.418,82,7.075,97,0.452,98,0.599,123,0.961,180,1.474,1238,5.328,1239,6.036,1240,8.014]],["title/classes/RuinManager.html",[59,0.319,1241,3.912]],["body/classes/RuinManager.html",[3,0.088,4,0.076,6,0.076,7,0.79,8,0.34,12,0.268,13,0.008,15,0.007,16,0.007,61,0.399,65,0.406,97,0.406,98,0.537,102,0.494,103,0.478,123,0.747,522,5.194,523,5.869,527,5.507,529,3.466,1241,5.084,1242,5.76]],["title/classes/Scout.html",[59,0.319,1243,3.57]],["body/classes/Scout.html",[3,0.065,4,0.056,6,0.056,7,0.652,8,0.519,11,1.286,12,0.273,13,0.009,15,0.006,16,0.006,20,1.876,36,1.348,61,0.298,65,0.335,97,0.449,98,0.508,102,0.509,103,0.564,113,1.392,114,1.294,119,2.642,120,1.923,121,2.186,123,0.557,124,1.541,125,1.541,131,1.583,132,2.104,133,2.129,157,3.792,272,2.287,575,3.792,839,3.212,973,5.999,1243,4.778,1244,4.295,1245,5.932,1246,5.932,1247,6.795,1248,6.795,1249,6.795,1250,4.295,1251,4.295,1252,4.295,1253,4.295]],["title/interfaces/Settings.html",[0,1.59,907,3.314]],["body/interfaces/Settings.html",[2,0.863,3,0.038,4,0.032,6,0.032,7,0.431,11,1.915,12,0.317,13,0.009,15,0.004,16,0.004,30,1.318,36,1.191,39,1.732,53,2.363,55,2.942,67,2.179,69,4.315,75,4.315,132,1.127,165,1.557,183,1.846,256,2.179,258,3.162,259,2.605,267,1.988,268,3.466,284,6.319,288,2.179,327,0.762,444,1.638,452,1.846,462,2.179,464,6.178,496,1.988,557,1.988,558,1.846,626,2.179,632,4.315,645,2.179,646,1.638,654,4.315,664,2.179,667,3.937,669,5.367,674,2.179,746,1.557,813,5.715,907,1.846,936,4.315,937,2.179,1048,3.466,1085,2.179,1086,2.179,1210,4.315,1213,4.315,1224,4.315,1254,2.469,1255,4.888,1256,4.888,1257,4.888,1258,4.888,1259,4.888,1260,4.888,1261,4.888,1262,4.888,1263,4.888,1264,4.888,1265,4.888,1266,4.888,1267,5.57,1268,4.888,1269,4.888,1270,4.888,1271,4.888,1272,3.926,1273,3.466,1274,2.469,1275,2.469,1276,5.57,1277,2.469,1278,2.469,1279,2.469,1280,2.469,1281,2.469,1282,2.469,1283,2.469,1284,2.469,1285,2.469,1286,2.469,1287,1.988,1288,2.469,1289,2.469,1290,2.469,1291,2.469,1292,2.469,1293,2.469,1294,3.926,1295,2.469,1296,2.469,1297,2.469,1298,2.469,1299,2.469,1300,2.469]],["title/classes/SourceHarvester.html",[59,0.319,1301,3.57]],["body/classes/SourceHarvester.html",[3,0.06,4,0.052,6,0.052,8,0.525,11,1.724,12,0.241,13,0.009,15,0.005,16,0.005,20,1.765,30,0.853,36,1.027,61,0.273,65,0.315,97,0.478,98,0.527,102,0.556,103,0.538,113,1.276,114,1.186,119,2.521,120,1.809,121,2.056,122,4.849,123,0.511,124,1.413,125,1.413,131,1.45,132,1.861,133,2.003,180,1.193,327,1.722,532,3.588,1131,5.724,1133,4.927,1138,4.927,1301,3.171,1302,3.937,1303,6.484,1304,6.484,1305,6.484,1306,6.484,1307,3.937,1308,3.937]],["title/classes/SourceManager.html",[59,0.319,368,3.57]],["body/classes/SourceManager.html",[3,0.079,4,0.068,6,0.068,7,0.741,8,0.307,12,0.278,13,0.009,15,0.007,16,0.007,61,0.361,65,0.381,97,0.447,98,0.591,102,0.447,103,0.432,123,0.675,180,1.377,186,1.884,320,3.181,328,2.08,368,4.192,382,4.313,668,3.452,1309,5.204,1310,6.745,1311,6.029,1312,7.484]],["title/classes/SpawnRequestsManager.html",[59,0.319,370,3.57]],["body/classes/SpawnRequestsManager.html",[3,0.05,4,0.043,6,0.043,7,0.536,8,0.193,12,0.27,13,0.009,15,0.005,16,0.005,26,2.173,30,1.265,61,0.227,65,0.276,97,0.483,98,0.639,102,0.281,103,0.272,104,1.347,105,1.387,123,0.425,127,2.45,142,3.681,180,1.074,186,2.143,190,3.873,320,2.746,328,1.31,370,2.639,458,2.639,465,5.153,668,2.173,710,4.702,786,4.702,962,4.702,1172,4.702,1243,4.702,1301,4.702,1313,3.276,1314,4.883,1315,4.883,1316,4.883,1317,4.883,1318,5.837,1319,5.837,1320,5.837,1321,5.837,1322,5.837,1323,5.837,1324,3.276,1325,3.276,1326,2.892,1327,3.276,1328,2.892,1329,3.276,1330,3.276]],["title/classes/SpawningStructuresManager.html",[59,0.319,369,3.57]],["body/classes/SpawningStructuresManager.html",[3,0.041,4,0.035,6,0.068,7,0.46,8,0.439,12,0.301,13,0.009,15,0.004,16,0.004,26,1.777,30,1.773,52,2.003,61,0.186,65,0.236,70,3.132,95,2.365,97,0.466,98,0.605,102,0.639,103,0.618,123,0.347,127,2.003,158,1.544,180,0.948,184,2.778,186,2.059,189,2.939,259,1.777,283,2.365,320,2.537,327,1.799,328,1.071,369,2.158,385,3.618,458,2.158,675,3.696,869,3.618,1311,4.153,1328,5.918,1331,2.679,1332,4.187,1333,4.187,1334,4.187,1335,4.187,1336,4.187,1337,4.187,1338,4.187,1339,4.187,1340,4.187,1341,5.155,1342,5.155,1343,4.187,1344,4.187,1345,4.187,1346,5.155,1347,5.155,1348,4.187,1349,2.679,1350,2.679,1351,2.679,1352,5.155,1353,2.679,1354,4.187,1355,4.187,1356,4.187,1357,2.679,1358,4.187,1359,2.679,1360,2.679,1361,2.679,1362,2.679,1363,2.679,1364,2.679,1365,2.679,1366,2.679,1367,2.679]],["title/interfaces/SpeechStyle.html",[0,1.59,1202,3.57]],["body/interfaces/SpeechStyle.html",[2,1.787,3,0.078,4,0.067,6,0.067,7,0.732,8,0.527,12,0.311,13,0.008,15,0.007,16,0.007,30,1.705,36,1.589,137,3.821,140,6.549,554,6.549,1202,4.116,1368,7.419,1369,7.419,1370,7.419,1371,7.419]],["title/classes/StatsManager.html",[59,0.319,1372,3.912]],["body/classes/StatsManager.html",[3,0.054,4,0.047,6,0.047,8,0.441,11,1.129,12,0.278,13,0.009,15,0.005,16,0.005,29,4.256,30,1.93,36,1.457,61,0.248,65,0.294,97,0.456,98,0.577,102,0.643,103,0.621,104,2.527,105,2.857,132,1.938,170,3.285,998,4.598,999,3.157,1372,3.157,1373,3.576,1374,6.144,1375,6.144,1376,6.144,1377,5.209,1378,5.209,1379,5.209,1380,5.209,1381,5.209,1382,3.576,1383,5.209,1384,5.209,1385,3.576,1386,3.576,1387,3.576,1388,5.209,1389,3.576,1390,7.488,1391,3.576,1392,3.576,1393,3.576,1394,5.209,1395,3.576]],["title/classes/StoringStructuresManager.html",[59,0.319,371,3.57]],["body/classes/StoringStructuresManager.html",[3,0.086,4,0.074,6,0.074,7,0.783,8,0.334,12,0.265,13,0.008,15,0.007,16,0.007,61,0.393,65,0.402,97,0.402,98,0.532,102,0.487,103,0.471,123,0.736,180,1.434,186,1.696,320,3.253,327,1.751,328,2.268,371,4.57,869,5.469,1396,5.673]],["title/classes/TerminalManager.html",[59,0.319,372,3.57]],["body/classes/TerminalManager.html",[3,0.031,4,0.027,6,0.027,7,0.368,8,0.463,11,1.469,12,0.312,13,0.009,14,3.407,15,0.003,16,0.003,29,2.11,30,1.777,36,1.202,58,6.129,61,0.14,65,0.189,97,0.475,98,0.556,102,0.675,103,0.652,104,0.833,105,0.858,123,0.263,132,1.227,180,0.786,186,1.661,320,2.237,328,0.81,372,1.632,382,2.463,410,1.789,467,2.502,707,4.889,1397,2.027,1398,3.346,1399,3.346,1400,3.346,1401,3.346,1402,4.273,1403,3.346,1404,4.273,1405,4.273,1406,4.273,1407,3.346,1408,3.346,1409,4.273,1410,4.273,1411,3.346,1412,3.346,1413,4.273,1414,4.273,1415,4.273,1416,4.273,1417,4.273,1418,3.346,1419,3.346,1420,3.346,1421,3.346,1422,3.346,1423,3.346,1424,3.346,1425,3.346,1426,3.346,1427,2.027,1428,2.027,1429,2.027,1430,2.027,1431,4.96,1432,7.569,1433,2.027,1434,2.027,1435,2.027,1436,2.027,1437,2.027,1438,2.027,1439,2.027,1440,2.027,1441,5.218,1442,2.027,1443,2.027,1444,2.027,1445,3.346,1446,2.027,1447,2.027,1448,2.027,1449,2.027,1450,2.027,1451,2.027]],["title/classes/TickInit.html",[59,0.319,1452,3.912]],["body/classes/TickInit.html",[3,0.086,4,0.074,6,0.074,13,0.009,15,0.007,16,0.007,61,0.393,65,0.402,97,0.475,98,0.629,180,1.434,327,2.199,1452,5.008,1453,5.673,1454,7.793,1455,7.793,1456,7.793,1457,7.793]],["title/classes/TombstoneManager.html",[59,0.319,1458,3.912]],["body/classes/TombstoneManager.html",[3,0.088,4,0.076,6,0.076,7,0.79,8,0.34,12,0.268,13,0.008,15,0.007,16,0.007,61,0.399,65,0.406,97,0.406,98,0.537,102,0.494,103,0.478,123,0.747,522,5.194,523,5.869,527,5.507,529,3.466,1458,5.084,1459,5.76]],["title/interfaces/TowerDamageCoord.html",[0,1.59,1460,3.314]],["body/interfaces/TowerDamageCoord.html",[2,2.242,3,0.098,4,0.084,6,0.084,7,0.844,12,0.238,13,0.008,15,0.008,16,0.008,22,5.774,30,1.666,113,2.079,729,4.5,735,3.548,1460,4.795]],["title/interfaces/TowerDamageCoord-1.html",[0,1.326,53,2.224,1460,2.763]],["body/interfaces/TowerDamageCoord-1.html",[2,2.242,3,0.098,4,0.084,6,0.084,7,0.844,12,0.238,13,0.008,15,0.008,16,0.008,22,5.774,30,1.666,113,2.079,735,3.548,736,4.5,1460,4.795]],["title/classes/TowerManager.html",[59,0.319,374,3.57]],["body/classes/TowerManager.html",[3,0.058,4,0.05,6,0.05,7,0.597,8,0.224,11,1.504,12,0.258,13,0.009,15,0.005,16,0.005,20,1.199,30,0.822,61,0.263,65,0.307,88,2.893,97,0.484,98,0.548,102,0.325,103,0.315,123,0.492,180,1.168,186,2.118,320,2.891,328,1.516,374,3.054,869,4.457,1287,3.054,1311,5.115,1461,3.792,1462,5.434,1463,5.434,1464,6.351,1465,6.351,1466,6.351,1467,6.351,1468,6.351,1469,6.351,1470,6.351,1471,6.351,1472,6.351,1473,6.351,1474,5.434,1475,3.792,1476,3.792,1477,3.792,1478,3.792]],["title/classes/UserScriptManager.html",[59,0.319,1479,3.912]],["body/classes/UserScriptManager.html",[3,0.099,4,0.086,6,0.086,13,0.008,15,0.008,16,0.008,61,0.452,65,0.438,97,0.368,98,0.487,180,1.524,1479,5.758,1480,6.523]],["title/classes/Vanguard.html",[59,0.319,1481,3.912]],["body/classes/Vanguard.html",[3,0.065,4,0.056,6,0.056,8,0.519,11,1.473,12,0.273,13,0.009,15,0.006,16,0.006,20,1.876,30,1.286,36,1.091,61,0.298,65,0.335,97,0.46,98,0.547,102,0.629,103,0.608,113,1.392,114,1.294,119,2.642,120,1.923,121,2.186,122,4.436,123,0.557,124,1.541,125,1.541,131,1.583,132,1.951,133,2.129,134,3.46,135,3.014,170,2.709,180,1.25,687,3.014,733,2.585,1481,3.792,1482,4.295,1483,6.795,1484,6.795,1485,5.932,1486,4.295]],["title/classes/WorkRequestManager.html",[59,0.319,375,3.57]],["body/classes/WorkRequestManager.html",[3,0.069,4,0.059,6,0.059,7,0.675,8,0.411,11,1.331,12,0.278,13,0.009,15,0.006,16,0.006,30,1.331,61,0.313,65,0.347,97,0.456,98,0.603,102,0.599,103,0.579,104,1.858,105,1.913,123,0.586,170,2.849,180,1.283,186,2,320,3.056,327,1.895,328,1.806,375,3.639,382,4.021,749,6.608,1487,4.518,1488,6.141,1489,6.977,1490,6.141,1491,4.518,1492,4.518,1493,4.518,1494,4.518]],["title/dependencies.html",[1495,3.261,1496,4.296]],["body/dependencies.html",[13,0.009,15,0.008,16,0.008,165,4.09,668,4.303,1496,5.224,1497,6.486,1498,6.486,1499,6.486,1500,6.486,1501,6.486,1502,6.486,1503,6.486,1504,6.486]],["title/index.html",[6,0.048,1505,3.261,1506,3.261]],["body/index.html",[4,0.068,13,0.003,15,0.002,16,0.002,29,0.877,35,0.976,37,2.145,39,2.27,51,3.545,52,1.041,66,1.228,68,1.121,76,2.419,77,1.957,96,1.228,100,1.121,103,0.115,158,1.864,160,2.606,162,1.228,180,1.148,186,1.151,255,1.121,263,1.041,265,2.145,284,5.644,299,1.957,316,5.314,385,0.976,423,1.228,444,3.663,466,1.228,468,1.228,470,1.041,497,1.228,504,2.856,506,1.228,518,1.228,558,2.419,635,3.896,646,2.572,667,4.447,668,2.572,676,2.856,723,1.228,746,0.877,765,1.228,810,2.856,811,2.145,812,1.228,823,2.145,830,1.228,907,2.419,952,1.228,953,1.228,956,2.856,961,1.228,1006,1.121,1025,1.228,1027,1.228,1028,2.145,1073,1.228,1081,1.228,1087,1.121,1168,1.228,1273,2.145,1287,2.606,1326,1.228,1441,2.145,1496,1.121,1507,1.121,1508,3.896,1509,1.391,1510,1.391,1511,1.391,1512,2.43,1513,1.391,1514,1.391,1515,1.391,1516,1.391,1517,1.391,1518,1.391,1519,1.391,1520,1.391,1521,1.391,1522,4.401,1523,1.391,1524,1.391,1525,1.391,1526,1.391,1527,1.391,1528,1.391,1529,1.391,1530,5.794,1531,1.391,1532,1.391,1533,1.391,1534,2.43,1535,1.391,1536,1.391,1537,1.391,1538,1.391,1539,1.391,1540,1.391,1541,1.391,1542,5.794,1543,2.43,1544,1.391,1545,1.391,1546,3.877,1547,2.43,1548,2.43,1549,2.43,1550,1.228,1551,1.391,1552,1.391,1553,1.391,1554,2.43,1555,1.391,1556,1.391,1557,1.391,1558,1.391,1559,1.391,1560,1.391,1561,1.391,1562,3.877,1563,1.391,1564,1.391,1565,2.43,1566,1.391,1567,2.43,1568,1.391,1569,2.43,1570,2.43,1571,1.391,1572,3.877,1573,3.877,1574,7.222,1575,1.391,1576,3.235,1577,1.391,1578,1.391,1579,1.391,1580,1.391,1581,1.391,1582,2.856,1583,2.43,1584,1.391,1585,1.391,1586,2.43,1587,1.391,1588,4.401,1589,2.43,1590,1.228,1591,1.391,1592,3.235,1593,2.43,1594,3.235,1595,1.391,1596,3.877,1597,1.391,1598,4.401,1599,1.391,1600,4.837,1601,1.391,1602,4.837,1603,2.43,1604,1.391,1605,1.391,1606,2.43,1607,3.235,1608,1.391,1609,2.43,1610,1.391,1611,1.391,1612,2.43,1613,3.235,1614,3.235,1615,2.43,1616,1.391,1617,1.391,1618,1.391,1619,1.391,1620,1.391,1621,2.43,1622,1.391,1623,1.391,1624,2.43,1625,1.391,1626,1.391,1627,1.391,1628,1.391,1629,1.391,1630,1.391,1631,1.391,1632,1.391,1633,1.391,1634,1.391,1635,1.391,1636,2.43,1637,1.391,1638,1.391,1639,1.391,1640,1.391,1641,1.391,1642,1.391,1643,1.391,1644,1.391,1645,1.391,1646,1.391,1647,1.391,1648,1.391,1649,2.145,1650,1.391,1651,2.43,1652,1.391,1653,1.391,1654,1.391,1655,1.391,1656,2.43,1657,1.391,1658,1.391,1659,1.391,1660,1.391,1661,2.43,1662,1.391,1663,5.206,1664,1.391,1665,2.43,1666,1.391,1667,3.235,1668,1.391,1669,1.391,1670,1.391,1671,1.391,1672,1.391,1673,2.145,1674,3.235,1675,1.391,1676,1.391,1677,1.391,1678,1.391,1679,3.235,1680,1.391,1681,1.228,1682,1.391,1683,1.391,1684,1.391,1685,3.235,1686,2.43,1687,1.228,1688,1.391,1689,1.391,1690,3.877,1691,1.391,1692,1.391,1693,2.43,1694,1.391,1695,1.391,1696,1.391,1697,1.391,1698,3.235,1699,1.391,1700,1.391,1701,1.391,1702,1.391,1703,1.391,1704,3.235,1705,2.43,1706,1.391,1707,1.391,1708,3.235,1709,3.422,1710,3.235,1711,1.391,1712,1.391,1713,3.877,1714,1.391,1715,1.391,1716,2.43,1717,3.235,1718,3.235,1719,1.391,1720,1.391,1721,1.391,1722,1.391,1723,2.43,1724,1.391,1725,1.391,1726,1.391,1727,1.391,1728,1.228,1729,1.391,1730,1.391,1731,1.391,1732,1.391,1733,2.43,1734,2.43,1735,1.391,1736,1.391,1737,2.43,1738,2.43,1739,1.391,1740,1.391,1741,1.391,1742,1.391,1743,1.391,1744,1.391,1745,1.391,1746,1.391,1747,2.43,1748,1.391,1749,1.391,1750,1.391,1751,2.43,1752,1.391,1753,1.391,1754,1.391,1755,1.391,1756,1.391,1757,2.43,1758,1.391,1759,1.391,1760,1.391,1761,1.391,1762,1.391,1763,1.391,1764,1.391,1765,1.391,1766,1.391,1767,1.391,1768,1.391,1769,1.391,1770,1.391,1771,1.391,1772,1.391,1773,1.391,1774,1.391,1775,1.391,1776,1.391,1777,2.43,1778,2.43,1779,1.391,1780,1.391,1781,1.391,1782,1.391,1783,1.391,1784,1.391,1785,1.391,1786,2.43,1787,1.391,1788,1.391,1789,1.228,1790,1.391,1791,1.391,1792,1.391,1793,1.391,1794,1.391,1795,1.391,1796,1.391,1797,1.391,1798,1.391,1799,1.391,1800,1.391,1801,1.391,1802,1.391,1803,1.391,1804,1.391,1805,1.391,1806,2.43,1807,1.391,1808,1.391,1809,1.391,1810,1.391,1811,1.391,1812,1.228,1813,1.391,1814,1.391,1815,1.391]],["title/license.html",[1505,3.261,1506,3.261,1816,2.976]],["body/license.html",[13,0.006,15,0.006,16,0.006,267,3.611,444,4.052,470,3.352,573,3.611,733,2.698,1087,5.597,1507,3.611,1508,3.611,1550,3.957,1673,5.392,1681,5.392,1687,3.957,1709,3.957,1789,3.957,1812,3.957,1816,3.611,1817,4.482,1818,6.948,1819,4.482,1820,6.108,1821,4.482,1822,4.482,1823,4.482,1824,4.482,1825,4.482,1826,4.482,1827,8.509,1828,4.482,1829,4.482,1830,4.482,1831,4.482,1832,4.482,1833,4.482,1834,4.482,1835,4.482,1836,4.482,1837,4.482,1838,4.482,1839,4.482,1840,6.108,1841,4.482,1842,4.482,1843,4.482,1844,4.482,1845,4.482,1846,6.108,1847,6.108,1848,4.482,1849,4.482,1850,4.482,1851,4.482,1852,4.482,1853,4.482,1854,4.482,1855,4.482,1856,4.482,1857,4.482,1858,4.482,1859,4.482,1860,4.482,1861,4.482,1862,4.482,1863,4.482,1864,4.482,1865,4.482,1866,4.482,1867,4.482,1868,4.482,1869,4.482,1870,4.482,1871,4.482,1872,4.482,1873,4.482,1874,4.482]],["title/modules.html",[1875,5.35]],["body/modules.html",[13,0.008,15,0.008,16,0.008,1875,6.225]],["title/overview.html",[1876,5.35]],["body/overview.html",[2,2.406,13,0.008,15,0.008,16,0.008,61,0.477,1876,6.073,1877,6.88,1878,6.88]],["title/properties.html",[7,0.586,1495,3.261]],["body/properties.html",[7,0.626,13,0.009,15,0.007,16,0.007,62,2.564,646,3.783,668,4.744,1507,6.934,1508,6.292,1582,5.033,1590,5.033,1649,6.896,1816,4.593,1879,5.702,1880,5.702,1881,7.811,1882,7.811,1883,5.702,1884,5.702,1885,5.702,1886,5.702]],["title/miscellaneous/typealiases.html",[1887,3.261,1888,5.333]],["body/miscellaneous/typealiases.html",[6,0.076,12,0.216,13,0.008,15,0.007,16,0.007,38,4.352,137,4.352,309,4.687,310,5.137,557,4.687,687,4.084,1031,6.392,1207,6.392,1728,5.137,1887,5.137,1889,7.241,1890,5.819,1891,7.241,1892,7.241,1893,5.819,1894,7.241,1895,5.819,1896,5.819,1897,5.819,1898,5.819,1899,5.819,1900,5.819,1901,5.819,1902,5.819]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/AdvancedFindDistanceOpts.html":{},"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"interfaces/AnimatedStyle.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/Collectivizer.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ConstructionSiteManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"interfaces/CreepCombatData.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"interfaces/CustomLogOpts.html":{},"interfaces/DeadCreepNames.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/EndTickManager.html":{},"interfaces/EnemyThreatData.html":{},"interfaces/ErrorData.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"interfaces/FeatureFlagConfig.html":{},"classes/FeatureFlagManager.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/InitManager.html":{},"classes/Int32Queue.html":{},"classes/InterShardPlanner.html":{},"interfaces/InterpretedRoomEvent.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MemHack.html":{},"classes/MigrationManager.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"interfaces/OutputArgs.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"classes/RespawnManager.html":{},"classes/RoomPruningManager.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{},"classes/RoomsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"interfaces/Settings.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"interfaces/SpeechStyle.html":{},"classes/StatsManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TickInit.html":{},"classes/TombstoneManager.html":{},"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{},"classes/TowerManager.html":{},"classes/UserScriptManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":55,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/CommuneManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/PlayerManager.html":{},"classes/Quad.html":{},"interfaces/Settings.html":{}}}],["0.1",{"_index":682,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["0.6.1",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":276,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["1",{"_index":53,"title":{"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"interfaces/PlanStampsArgs-1.html":{},"interfaces/TowerDamageCoord-1.html":{}},"body":{"interfaces/AllyRequest.html":{},"classes/DynamicSquad.html":{},"interfaces/Settings.html":{}}}],["1.2",{"_index":280,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["10",{"_index":432,"title":{},"body":{"classes/CommuneManager.html":{}}}],["10.3.0",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":1386,"title":{},"body":{"classes/StatsManager.html":{}}}],["10000",{"_index":889,"title":{},"body":{"classes/LabManager.html":{}}}],["100000",{"_index":1186,"title":{},"body":{"classes/RoomPruningManager.html":{}}}],["12",{"_index":428,"title":{},"body":{"classes/CommuneManager.html":{}}}],["15000",{"_index":887,"title":{},"body":{"classes/LabManager.html":{}}}],["17.0.0",{"_index":1604,"title":{},"body":{"index.html":{}}}],["2",{"_index":1294,"title":{},"body":{"interfaces/Settings.html":{}}}],["2.109.0",{"_index":1879,"title":{},"body":{"properties.html":{}}}],["20000",{"_index":1493,"title":{},"body":{"classes/WorkRequestManager.html":{}}}],["2022",{"_index":1819,"title":{},"body":{"license.html":{}}}],["21.0.7",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":1878,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":430,"title":{},"body":{"classes/CommuneManager.html":{},"classes/ErrorMapper.html":{}}}],["8",{"_index":1395,"title":{},"body":{"classes/StatsManager.html":{}}}],["88",{"_index":1877,"title":{},"body":{"overview.html":{}}}],["9",{"_index":1327,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["99",{"_index":1297,"title":{},"body":{"interfaces/Settings.html":{}}}],["_allyrequests",{"_index":78,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["_avgcommunespermineral",{"_index":206,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["_combatstrength",{"_index":581,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["_compound",{"_index":1188,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["_compound(type",{"_index":1194,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["_compoundpriority",{"_index":207,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["_consumer",{"_index":657,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["_controllerlink",{"_index":336,"title":{},"body":{"classes/CommuneManager.html":{}}}],["_defaultmincacheamount",{"_index":208,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["_defencestrength",{"_index":1053,"title":{},"body":{"classes/Quad.html":{}}}],["_defensiveramparts",{"_index":337,"title":{},"body":{"classes/CommuneManager.html":{}}}],["_deficits",{"_index":844,"title":{},"body":{"classes/LabManager.html":{}}}],["_enemythreatdataranged",{"_index":1054,"title":{},"body":{"classes/Quad.html":{}}}],["_fastfillerspawnenergycapacity",{"_index":338,"title":{},"body":{"classes/CommuneManager.html":{}}}],["_fluid",{"_index":1189,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["_fluid(type",{"_index":1195,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["_funnelorder",{"_index":209,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["_hassufficientroads",{"_index":339,"title":{},"body":{"classes/CommuneManager.html":{}}}],["_hits",{"_index":1055,"title":{},"body":{"classes/Quad.html":{}}}],["_inputlabs",{"_index":845,"title":{},"body":{"classes/LabManager.html":{}}}],["_marketisfunctional",{"_index":210,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["_maxcombatrequests",{"_index":340,"title":{},"body":{"classes/CommuneManager.html":{}}}],["_maxcommunes",{"_index":211,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["_maxcsitesperroom",{"_index":212,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["_maxupgradestrength",{"_index":341,"title":{},"body":{"classes/CommuneManager.html":{}}}],["_mincredits",{"_index":213,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["_mineral",{"_index":1190,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["_mineral(type",{"_index":1196,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["_minramparthits",{"_index":342,"title":{},"body":{"classes/CommuneManager.html":{}}}],["_minstoredenergy",{"_index":343,"title":{},"body":{"classes/CommuneManager.html":{}}}],["_myorders",{"_index":214,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["_myorderscount",{"_index":215,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["_orders",{"_index":216,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["_outputlabs",{"_index":846,"title":{},"body":{"classes/LabManager.html":{}}}],["_playersbyhate",{"_index":1018,"title":{},"body":{"classes/PlayerManager.html":{}}}],["_rampartrepairtargets",{"_index":344,"title":{},"body":{"classes/CommuneManager.html":{}}}],["_resourcesinstoringstructures",{"_index":217,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["_sourcelinks",{"_index":345,"title":{},"body":{"classes/CommuneManager.html":{}}}],["_storedenergybuildthreshold",{"_index":346,"title":{},"body":{"classes/CommuneManager.html":{}}}],["_storingstructures",{"_index":347,"title":{},"body":{"classes/CommuneManager.html":{}}}],["_structuretypesbybuildpriority",{"_index":348,"title":{},"body":{"classes/CommuneManager.html":{}}}],["_targetenergy",{"_index":349,"title":{},"body":{"classes/CommuneManager.html":{}}}],["_towerrampartrepairthreshold",{"_index":1462,"title":{},"body":{"classes/TowerManager.html":{}}}],["_upgradestructure",{"_index":350,"title":{},"body":{"classes/CommuneManager.html":{}}}],["_workrequestsbyscore",{"_index":218,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["abandon",{"_index":1488,"title":{},"body":{"classes/WorkRequestManager.html":{}}}],["abandon(abandontime",{"_index":1491,"title":{},"body":{"classes/WorkRequestManager.html":{}}}],["abandoncommune",{"_index":745,"title":{},"body":{"classes/FlagManager.html":{}}}],["abandoncommune(flagname",{"_index":754,"title":{},"body":{"classes/FlagManager.html":{}}}],["abandontime",{"_index":1492,"title":{},"body":{"classes/WorkRequestManager.html":{}}}],["above",{"_index":1845,"title":{},"body":{"license.html":{}}}],["accept",{"_index":1809,"title":{},"body":{"index.html":{}}}],["acceptboost",{"_index":859,"title":{},"body":{"classes/LabManager.html":{}}}],["acceptboost(creep",{"_index":898,"title":{},"body":{"classes/LabManager.html":{}}}],["accepting",{"_index":766,"title":{},"body":{"classes/FlagManager.html":{}}}],["accepts",{"_index":604,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["accessors",{"_index":88,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/CollectiveManager.html":{},"classes/CommuneManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/ErrorMapper.html":{},"classes/Int32Queue.html":{},"classes/LabManager.html":{},"classes/PlayerManager.html":{},"classes/Quad.html":{},"classes/TowerManager.html":{}}}],["account",{"_index":1695,"title":{},"body":{"index.html":{}}}],["achieve",{"_index":1628,"title":{},"body":{"index.html":{}}}],["action",{"_index":1869,"title":{},"body":{"license.html":{}}}],["actionabletowerids",{"_index":1463,"title":{},"body":{"classes/TowerManager.html":{}}}],["actions",{"_index":961,"title":{},"body":{"classes/MigrationManager.html":{},"index.html":{}}}],["actiontype",{"_index":837,"title":{},"body":{"interfaces/InterpretedRoomEvent.html":{}}}],["active",{"_index":458,"title":{},"body":{"classes/CommuneManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{}}}],["activeremotepriority",{"_index":1314,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["activespawns",{"_index":1332,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["actually",{"_index":1714,"title":{},"body":{"index.html":{}}}],["add",{"_index":1679,"title":{},"body":{"index.html":{}}}],["added",{"_index":37,"title":{},"body":{"interfaces/AllyRequest.html":{},"index.html":{}}}],["adderrortosegment",{"_index":648,"title":{},"body":{"classes/ErrorExporter.html":{}}}],["adderrortosegment(stack",{"_index":651,"title":{},"body":{"classes/ErrorExporter.html":{}}}],["adds",{"_index":933,"title":{},"body":{"classes/MapVisualsManager.html":{}}}],["advanced",{"_index":1766,"title":{},"body":{"index.html":{}}}],["advancedactivatesafemode",{"_index":562,"title":{},"body":{"classes/DefenceManager.html":{}}}],["advancedattack",{"_index":144,"title":{},"body":{"classes/Antifa.html":{},"classes/Duo.html":{},"classes/Quad.html":{}}}],["advancedattackcores",{"_index":1121,"title":{},"body":{"classes/RemoteCoreAttacker.html":{}}}],["advancedattackenemies",{"_index":1125,"title":{},"body":{"classes/RemoteDefender.html":{}}}],["advanceddefend",{"_index":942,"title":{},"body":{"classes/MeleeDefender.html":{},"classes/RangedDefender.html":{}}}],["advanceddismantle",{"_index":145,"title":{},"body":{"classes/Antifa.html":{},"classes/Duo.html":{},"classes/Quad.html":{},"classes/RemoteDismantler.html":{}}}],["advancedenablepower",{"_index":978,"title":{},"body":{"classes/Operator.html":{}}}],["advancedfinddistanceopts",{"_index":1,"title":{"interfaces/AdvancedFindDistanceOpts.html":{}},"body":{"interfaces/AdvancedFindDistanceOpts.html":{}}}],["advancedgenerateops",{"_index":979,"title":{},"body":{"classes/Operator.html":{}}}],["advancedgeneratepixel",{"_index":230,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["advancedharvestmineral",{"_index":964,"title":{},"body":{"classes/MineralHarvester.html":{}}}],["advancedharvestmineral(mineral",{"_index":965,"title":{},"body":{"classes/MineralHarvester.html":{}}}],["advancedheal",{"_index":584,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{}}}],["advancedprocesspower",{"_index":1044,"title":{},"body":{"classes/PowerSpawnsManager.html":{}}}],["advancedrangedattack",{"_index":146,"title":{},"body":{"classes/Antifa.html":{},"classes/Duo.html":{},"classes/Quad.html":{},"classes/RangedDefender.html":{}}}],["advancedrenew",{"_index":980,"title":{},"body":{"classes/Operator.html":{}}}],["advancedsellpixels",{"_index":231,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["advancedsigncontroller",{"_index":1247,"title":{},"body":{"classes/Scout.html":{}}}],["advancedspawn",{"_index":1045,"title":{},"body":{"classes/PowerSpawnsManager.html":{}}}],["advancedtransform",{"_index":1057,"title":{},"body":{"classes/Quad.html":{}}}],["aerics",{"_index":1801,"title":{},"body":{"index.html":{}}}],["aesthetics",{"_index":1511,"title":{},"body":{"index.html":{}}}],["again",{"_index":1741,"title":{},"body":{"index.html":{}}}],["against",{"_index":1651,"title":{},"body":{"index.html":{}}}],["age",{"_index":516,"title":{},"body":{"classes/ConstructionSiteManager.html":{}}}],["aggregate",{"_index":262,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["aggressive",{"_index":1552,"title":{},"body":{"index.html":{}}}],["aka",{"_index":1807,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":1728,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["align",{"_index":803,"title":{},"body":{"classes/InitManager.html":{}}}],["allcomponents",{"_index":691,"title":{},"body":{"classes/FactoryManager.html":{}}}],["allcomponents(product",{"_index":700,"title":{},"body":{"classes/FactoryManager.html":{}}}],["allies",{"_index":813,"title":{},"body":{"classes/InitManager.html":{},"interfaces/Settings.html":{}}}],["allorrian",{"_index":1798,"title":{},"body":{"index.html":{}}}],["allows",{"_index":314,"title":{},"body":{"classes/Collectivizer.html":{}}}],["ally",{"_index":38,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"interfaces/DeadCreepNames.html":{},"miscellaneous/typealiases.html":{}}}],["allyrequest",{"_index":17,"title":{"interfaces/AllyRequest.html":{}},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{}}}],["allyrequestmanager",{"_index":60,"title":{"classes/AllyRequestManager.html":{}},"body":{"classes/AllyRequestManager.html":{}}}],["allyrequests",{"_index":89,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["allyrequesttypes",{"_index":57,"title":{},"body":{"interfaces/AllyRequest.html":{}}}],["allytrading",{"_index":69,"title":{},"body":{"classes/AllyRequestManager.html":{},"interfaces/Settings.html":{}}}],["allyvanguard",{"_index":111,"title":{"classes/AllyVanguard.html":{}},"body":{"classes/AllyVanguard.html":{}}}],["alongside",{"_index":905,"title":{},"body":{"classes/LabManager.html":{}}}],["alternatives",{"_index":1752,"title":{},"body":{"index.html":{}}}],["always",{"_index":1755,"title":{},"body":{"index.html":{}}}],["amount",{"_index":43,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/CommuneManager.html":{},"interfaces/InterpretedRoomEvent.html":{},"classes/LabManager.html":{}}}],["amountinroom",{"_index":1400,"title":{},"body":{"classes/TerminalManager.html":{}}}],["amountinroom(resource",{"_index":1427,"title":{},"body":{"classes/TerminalManager.html":{}}}],["and/or",{"_index":1839,"title":{},"body":{"license.html":{}}}],["animatedposition",{"_index":1191,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["animatedposition(x",{"_index":1197,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["animatedstyle",{"_index":136,"title":{"interfaces/AnimatedStyle.html":{}},"body":{"interfaces/AnimatedStyle.html":{},"interfaces/RoomVisual.html":{}}}],["annotations",{"_index":935,"title":{},"body":{"classes/MapVisualsManager.html":{}}}],["another",{"_index":506,"title":{},"body":{"classes/ConstructionManager.html":{},"index.html":{}}}],["antifa",{"_index":142,"title":{"classes/Antifa.html":{}},"body":{"classes/Antifa.html":{},"classes/CollectiveManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{},"classes/SpawnRequestsManager.html":{}}}],["antifaattacker",{"_index":606,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["antifadismantler",{"_index":608,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["antifahealer",{"_index":607,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["antifarangedattacker",{"_index":605,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["anystorestructure",{"_index":412,"title":{},"body":{"classes/CommuneManager.html":{}}}],["api",{"_index":1694,"title":{},"body":{"index.html":{}}}],["apply",{"_index":1135,"title":{},"body":{"classes/RemoteHarvester.html":{}}}],["applyremote",{"_index":1130,"title":{},"body":{"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{}}}],["areflagson",{"_index":720,"title":{},"body":{"classes/FeatureFlagManager.html":{}}}],["areflagson(flags",{"_index":724,"title":{},"body":{"classes/FeatureFlagManager.html":{}}}],["aren't",{"_index":1648,"title":{},"body":{"index.html":{}}}],["args",{"_index":1352,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["arising",{"_index":1872,"title":{},"body":{"license.html":{}}}],["army",{"_index":1516,"title":{},"body":{"index.html":{}}}],["arr",{"_index":832,"title":{},"body":{"classes/Int32Queue.html":{}}}],["array",{"_index":91,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/CollectiveManager.html":{}}}],["ask",{"_index":466,"title":{},"body":{"classes/CommuneManager.html":{},"index.html":{}}}],["assign",{"_index":95,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/SpawningStructuresManager.html":{}}}],["assignboosts",{"_index":860,"title":{},"body":{"classes/LabManager.html":{}}}],["assigndefencetargets",{"_index":563,"title":{},"body":{"classes/DefenceManager.html":{}}}],["assignnoreaction",{"_index":861,"title":{},"body":{"classes/LabManager.html":{}}}],["assignreaction",{"_index":862,"title":{},"body":{"classes/LabManager.html":{}}}],["assignreaction(outputresource",{"_index":900,"title":{},"body":{"classes/LabManager.html":{}}}],["assignremote",{"_index":1114,"title":{},"body":{"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{}}}],["assignremote(remotename",{"_index":1117,"title":{},"body":{"classes/RemoteBuilder.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{}}}],["assigns",{"_index":902,"title":{},"body":{"classes/LabManager.html":{}}}],["assist",{"_index":1091,"title":{},"body":{"classes/Quad.html":{}}}],["associated",{"_index":1828,"title":{},"body":{"license.html":{}}}],["attack",{"_index":746,"title":{},"body":{"classes/FlagManager.html":{},"classes/Quad.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"interfaces/Settings.html":{},"index.html":{}}}],["attack(flagname",{"_index":757,"title":{},"body":{"classes/FlagManager.html":{}}}],["attackenemycreeps",{"_index":1464,"title":{},"body":{"classes/TowerManager.html":{}}}],["attacker",{"_index":619,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["attackrequest",{"_index":321,"title":{},"body":{"classes/CombatRequestManager.html":{}}}],["attackrequest(requestname",{"_index":329,"title":{},"body":{"classes/CombatRequestManager.html":{}}}],["attacks",{"_index":426,"title":{},"body":{"classes/CommuneManager.html":{}}}],["attackstructures",{"_index":147,"title":{},"body":{"classes/Antifa.html":{},"classes/Duo.html":{}}}],["auth",{"_index":1738,"title":{},"body":{"index.html":{}}}],["author",{"_index":1886,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":1863,"title":{},"body":{"license.html":{}}}],["autoattack",{"_index":1255,"title":{},"body":{"interfaces/Settings.html":{}}}],["autoclaim",{"_index":1256,"title":{},"body":{"interfaces/Settings.html":{}}}],["automated",{"_index":1557,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":1273,"title":{},"body":{"interfaces/Settings.html":{},"index.html":{}}}],["average",{"_index":998,"title":{},"body":{"interfaces/OutputArgs.html":{},"classes/StatsManager.html":{}}}],["average(avg",{"_index":1382,"title":{},"body":{"classes/StatsManager.html":{}}}],["averagedovertickcount",{"_index":1383,"title":{},"body":{"classes/StatsManager.html":{}}}],["avg",{"_index":1385,"title":{},"body":{"classes/StatsManager.html":{}}}],["avgcommunespermineral",{"_index":247,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["avoiddanger",{"_index":9,"title":{},"body":{"interfaces/AdvancedFindDistanceOpts.html":{}}}],["background",{"_index":1368,"title":{},"body":{"interfaces/SpeechStyle.html":{}}}],["balanceresourcetorcl8rooms",{"_index":1401,"title":{},"body":{"classes/TerminalManager.html":{}}}],["balanceresourcetorcl8rooms(resources",{"_index":1429,"title":{},"body":{"classes/TerminalManager.html":{}}}],["base",{"_index":1275,"title":{},"body":{"interfaces/Settings.html":{}}}],["base32768",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":299,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/LabManager.html":{},"index.html":{}}}],["baseplans",{"_index":163,"title":{"classes/BasePlans.html":{}},"body":{"classes/BasePlans.html":{}}}],["basevisuals",{"_index":1210,"title":{},"body":{"classes/RoomVisualsManager.html":{},"interfaces/Settings.html":{}}}],["before",{"_index":76,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/DefenceManager.html":{},"classes/MemHack.html":{},"index.html":{}}}],["begin",{"_index":1658,"title":{},"body":{"index.html":{}}}],["behind",{"_index":1595,"title":{},"body":{"index.html":{}}}],["being",{"_index":1899,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["below",{"_index":1603,"title":{},"body":{"index.html":{}}}],["best",{"_index":1081,"title":{},"body":{"classes/Quad.html":{},"index.html":{}}}],["bestenergysellorder",{"_index":1451,"title":{},"body":{"classes/TerminalManager.html":{}}}],["better",{"_index":1101,"title":{},"body":{"classes/Quad.html":{}}}],["bgcolor",{"_index":552,"title":{},"body":{"interfaces/CustomLogOpts.html":{}}}],["board",{"_index":1577,"title":{},"body":{"index.html":{}}}],["bodypartcounts",{"_index":1355,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["boolean",{"_index":11,"title":{},"body":{"interfaces/AdvancedFindDistanceOpts.html":{},"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/CollectiveManager.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"classes/DefenceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"classes/FeatureFlagManager.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"classes/HubHauler.html":{},"classes/LabManager.html":{},"classes/MeleeDefender.html":{},"classes/Operator.html":{},"interfaces/OutputArgs.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/Quad.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RespawnManager.html":{},"classes/Scout.html":{},"interfaces/Settings.html":{},"classes/SourceHarvester.html":{},"classes/StatsManager.html":{},"classes/TerminalManager.html":{},"classes/TowerManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{}}}],["boost",{"_index":899,"title":{},"body":{"classes/LabManager.html":{}}}],["bot",{"_index":284,"title":{},"body":{"classes/CollectiveManager.html":{},"interfaces/Settings.html":{},"index.html":{}}}],["bot's",{"_index":804,"title":{},"body":{"classes/InitManager.html":{}}}],["bot/the",{"_index":1882,"title":{},"body":{"properties.html":{}}}],["bots",{"_index":1640,"title":{},"body":{"index.html":{}}}],["branch",{"_index":1592,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":1278,"title":{},"body":{"interfaces/Settings.html":{}}}],["breakingversion",{"_index":1257,"title":{},"body":{"interfaces/Settings.html":{}}}],["browser",{"_index":1751,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":1582,"title":{},"body":{"index.html":{},"properties.html":{}}}],["buildablestructureconstant",{"_index":411,"title":{},"body":{"classes/CommuneManager.html":{}}}],["buildcontainer",{"_index":1131,"title":{},"body":{"classes/RemoteHarvester.html":{},"classes/SourceHarvester.html":{}}}],["builddatacache",{"_index":1402,"title":{},"body":{"classes/TerminalManager.html":{}}}],["builder",{"_index":178,"title":{"classes/Builder.html":{}},"body":{"classes/Builder.html":{}}}],["buildermanager",{"_index":181,"title":{"classes/BuilderManager.html":{}},"body":{"classes/BuilderManager.html":{}}}],["builders",{"_index":465,"title":{},"body":{"classes/CommuneManager.html":{},"classes/SpawnRequestsManager.html":{}}}],["buildersmakerequests",{"_index":395,"title":{},"body":{"classes/CommuneManager.html":{}}}],["buildroom",{"_index":115,"title":{},"body":{"classes/AllyVanguard.html":{}}}],["builds",{"_index":126,"title":{},"body":{"classes/AllyVanguard.html":{}}}],["bulldoze",{"_index":1058,"title":{},"body":{"classes/Quad.html":{}}}],["bully",{"_index":1632,"title":{},"body":{"index.html":{}}}],["burke",{"_index":953,"title":{},"body":{"classes/MemHack.html":{},"index.html":{}}}],["buy",{"_index":274,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["buyat",{"_index":1403,"title":{},"body":{"classes/TerminalManager.html":{}}}],["buyat(resource",{"_index":1430,"title":{},"body":{"classes/TerminalManager.html":{}}}],["byavg",{"_index":995,"title":{},"body":{"interfaces/OutputArgs.html":{}}}],["c",{"_index":1709,"title":{},"body":{"index.html":{},"license.html":{}}}],["cache",{"_index":658,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["call",{"_index":94,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/ErrorMapper.html":{},"classes/FlagManager.html":{}}}],["called",{"_index":1512,"title":{},"body":{"index.html":{}}}],["calls",{"_index":680,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["cankeeprequest",{"_index":322,"title":{},"body":{"classes/CombatRequestManager.html":{}}}],["canmove",{"_index":590,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["canreact",{"_index":863,"title":{},"body":{"classes/LabManager.html":{}}}],["capacity",{"_index":827,"title":{},"body":{"classes/Int32Queue.html":{}}}],["cardinalflood",{"_index":741,"title":{},"body":{"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["carry",{"_index":414,"title":{},"body":{"classes/CommuneManager.html":{}}}],["carson",{"_index":952,"title":{},"body":{"classes/MemHack.html":{},"index.html":{}}}],["chaindecompose",{"_index":864,"title":{},"body":{"classes/LabManager.html":{}}}],["chaindecompose(compound",{"_index":908,"title":{},"body":{"classes/LabManager.html":{}}}],["chainfindnextreaction",{"_index":865,"title":{},"body":{"classes/LabManager.html":{}}}],["chainfindnextreaction(target",{"_index":910,"title":{},"body":{"classes/LabManager.html":{}}}],["change",{"_index":1606,"title":{},"body":{"index.html":{}}}],["changed",{"_index":1724,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1720,"title":{},"body":{"index.html":{}}}],["chant",{"_index":626,"title":{},"body":{"classes/EndTickCreepManager.html":{},"interfaces/Settings.html":{}}}],["charge",{"_index":1824,"title":{},"body":{"license.html":{}}}],["cheapest",{"_index":279,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["check",{"_index":504,"title":{},"body":{"classes/ConstructionManager.html":{},"index.html":{}}}],["checking",{"_index":1748,"title":{},"body":{"index.html":{}}}],["checks",{"_index":1682,"title":{},"body":{"index.html":{}}}],["claim",{"_index":573,"title":{},"body":{"classes/DefenceManager.html":{},"classes/FlagManager.html":{},"license.html":{}}}],["claim(flagname",{"_index":758,"title":{},"body":{"classes/FlagManager.html":{}}}],["claimed",{"_index":1635,"title":{},"body":{"index.html":{}}}],["claimer",{"_index":195,"title":{"classes/Claimer.html":{}},"body":{"classes/Claimer.html":{}}}],["claimroom",{"_index":197,"title":{},"body":{"classes/Claimer.html":{}}}],["claims",{"_index":198,"title":{},"body":{"classes/Claimer.html":{}}}],["class",{"_index":59,"title":{"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/Collectivizer.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ConstructionSiteManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/EndTickManager.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"classes/FeatureFlagManager.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/InitManager.html":{},"classes/Int32Queue.html":{},"classes/InterShardPlanner.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MemHack.html":{},"classes/MigrationManager.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"classes/RespawnManager.html":{},"classes/RoomPruningManager.html":{},"classes/RoomVisualsManager.html":{},"classes/RoomsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"classes/StatsManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TickInit.html":{},"classes/TombstoneManager.html":{},"classes/TowerManager.html":{},"classes/UserScriptManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{}},"body":{}}],["classes",{"_index":61,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/Collectivizer.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ConstructionSiteManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/EndTickManager.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"classes/FeatureFlagManager.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/InitManager.html":{},"classes/Int32Queue.html":{},"classes/InterShardPlanner.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MemHack.html":{},"classes/MigrationManager.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"classes/RespawnManager.html":{},"classes/RoomPruningManager.html":{},"classes/RoomVisualsManager.html":{},"classes/RoomsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"classes/StatsManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TickInit.html":{},"classes/TombstoneManager.html":{},"classes/TowerManager.html":{},"classes/UserScriptManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{},"overview.html":{}}}],["classname",{"_index":1041,"title":{},"body":{"classes/PowerCreepRoleManager.html":{}}}],["clear",{"_index":822,"title":{},"body":{"classes/Int32Queue.html":{}}}],["clearenemystructures",{"_index":495,"title":{},"body":{"classes/ConstructionManager.html":{}}}],["client",{"_index":1764,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1675,"title":{},"body":{"index.html":{}}}],["code",{"_index":316,"title":{},"body":{"classes/Collectivizer.html":{},"classes/RespawnManager.html":{},"index.html":{}}}],["collaborators",{"_index":1790,"title":{},"body":{"index.html":{}}}],["collectivemanager",{"_index":200,"title":{"classes/CollectiveManager.html":{}},"body":{"classes/CollectiveManager.html":{}}}],["collectives",{"_index":311,"title":{},"body":{"classes/Collectivizer.html":{}}}],["collectivizer",{"_index":309,"title":{"classes/Collectivizer.html":{}},"body":{"classes/Collectivizer.html":{},"miscellaneous/typealiases.html":{}}}],["color",{"_index":138,"title":{},"body":{"interfaces/AnimatedStyle.html":{}}}],["colours",{"_index":934,"title":{},"body":{"classes/MapVisualsManager.html":{}}}],["combat",{"_index":260,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/CommuneManager.html":{},"classes/FlagManager.html":{}}}],["combat(flagname",{"_index":759,"title":{},"body":{"classes/FlagManager.html":{}}}],["combatattackduogetinformation",{"_index":611,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["combatattackduogetinformation(attacker",{"_index":617,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["combatrequestmanager",{"_index":318,"title":{"classes/CombatRequestManager.html":{}},"body":{"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{}}}],["combatstrength",{"_index":589,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["comfort",{"_index":1765,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1729,"title":{},"body":{"index.html":{}}}],["comments",{"_index":1533,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1770,"title":{},"body":{"index.html":{}}}],["commits",{"_index":1791,"title":{},"body":{"index.html":{}}}],["commodityconstant",{"_index":701,"title":{},"body":{"classes/FactoryManager.html":{}}}],["commonly",{"_index":1535,"title":{},"body":{"index.html":{}}}],["commune",{"_index":129,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{}}}],["communemanager",{"_index":320,"title":{"classes/CommuneManager.html":{}},"body":{"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/DefenceManager.html":{},"classes/FactoryManager.html":{},"classes/HaulRequestManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/RemotesManager.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TowerManager.html":{},"classes/WorkRequestManager.html":{}}}],["communes",{"_index":265,"title":{},"body":{"classes/CollectiveManager.html":{},"index.html":{}}}],["communist",{"_index":1510,"title":{},"body":{"index.html":{}}}],["compared",{"_index":477,"title":{},"body":{"classes/CommuneManager.html":{}}}],["compile",{"_index":1710,"title":{},"body":{"index.html":{}}}],["compiles",{"_index":1669,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1702,"title":{},"body":{"index.html":{}}}],["compound",{"_index":909,"title":{},"body":{"classes/LabManager.html":{}}}],["compoundpriority",{"_index":248,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["conditions",{"_index":733,"title":{},"body":{"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/Vanguard.html":{},"license.html":{}}}],["conditions(coord",{"_index":734,"title":{},"body":{"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["config",{"_index":723,"title":{},"body":{"classes/FeatureFlagManager.html":{},"index.html":{}}}],["configcombatrequests",{"_index":1454,"title":{},"body":{"classes/TickInit.html":{}}}],["configgeneral",{"_index":1455,"title":{},"body":{"classes/TickInit.html":{}}}],["confighaulrequests",{"_index":1456,"title":{},"body":{"classes/TickInit.html":{}}}],["configspawnrequest",{"_index":1336,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["configspawnrequest(index",{"_index":1350,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["configuration",{"_index":1722,"title":{},"body":{"index.html":{}}}],["configure",{"_index":1758,"title":{},"body":{"index.html":{}}}],["configured",{"_index":812,"title":{},"body":{"classes/InitManager.html":{},"index.html":{}}}],["configures",{"_index":99,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/InitManager.html":{}}}],["configworkrequests",{"_index":1457,"title":{},"body":{"classes/TickInit.html":{}}}],["conflicting",{"_index":1768,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1873,"title":{},"body":{"license.html":{}}}],["connectroads",{"_index":1192,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["connectroads(opts",{"_index":1198,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["consecutive",{"_index":679,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["consequence",{"_index":1005,"title":{},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["consequence(coord",{"_index":1009,"title":{},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["consider",{"_index":1006,"title":{},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"index.html":{}}}],["considerrampartspublic",{"_index":564,"title":{},"body":{"classes/DefenceManager.html":{}}}],["considers",{"_index":1897,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["console",{"_index":1561,"title":{},"body":{"index.html":{}}}],["construct",{"_index":814,"title":{},"body":{"classes/InitManager.html":{}}}],["constructed",{"_index":816,"title":{},"body":{"classes/InitManager.html":{}}}],["constructionmanager",{"_index":351,"title":{"classes/ConstructionManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{}}}],["constructionsitemanager",{"_index":510,"title":{"classes/ConstructionSiteManager.html":{}},"body":{"classes/ConstructionSiteManager.html":{}}}],["constructionsites",{"_index":514,"title":{},"body":{"classes/ConstructionSiteManager.html":{}}}],["constructor",{"_index":123,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/Claimer.html":{},"classes/Collectivizer.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"classes/FeatureFlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/Int32Queue.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MeleeDefender.html":{},"classes/MemHack.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"classes/RoomVisualsManager.html":{},"classes/RoomsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TombstoneManager.html":{},"classes/TowerManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{}}}],["constructor(capacity",{"_index":826,"title":{},"body":{"classes/Int32Queue.html":{}}}],["constructor(communemanager",{"_index":328,"title":{},"body":{"classes/CombatRequestManager.html":{},"classes/ConstructionManager.html":{},"classes/DefenceManager.html":{},"classes/FactoryManager.html":{},"classes/HaulRequestManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/RemotesManager.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TowerManager.html":{},"classes/WorkRequestManager.html":{}}}],["constructor(config",{"_index":722,"title":{},"body":{"classes/FeatureFlagManager.html":{}}}],["constructor(creepid",{"_index":124,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/Builder.html":{},"classes/Claimer.html":{},"classes/ControllerUpgrader.html":{},"classes/FastFiller.html":{},"classes/Hauler.html":{},"classes/HubHauler.html":{},"classes/Maintainer.html":{},"classes/MeleeDefender.html":{},"classes/MineralHarvester.html":{},"classes/Operator.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RequestHauler.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/Vanguard.html":{}}}],["constructor(map",{"_index":169,"title":{},"body":{"classes/BasePlans.html":{},"classes/RampartPlans.html":{}}}],["constructor(membernames",{"_index":591,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["constructor(roommanager",{"_index":529,"title":{},"body":{"classes/ContainerManager.html":{},"classes/CreepRoleManager.html":{},"classes/DroppedResourceManager.html":{},"classes/EndTickCreepManager.html":{},"classes/PowerCreepRoleManager.html":{},"classes/RoomVisualsManager.html":{},"classes/RuinManager.html":{},"classes/TombstoneManager.html":{}}}],["constructspawnrequests",{"_index":1337,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["constructspawnrequests(args",{"_index":1351,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["consumer",{"_index":661,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["container",{"_index":1139,"title":{},"body":{"classes/RemoteHarvester.html":{}}}],["containermanager",{"_index":520,"title":{"classes/ContainerManager.html":{}},"body":{"classes/ContainerManager.html":{}}}],["contains",{"_index":63,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["contract",{"_index":1870,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1630,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":1777,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":1783,"title":{},"body":{"index.html":{}}}],["controlled",{"_index":1282,"title":{},"body":{"interfaces/Settings.html":{}}}],["controller",{"_index":575,"title":{},"body":{"classes/DefenceManager.html":{},"classes/Scout.html":{}}}],["controlleraction",{"_index":1157,"title":{},"body":{"classes/RemoteReserver.html":{}}}],["controllerdowngradeupgradethreshold",{"_index":400,"title":{},"body":{"classes/CommuneManager.html":{}}}],["controllerlink",{"_index":405,"title":{},"body":{"classes/CommuneManager.html":{}}}],["controllerlinkid",{"_index":352,"title":{},"body":{"classes/CommuneManager.html":{}}}],["controllerneed",{"_index":782,"title":{},"body":{"classes/HaulerNeedManager.html":{}}}],["controllerupgrader",{"_index":530,"title":{"classes/ControllerUpgrader.html":{}},"body":{"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{}}}],["controllerupgradermanager",{"_index":533,"title":{"classes/ControllerUpgraderManager.html":{}},"body":{"classes/ControllerUpgraderManager.html":{}}}],["controllerupgraders",{"_index":1318,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["controllervisuals",{"_index":1211,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["coord",{"_index":735,"title":{},"body":{"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/Quad.html":{},"classes/RemoteHauler.html":{},"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{}}}],["coordmap",{"_index":742,"title":{},"body":{"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["coords",{"_index":639,"title":{},"body":{"interfaces/EnemyThreatData.html":{}}}],["copies",{"_index":1840,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1673,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1818,"title":{},"body":{"license.html":{}}}],["cores",{"_index":1122,"title":{},"body":{"classes/RemoteCoreAttacker.html":{}}}],["correct",{"_index":1611,"title":{},"body":{"index.html":{}}}],["cost",{"_index":675,"title":{},"body":{"classes/ErrorMapper.html":{},"classes/SpawningStructuresManager.html":{}}}],["count",{"_index":1001,"title":{},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["cpu",{"_index":674,"title":{},"body":{"classes/ErrorMapper.html":{},"interfaces/Settings.html":{}}}],["cpu/ea",{"_index":683,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["cpulogging",{"_index":1258,"title":{},"body":{"interfaces/Settings.html":{}}}],["create",{"_index":1274,"title":{},"body":{"interfaces/Settings.html":{}}}],["createboostroomlogisticsrequests",{"_index":866,"title":{},"body":{"classes/LabManager.html":{}}}],["createcontrollerlinkroomlogisticsrequest",{"_index":925,"title":{},"body":{"classes/LinkManager.html":{}}}],["createcreeproomlogisticsrequests",{"_index":788,"title":{},"body":{"classes/HubHauler.html":{}}}],["createinputroomlogisticsrequests",{"_index":867,"title":{},"body":{"classes/LabManager.html":{}}}],["createmoverequest",{"_index":585,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["createmoverequest(opts",{"_index":592,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["createoutputroomlogisticsrequests",{"_index":868,"title":{},"body":{"classes/LabManager.html":{}}}],["createpowertasks",{"_index":1311,"title":{},"body":{"classes/SourceManager.html":{},"classes/SpawningStructuresManager.html":{},"classes/TowerManager.html":{}}}],["createroomlogisticsrequests",{"_index":869,"title":{},"body":{"classes/LabManager.html":{},"classes/NukerManager.html":{},"classes/SpawningStructuresManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TowerManager.html":{}}}],["createspawnrequest",{"_index":1338,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["createspawnrequest(priority",{"_index":1353,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["createsquad",{"_index":148,"title":{},"body":{"classes/Antifa.html":{}}}],["createsquad(membernames",{"_index":155,"title":{},"body":{"classes/Antifa.html":{}}}],["createterminalrequests",{"_index":1404,"title":{},"body":{"classes/TerminalManager.html":{}}}],["creating",{"_index":159,"title":{},"body":{"classes/Antifa.html":{}}}],["credentials",{"_index":1705,"title":{},"body":{"index.html":{}}}],["credit",{"_index":1176,"title":{},"body":{"classes/RespawnManager.html":{}}}],["creep",{"_index":114,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/CommuneManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"classes/DynamicSquad.html":{},"classes/FastFiller.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HubHauler.html":{},"classes/LabManager.html":{},"classes/Maintainer.html":{},"classes/MeleeDefender.html":{},"classes/MineralHarvester.html":{},"classes/Quad.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RequestHauler.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/Vanguard.html":{}}}],["creep's",{"_index":128,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/Claimer.html":{}}}],["creepchant",{"_index":1259,"title":{},"body":{"interfaces/Settings.html":{}}}],["creepcombatdata",{"_index":536,"title":{"interfaces/CreepCombatData.html":{}},"body":{"interfaces/CreepCombatData.html":{}}}],["creepid",{"_index":125,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/Builder.html":{},"classes/Claimer.html":{},"classes/ControllerUpgrader.html":{},"classes/FastFiller.html":{},"classes/Hauler.html":{},"classes/HubHauler.html":{},"classes/Maintainer.html":{},"classes/MeleeDefender.html":{},"classes/MineralHarvester.html":{},"classes/Operator.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RequestHauler.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/Vanguard.html":{}}}],["creepname",{"_index":545,"title":{},"body":{"classes/CreepOrganizer.html":{},"classes/PowerCreepOrganizer.html":{}}}],["creeporganizer",{"_index":541,"title":{"classes/CreepOrganizer.html":{}},"body":{"classes/CreepOrganizer.html":{}}}],["creeprolemanager",{"_index":546,"title":{"classes/CreepRoleManager.html":{}},"body":{"classes/CreepRoleManager.html":{}}}],["creeproles",{"_index":189,"title":{},"body":{"classes/BuilderManager.html":{},"classes/ControllerUpgraderManager.html":{},"classes/CreepRoleManager.html":{},"classes/HaulerManager.html":{},"classes/SpawningStructuresManager.html":{}}}],["creeps",{"_index":259,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/DefenceManager.html":{},"classes/EndTickCreepManager.html":{},"classes/PowerSpawnsManager.html":{},"interfaces/Settings.html":{},"classes/SpawningStructuresManager.html":{}}}],["creepsay",{"_index":1260,"title":{},"body":{"interfaces/Settings.html":{}}}],["creepsbycombatrequest",{"_index":219,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["creepsbyhaulrequest",{"_index":220,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["creepsofrole",{"_index":133,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/Builder.html":{},"classes/Claimer.html":{},"classes/ControllerUpgrader.html":{},"classes/FastFiller.html":{},"classes/Hauler.html":{},"classes/HubHauler.html":{},"classes/Maintainer.html":{},"classes/MeleeDefender.html":{},"classes/MineralHarvester.html":{},"classes/Operator.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RequestHauler.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/Vanguard.html":{}}}],["csitetargetvisuals",{"_index":1212,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["current",{"_index":1277,"title":{},"body":{"interfaces/Settings.html":{}}}],["currentally",{"_index":79,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["custom",{"_index":1767,"title":{},"body":{"index.html":{}}}],["customcreepidindex",{"_index":221,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["customcreepids",{"_index":222,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["customlog",{"_index":1289,"title":{},"body":{"interfaces/Settings.html":{}}}],["customlogopts",{"_index":551,"title":{"interfaces/CustomLogOpts.html":{}},"body":{"interfaces/CustomLogOpts.html":{}}}],["cw",{"_index":1718,"title":{},"body":{"index.html":{}}}],["damage",{"_index":44,"title":{},"body":{"interfaces/AllyRequest.html":{}}}],["damages",{"_index":1866,"title":{},"body":{"license.html":{}}}],["data",{"_index":654,"title":{},"body":{"classes/ErrorExporter.html":{},"interfaces/Settings.html":{}}}],["datacache",{"_index":1398,"title":{},"body":{"classes/TerminalManager.html":{}}}],["datavisuals",{"_index":1213,"title":{},"body":{"classes/RoomVisualsManager.html":{},"interfaces/Settings.html":{}}}],["date",{"_index":1662,"title":{},"body":{"index.html":{}}}],["deadcreepnames",{"_index":555,"title":{"interfaces/DeadCreepNames.html":{}},"body":{"interfaces/DeadCreepNames.html":{}}}],["deal",{"_index":1831,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1874,"title":{},"body":{"license.html":{}}}],["death",{"_index":1099,"title":{},"body":{"classes/Quad.html":{}}}],["debugging",{"_index":1367,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["decent",{"_index":1629,"title":{},"body":{"index.html":{}}}],["decide",{"_index":1659,"title":{},"body":{"index.html":{}}}],["decimals",{"_index":1394,"title":{},"body":{"classes/StatsManager.html":{}}}],["decrease",{"_index":34,"title":{},"body":{"interfaces/AllyRequest.html":{}}}],["default",{"_index":104,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/BuilderManager.html":{},"classes/CollectiveManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ControllerUpgraderManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/ErrorMapper.html":{},"classes/HaulerManager.html":{},"classes/LabManager.html":{},"interfaces/OutputArgs.html":{},"classes/PlayerManager.html":{},"classes/Quad.html":{},"classes/RoomPruningManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/StatsManager.html":{},"classes/TerminalManager.html":{},"classes/WorkRequestManager.html":{}}}],["defaultmincacheamount",{"_index":244,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["defaulto",{"_index":1802,"title":{},"body":{"index.html":{}}}],["defaultparts",{"_index":1354,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["defence",{"_index":537,"title":{},"body":{"interfaces/CreepCombatData.html":{}}}],["defencemanager",{"_index":353,"title":{"classes/DefenceManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/DefenceManager.html":{}}}],["defencestrength",{"_index":1070,"title":{},"body":{"classes/Quad.html":{}}}],["defend",{"_index":747,"title":{},"body":{"classes/FlagManager.html":{},"classes/RemoteDefender.html":{}}}],["defend(flagname",{"_index":760,"title":{},"body":{"classes/FlagManager.html":{}}}],["defenders",{"_index":1319,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["defendrequest",{"_index":323,"title":{},"body":{"classes/CombatRequestManager.html":{}}}],["defendrequest(requestname",{"_index":331,"title":{},"body":{"classes/CombatRequestManager.html":{}}}],["defendwithoutramparts",{"_index":943,"title":{},"body":{"classes/MeleeDefender.html":{},"classes/RangedDefender.html":{}}}],["defendwithoutramparts(enemycreeps",{"_index":946,"title":{},"body":{"classes/MeleeDefender.html":{},"classes/RangedDefender.html":{}}}],["defendwithrampart",{"_index":944,"title":{},"body":{"classes/MeleeDefender.html":{},"classes/RangedDefender.html":{}}}],["defensive",{"_index":1513,"title":{},"body":{"index.html":{}}}],["defensiveramparts",{"_index":401,"title":{},"body":{"classes/CommuneManager.html":{}}}],["deficits",{"_index":882,"title":{},"body":{"classes/LabManager.html":{}}}],["defined",{"_index":456,"title":{},"body":{"classes/CommuneManager.html":{}}}],["definition",{"_index":1678,"title":{},"body":{"index.html":{}}}],["delete",{"_index":1489,"title":{},"body":{"classes/WorkRequestManager.html":{}}}],["deleteclaim",{"_index":748,"title":{},"body":{"classes/FlagManager.html":{}}}],["deleteclaim(flagname",{"_index":761,"title":{},"body":{"classes/FlagManager.html":{}}}],["deletecombat",{"_index":749,"title":{},"body":{"classes/FlagManager.html":{},"classes/WorkRequestManager.html":{}}}],["deletecombat(flagname",{"_index":762,"title":{},"body":{"classes/FlagManager.html":{}}}],["deletecombatrequest",{"_index":376,"title":{},"body":{"classes/CommuneManager.html":{}}}],["deletecombatrequest(requestname",{"_index":419,"title":{},"body":{"classes/CommuneManager.html":{}}}],["deleting",{"_index":517,"title":{},"body":{"classes/ConstructionSiteManager.html":{}}}],["delighted",{"_index":1090,"title":{},"body":{"classes/Quad.html":{}}}],["deliverresources",{"_index":1142,"title":{},"body":{"classes/RemoteHauler.html":{}}}],["demandboost",{"_index":870,"title":{},"body":{"classes/LabManager.html":{}}}],["demandboost(creep",{"_index":911,"title":{},"body":{"classes/LabManager.html":{}}}],["dependencies",{"_index":1496,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["depending",{"_index":1252,"title":{},"body":{"classes/Scout.html":{}}}],["depth",{"_index":1753,"title":{},"body":{"index.html":{}}}],["description",{"_index":62,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/CollectiveManager.html":{},"classes/Collectivizer.html":{},"classes/ConstructionSiteManager.html":{},"classes/DynamicSquad.html":{},"classes/EndTickManager.html":{},"classes/ErrorMapper.html":{},"classes/InitManager.html":{},"classes/MapVisualsManager.html":{},"classes/MemHack.html":{},"classes/MigrationManager.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/RespawnManager.html":{},"properties.html":{}}}],["design",{"_index":1575,"title":{},"body":{"index.html":{}}}],["designated",{"_index":74,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["dest",{"_index":1735,"title":{},"body":{"index.html":{}}}],["dest:main",{"_index":1721,"title":{},"body":{"index.html":{}}}],["dest:mmo",{"_index":1716,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":505,"title":{},"body":{"classes/ConstructionManager.html":{}}}],["destroyed",{"_index":1524,"title":{},"body":{"index.html":{}}}],["determines",{"_index":297,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["develop",{"_index":1670,"title":{},"body":{"index.html":{}}}],["development",{"_index":1598,"title":{},"body":{"index.html":{}}}],["diagonaldt",{"_index":1002,"title":{},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["die",{"_index":1104,"title":{},"body":{"classes/Quad.html":{}}}],["discord",{"_index":1573,"title":{},"body":{"index.html":{}}}],["discuss",{"_index":1571,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1837,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1829,"title":{},"body":{"license.html":{}}}],["domain",{"_index":1700,"title":{},"body":{"index.html":{}}}],["don't",{"_index":1668,"title":{},"body":{"index.html":{}}}],["donations",{"_index":1811,"title":{},"body":{"index.html":{}}}],["done",{"_index":503,"title":{},"body":{"classes/ConstructionManager.html":{}}}],["donothing",{"_index":750,"title":{},"body":{"classes/FlagManager.html":{}}}],["donothing(flagname",{"_index":763,"title":{},"body":{"classes/FlagManager.html":{}}}],["dotrading",{"_index":1405,"title":{},"body":{"classes/TerminalManager.html":{}}}],["dotransfers",{"_index":1406,"title":{},"body":{"classes/TerminalManager.html":{}}}],["downgrade",{"_index":484,"title":{},"body":{"classes/CommuneManager.html":{},"classes/DefenceManager.html":{}}}],["download",{"_index":1589,"title":{},"body":{"index.html":{}}}],["downloaded",{"_index":1601,"title":{},"body":{"index.html":{}}}],["droppedresourcemanager",{"_index":577,"title":{"classes/DroppedResourceManager.html":{}},"body":{"classes/DroppedResourceManager.html":{}}}],["dry",{"_index":1711,"title":{},"body":{"index.html":{}}}],["duo",{"_index":579,"title":{"classes/Duo.html":{}},"body":{"classes/Duo.html":{}}}],["dynamic",{"_index":602,"title":{},"body":{"classes/DynamicSquad.html":{},"classes/FlagManager.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["dynamicsquad",{"_index":599,"title":{"classes/DynamicSquad.html":{}},"body":{"classes/DynamicSquad.html":{}}}],["dynamicweight",{"_index":738,"title":{},"body":{"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["each",{"_index":263,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{},"index.html":{}}}],["easily",{"_index":1537,"title":{},"body":{"index.html":{}}}],["economic",{"_index":1517,"title":{},"body":{"index.html":{}}}],["economy",{"_index":1567,"title":{},"body":{"index.html":{}}}],["edit",{"_index":1697,"title":{},"body":{"index.html":{}}}],["email",{"_index":1756,"title":{},"body":{"index.html":{}}}],["emergencies",{"_index":445,"title":{},"body":{"classes/CommuneManager.html":{}}}],["enable",{"_index":1292,"title":{},"body":{"interfaces/Settings.html":{}}}],["enabled",{"_index":71,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/EndTickCreepManager.html":{},"classes/MapVisualsManager.html":{}}}],["encourage",{"_index":1627,"title":{},"body":{"index.html":{}}}],["end",{"_index":636,"title":{},"body":{"classes/EndTickManager.html":{}}}],["endrun",{"_index":81,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/Operator.html":{}}}],["endtickcreepmanager",{"_index":622,"title":{"classes/EndTickCreepManager.html":{}},"body":{"classes/EndTickCreepManager.html":{}}}],["endtickmanager",{"_index":630,"title":{"classes/EndTickManager.html":{}},"body":{"classes/EndTickManager.html":{}}}],["enemies",{"_index":1103,"title":{},"body":{"classes/Quad.html":{}}}],["enemy",{"_index":557,"title":{},"body":{"interfaces/DeadCreepNames.html":{},"interfaces/Settings.html":{},"miscellaneous/typealiases.html":{}}}],["enemycreeps",{"_index":947,"title":{},"body":{"classes/MeleeDefender.html":{},"classes/RangedDefender.html":{},"classes/RemoteDefender.html":{}}}],["enemythreatdata",{"_index":637,"title":{"interfaces/EnemyThreatData.html":{}},"body":{"interfaces/EnemyThreatData.html":{},"classes/Quad.html":{}}}],["enemythreatdataranged",{"_index":1071,"title":{},"body":{"classes/Quad.html":{}}}],["energy",{"_index":443,"title":{},"body":{"classes/CommuneManager.html":{},"classes/RemoteHauler.html":{}}}],["energyprice",{"_index":1432,"title":{},"body":{"classes/TerminalManager.html":{}}}],["enough",{"_index":424,"title":{},"body":{"classes/CommuneManager.html":{}}}],["ensure",{"_index":68,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/InitManager.html":{},"index.html":{}}}],["entirely",{"_index":1642,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1690,"title":{},"body":{"index.html":{}}}],["environments",{"_index":1666,"title":{},"body":{"index.html":{}}}],["equivalent",{"_index":1733,"title":{},"body":{"index.html":{}}}],["error",{"_index":664,"title":{},"body":{"classes/ErrorMapper.html":{},"interfaces/Settings.html":{}}}],["errordata",{"_index":643,"title":{"interfaces/ErrorData.html":{}},"body":{"interfaces/ErrorData.html":{},"classes/ErrorExporter.html":{}}}],["errorexporter",{"_index":647,"title":{"classes/ErrorExporter.html":{}},"body":{"classes/ErrorExporter.html":{}}}],["errorexporting",{"_index":1261,"title":{},"body":{"interfaces/Settings.html":{}}}],["errormapper",{"_index":655,"title":{"classes/ErrorMapper.html":{}},"body":{"classes/ErrorMapper.html":{}}}],["errors",{"_index":645,"title":{},"body":{"interfaces/ErrorData.html":{},"interfaces/Settings.html":{}}}],["especially",{"_index":1554,"title":{},"body":{"index.html":{}}}],["essential",{"_index":1805,"title":{},"body":{"index.html":{}}}],["establish",{"_index":1521,"title":{},"body":{"index.html":{}}}],["estimatedenergyincome",{"_index":354,"title":{},"body":{"classes/CommuneManager.html":{}}}],["estimateincome",{"_index":1312,"title":{},"body":{"classes/SourceManager.html":{}}}],["etc",{"_index":1792,"title":{},"body":{"index.html":{}}}],["event",{"_index":1862,"title":{},"body":{"license.html":{}}}],["eventattacktype",{"_index":840,"title":{},"body":{"interfaces/InterpretedRoomEvent.html":{}}}],["eventconstant",{"_index":842,"title":{},"body":{"interfaces/InterpretedRoomEvent.html":{}}}],["eventhealtype",{"_index":841,"title":{},"body":{"interfaces/InterpretedRoomEvent.html":{}}}],["events",{"_index":1566,"title":{},"body":{"index.html":{}}}],["eventtype",{"_index":838,"title":{},"body":{"interfaces/InterpretedRoomEvent.html":{}}}],["example",{"_index":1686,"title":{},"body":{"index.html":{}}}],["execute",{"_index":315,"title":{},"body":{"classes/Collectivizer.html":{}}}],["existing",{"_index":256,"title":{},"body":{"classes/CollectiveManager.html":{},"interfaces/Settings.html":{}}}],["exit",{"_index":629,"title":{},"body":{"classes/EndTickCreepManager.html":{}}}],["expanded",{"_index":1540,"title":{},"body":{"index.html":{}}}],["expectations",{"_index":805,"title":{},"body":{"classes/InitManager.html":{}}}],["expensive",{"_index":273,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/CommuneManager.html":{}}}],["experienced",{"_index":1526,"title":{},"body":{"index.html":{}}}],["experiences",{"_index":1657,"title":{},"body":{"index.html":{}}}],["express",{"_index":1853,"title":{},"body":{"license.html":{}}}],["extendbuyorders",{"_index":1407,"title":{},"body":{"classes/TerminalManager.html":{}}}],["extendbuyorders(purchasetarget",{"_index":1433,"title":{},"body":{"classes/TerminalManager.html":{}}}],["extends",{"_index":113,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/Builder.html":{},"classes/Claimer.html":{},"classes/ControllerUpgrader.html":{},"classes/FastFiller.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"classes/Hauler.html":{},"classes/HubHauler.html":{},"classes/Maintainer.html":{},"classes/MeleeDefender.html":{},"classes/MineralHarvester.html":{},"classes/Operator.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RequestHauler.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{},"classes/Vanguard.html":{}}}],["extendsellorders",{"_index":1408,"title":{},"body":{"classes/TerminalManager.html":{}}}],["extendsellorders(selltarget",{"_index":1435,"title":{},"body":{"classes/TerminalManager.html":{}}}],["extra",{"_index":1793,"title":{},"body":{"index.html":{}}}],["extremely",{"_index":673,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["factory",{"_index":690,"title":{},"body":{"classes/FactoryManager.html":{}}}],["factoryenergyoverfilltransfer",{"_index":789,"title":{},"body":{"classes/HubHauler.html":{}}}],["factorymanager",{"_index":355,"title":{"classes/FactoryManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/FactoryManager.html":{}}}],["fair",{"_index":1653,"title":{},"body":{"index.html":{}}}],["false",{"_index":999,"title":{},"body":{"interfaces/OutputArgs.html":{},"classes/StatsManager.html":{}}}],["fan",{"_index":1780,"title":{},"body":{"index.html":{}}}],["faster",{"_index":1105,"title":{},"body":{"classes/Quad.html":{}}}],["fastfiller",{"_index":710,"title":{"classes/FastFiller.html":{}},"body":{"classes/FastFiller.html":{},"classes/SpawnRequestsManager.html":{}}}],["fastfillerspawnenergycapacity",{"_index":406,"title":{},"body":{"classes/CommuneManager.html":{}}}],["feature",{"_index":725,"title":{},"body":{"classes/FeatureFlagManager.html":{}}}],["featureflagconfig",{"_index":715,"title":{"interfaces/FeatureFlagConfig.html":{}},"body":{"interfaces/FeatureFlagConfig.html":{},"classes/FeatureFlagManager.html":{}}}],["featureflagmanager",{"_index":717,"title":{"classes/FeatureFlagManager.html":{}},"body":{"classes/FeatureFlagManager.html":{}}}],["features",{"_index":1596,"title":{},"body":{"index.html":{}}}],["feel",{"_index":1547,"title":{},"body":{"index.html":{}}}],["fight",{"_index":1654,"title":{},"body":{"index.html":{}}}],["figures",{"_index":923,"title":{},"body":{"classes/LabManager.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AdvancedFindDistanceOpts.html":{},"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"interfaces/AnimatedStyle.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/Collectivizer.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ConstructionSiteManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"interfaces/CreepCombatData.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"interfaces/CustomLogOpts.html":{},"interfaces/DeadCreepNames.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/EndTickManager.html":{},"interfaces/EnemyThreatData.html":{},"interfaces/ErrorData.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"interfaces/FeatureFlagConfig.html":{},"classes/FeatureFlagManager.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/InitManager.html":{},"classes/Int32Queue.html":{},"classes/InterShardPlanner.html":{},"interfaces/InterpretedRoomEvent.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MemHack.html":{},"classes/MigrationManager.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"interfaces/OutputArgs.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"classes/RespawnManager.html":{},"classes/RoomPruningManager.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{},"classes/RoomsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"interfaces/Settings.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"interfaces/SpeechStyle.html":{},"classes/StatsManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TickInit.html":{},"classes/TombstoneManager.html":{},"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{},"classes/TowerManager.html":{},"classes/UserScriptManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{},"index.html":{}}}],["files",{"_index":1830,"title":{},"body":{"license.html":{}}}],["fill",{"_index":1689,"title":{},"body":{"index.html":{}}}],["fillfastfiller",{"_index":712,"title":{},"body":{"classes/FastFiller.html":{}}}],["filtered",{"_index":455,"title":{},"body":{"classes/CommuneManager.html":{}}}],["finally",{"_index":1725,"title":{},"body":{"index.html":{}}}],["find",{"_index":158,"title":{},"body":{"classes/Antifa.html":{},"classes/CollectiveManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/SpawningStructuresManager.html":{},"index.html":{}}}],["findattacktarget",{"_index":1465,"title":{},"body":{"classes/TowerManager.html":{}}}],["findbestallyrequest",{"_index":1409,"title":{},"body":{"classes/TerminalManager.html":{}}}],["findbestscouttarget",{"_index":1248,"title":{},"body":{"classes/Scout.html":{}}}],["findbestterminalrequest",{"_index":1410,"title":{},"body":{"classes/TerminalManager.html":{}}}],["findcontrollerpos",{"_index":1158,"title":{},"body":{"classes/RemoteReserver.html":{}}}],["finddirections",{"_index":1339,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["finddirections(pos",{"_index":1357,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["finddynamicstampanchorargs",{"_index":728,"title":{"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{}},"body":{"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{}}}],["finddynamicstampanchorweightedargs",{"_index":737,"title":{"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{}},"body":{"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{}}}],["findenablepowertask",{"_index":981,"title":{},"body":{"classes/Operator.html":{}}}],["findfastfillerpos",{"_index":713,"title":{},"body":{"classes/FastFiller.html":{}}}],["findgeneralrepairtargets",{"_index":1466,"title":{},"body":{"classes/TowerManager.html":{}}}],["findgenerateopstask",{"_index":982,"title":{},"body":{"classes/Operator.html":{}}}],["findhealtarget",{"_index":1467,"title":{},"body":{"classes/TowerManager.html":{}}}],["findmaxcostpercreep",{"_index":1340,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["findmaxcostpercreep(maxcostpercreep",{"_index":1360,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["findmindismantlecost",{"_index":377,"title":{},"body":{"classes/CommuneManager.html":{}}}],["findmindismantlecost(mindismantle",{"_index":420,"title":{},"body":{"classes/CommuneManager.html":{}}}],["findminhealcost",{"_index":378,"title":{},"body":{"classes/CommuneManager.html":{}}}],["findminhealcost(minheal",{"_index":422,"title":{},"body":{"classes/CommuneManager.html":{}}}],["findminmeleeattackcost",{"_index":379,"title":{},"body":{"classes/CommuneManager.html":{}}}],["findminmeleeattackcost(mindamage",{"_index":429,"title":{},"body":{"classes/CommuneManager.html":{}}}],["findminrange",{"_index":1059,"title":{},"body":{"classes/Quad.html":{}}}],["findminrange(coord",{"_index":1083,"title":{},"body":{"classes/Quad.html":{}}}],["findminrangedattackcost",{"_index":380,"title":{},"body":{"classes/CommuneManager.html":{}}}],["findminrangedattackcost(mindamage",{"_index":431,"title":{},"body":{"classes/CommuneManager.html":{}}}],["findnewbestpowertask",{"_index":983,"title":{},"body":{"classes/Operator.html":{}}}],["findnextreaction",{"_index":871,"title":{},"body":{"classes/LabManager.html":{}}}],["findnudemaxupgradestrength",{"_index":381,"title":{},"body":{"classes/CommuneManager.html":{}}}],["findpowertask",{"_index":984,"title":{},"body":{"classes/Operator.html":{}}}],["findpresentthreat",{"_index":565,"title":{},"body":{"classes/DefenceManager.html":{}}}],["findrampart",{"_index":945,"title":{},"body":{"classes/MeleeDefender.html":{},"classes/RangedDefender.html":{}}}],["findrampartrepairtarget",{"_index":1468,"title":{},"body":{"classes/TowerManager.html":{}}}],["findramparttarget",{"_index":1483,"title":{},"body":{"classes/Vanguard.html":{}}}],["findremote",{"_index":116,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{}}}],["findrenewtask",{"_index":985,"title":{},"body":{"classes/Operator.html":{}}}],["finds",{"_index":272,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/CommuneManager.html":{},"classes/LabManager.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/Scout.html":{}}}],["findscouttarget",{"_index":973,"title":{},"body":{"classes/ObserverManager.html":{},"classes/Scout.html":{}}}],["findscouttargets",{"_index":1249,"title":{},"body":{"classes/Scout.html":{}}}],["findsquad",{"_index":149,"title":{},"body":{"classes/Antifa.html":{}}}],["findstampanchorargs",{"_index":740,"title":{"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{}},"body":{"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{}}}],["findtask",{"_index":986,"title":{},"body":{"classes/Operator.html":{}}}],["first",{"_index":676,"title":{},"body":{"classes/ErrorMapper.html":{},"index.html":{}}}],["fitness",{"_index":1858,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":1743,"title":{},"body":{"index.html":{}}}],["flag",{"_index":727,"title":{},"body":{"classes/FeatureFlagManager.html":{}}}],["flagmanager",{"_index":743,"title":{"classes/FlagManager.html":{}},"body":{"classes/FlagManager.html":{}}}],["flagname",{"_index":756,"title":{},"body":{"classes/FlagManager.html":{}}}],["flagnameparts",{"_index":755,"title":{},"body":{"classes/FlagManager.html":{}}}],["flags",{"_index":719,"title":{},"body":{"classes/FeatureFlagManager.html":{}}}],["flooded",{"_index":1900,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["floodforcoordcheck",{"_index":1889,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["folder",{"_index":1614,"title":{},"body":{"index.html":{}}}],["folders",{"_index":1671,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1543,"title":{},"body":{"index.html":{}}}],["following",{"_index":1812,"title":{},"body":{"index.html":{},"license.html":{}}}],["forces",{"_index":1514,"title":{},"body":{"index.html":{}}}],["forceupdate",{"_index":1388,"title":{},"body":{"classes/StatsManager.html":{}}}],["fork",{"_index":1549,"title":{},"body":{"index.html":{}}}],["found",{"_index":162,"title":{},"body":{"classes/Antifa.html":{},"index.html":{}}}],["frames",{"_index":139,"title":{},"body":{"interfaces/AnimatedStyle.html":{}}}],["free",{"_index":1823,"title":{},"body":{"license.html":{}}}],["fun",{"_index":1636,"title":{},"body":{"index.html":{}}}],["function",{"_index":687,"title":{},"body":{"classes/ErrorMapper.html":{},"classes/FlagManager.html":{},"classes/InitManager.html":{},"classes/Vanguard.html":{},"miscellaneous/typealiases.html":{}}}],["functional",{"_index":298,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["functions",{"_index":64,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["funnel",{"_index":306,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["funnelorder",{"_index":249,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["furnished",{"_index":1843,"title":{},"body":{"license.html":{}}}],["g",{"_index":888,"title":{},"body":{"classes/LabManager.html":{}}}],["game",{"_index":1637,"title":{},"body":{"index.html":{}}}],["game.time",{"_index":501,"title":{},"body":{"classes/ConstructionManager.html":{}}}],["generaldatavisuals",{"_index":1214,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["generaldatavisuals(y",{"_index":1227,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["generally",{"_index":1660,"title":{},"body":{"index.html":{}}}],["generalremoteroles",{"_index":1320,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["generate",{"_index":669,"title":{},"body":{"classes/ErrorMapper.html":{},"interfaces/Settings.html":{}}}],["generates",{"_index":665,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["get(packedcoord",{"_index":171,"title":{},"body":{"classes/BasePlans.html":{},"classes/RampartPlans.html":{}}}],["getallyrequests",{"_index":110,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["getavgcommunespermineral",{"_index":302,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getavgprice(resourcetype",{"_index":275,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getbestbuy",{"_index":1411,"title":{},"body":{"classes/TerminalManager.html":{}}}],["getbestbuy(resource",{"_index":1437,"title":{},"body":{"classes/TerminalManager.html":{}}}],["getbestsell",{"_index":1412,"title":{},"body":{"classes/TerminalManager.html":{}}}],["getbestsell(resource",{"_index":1438,"title":{},"body":{"classes/TerminalManager.html":{}}}],["getbuildersmakerequests",{"_index":463,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getbuyorder",{"_index":232,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getbuyorder(resourcetype",{"_index":269,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getcanmove",{"_index":598,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["getcombatstrength",{"_index":597,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["getcompoundpriority",{"_index":303,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getconsumer",{"_index":688,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["getcontrollerdowngradeupgradethreshold",{"_index":481,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getcontrollerlink",{"_index":490,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getdefaultmincacheamount",{"_index":295,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getdefencestrength",{"_index":1094,"title":{},"body":{"classes/Quad.html":{}}}],["getdefensiveramparts",{"_index":486,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getdeficits",{"_index":922,"title":{},"body":{"classes/LabManager.html":{}}}],["getenemythreatdataranged",{"_index":1096,"title":{},"body":{"classes/Quad.html":{}}}],["getenergyfromremote",{"_index":117,"title":{},"body":{"classes/AllyVanguard.html":{}}}],["getenergyfromroom",{"_index":118,"title":{},"body":{"classes/AllyVanguard.html":{}}}],["getfastfillerspawnenergycapacity",{"_index":491,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getfunnelorder",{"_index":304,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["gethassufficientroads",{"_index":473,"title":{},"body":{"classes/CommuneManager.html":{}}}],["gethits",{"_index":1095,"title":{},"body":{"classes/Quad.html":{}}}],["getinformation",{"_index":586,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["getinputlabs",{"_index":916,"title":{},"body":{"classes/LabManager.html":{}}}],["getlength",{"_index":833,"title":{},"body":{"classes/Int32Queue.html":{}}}],["getmarketisfunctional",{"_index":296,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getmaxcombatrequests",{"_index":460,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getmaxcommunes",{"_index":301,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getmaxcsitesperroom",{"_index":308,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getmaxupgradestrength",{"_index":472,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getmincredits",{"_index":289,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getminramparthits",{"_index":450,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getminstoredenergy",{"_index":441,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getmyorders",{"_index":290,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getmyorderscount",{"_index":293,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getneedssecondmincutlayer",{"_index":488,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getorders",{"_index":292,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getoutputlabs",{"_index":920,"title":{},"body":{"classes/LabManager.html":{}}}],["getplayerbyhate",{"_index":1034,"title":{},"body":{"classes/PlayerManager.html":{}}}],["getproduct",{"_index":692,"title":{},"body":{"classes/FactoryManager.html":{}}}],["getrampartrepairtargets",{"_index":487,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getrampartrepairtreshold",{"_index":1478,"title":{},"body":{"classes/TowerManager.html":{}}}],["getrampartsmaintenancecost",{"_index":449,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getreactionamountremaining",{"_index":921,"title":{},"body":{"classes/LabManager.html":{}}}],["getremotesourceresources",{"_index":1143,"title":{},"body":{"classes/RemoteHauler.html":{}}}],["getresources",{"_index":1144,"title":{},"body":{"classes/RemoteHauler.html":{}}}],["getresourcesinstoringstructures",{"_index":307,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["gets",{"_index":291,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getsegmentdata",{"_index":649,"title":{},"body":{"classes/ErrorExporter.html":{}}}],["getsellorder",{"_index":233,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getsellorder(resourcetype",{"_index":277,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getsourcelinks",{"_index":489,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getstoredenergybuildthreshold",{"_index":448,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getstoredenergyupgradethreshold",{"_index":447,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getstoringstructures",{"_index":451,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getstoringstructurescapacity",{"_index":459,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getstructuretypesbybuildpriority",{"_index":480,"title":{},"body":{"classes/CommuneManager.html":{}}}],["gettargetenergy",{"_index":446,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getterraincoords",{"_index":234,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getterraincoords(roomname",{"_index":281,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getting",{"_index":1505,"title":{"index.html":{},"license.html":{}},"body":{}}],["getupgradestructure",{"_index":479,"title":{},"body":{"classes/CommuneManager.html":{}}}],["getwillmove",{"_index":1106,"title":{},"body":{"classes/Quad.html":{}}}],["getworkrequestsbyscore",{"_index":294,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["getxy",{"_index":166,"title":{},"body":{"classes/BasePlans.html":{},"classes/RampartPlans.html":{}}}],["getxy(x",{"_index":173,"title":{},"body":{"classes/BasePlans.html":{},"classes/RampartPlans.html":{}}}],["global",{"_index":815,"title":{},"body":{"classes/InitManager.html":{}}}],["gnu",{"_index":1884,"title":{},"body":{"properties.html":{}}}],["go",{"_index":1612,"title":{},"body":{"index.html":{}}}],["goals",{"_index":640,"title":{},"body":{"interfaces/EnemyThreatData.html":{}}}],["gplv3",{"_index":1885,"title":{},"body":{"properties.html":{}}}],["grafana",{"_index":1576,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1822,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":1545,"title":{},"body":{"index.html":{}}}],["h",{"_index":819,"title":{},"body":{"classes/Int32Queue.html":{}}}],["handles",{"_index":202,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/EndTickManager.html":{}}}],["happy",{"_index":1786,"title":{},"body":{"index.html":{}}}],["harass",{"_index":751,"title":{},"body":{"classes/FlagManager.html":{}}}],["harass(flagname",{"_index":767,"title":{},"body":{"classes/FlagManager.html":{}}}],["harassrequest",{"_index":324,"title":{},"body":{"classes/CombatRequestManager.html":{}}}],["harassrequest(requestname",{"_index":332,"title":{},"body":{"classes/CombatRequestManager.html":{}}}],["harvest",{"_index":1118,"title":{},"body":{"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{}}}],["hasn't",{"_index":502,"title":{},"body":{"classes/ConstructionManager.html":{}}}],["hasrespawned",{"_index":1180,"title":{},"body":{"classes/RespawnManager.html":{}}}],["hassufficientroads",{"_index":397,"title":{},"body":{"classes/CommuneManager.html":{}}}],["hasvalidremote",{"_index":1115,"title":{},"body":{"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{}}}],["hate",{"_index":32,"title":{},"body":{"interfaces/AllyRequest.html":{}}}],["hateamount",{"_index":19,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{}}}],["hated",{"_index":1024,"title":{},"body":{"classes/PlayerManager.html":{}}}],["hauler",{"_index":190,"title":{"classes/Hauler.html":{}},"body":{"classes/BuilderManager.html":{},"classes/CommuneManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/SpawnRequestsManager.html":{}}}],["haulercarryparts",{"_index":356,"title":{},"body":{"classes/CommuneManager.html":{}}}],["haulermanager",{"_index":779,"title":{"classes/HaulerManager.html":{}},"body":{"classes/HaulerManager.html":{}}}],["haulerneedmanager",{"_index":357,"title":{"classes/HaulerNeedManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/HaulerNeedManager.html":{}}}],["haulersizemanager",{"_index":358,"title":{"classes/HaulerSizeManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/HaulerSizeManager.html":{}}}],["haulrequestmanager",{"_index":359,"title":{"classes/HaulRequestManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/HaulRequestManager.html":{}}}],["haveallmaterials",{"_index":693,"title":{},"body":{"classes/FactoryManager.html":{}}}],["haveallmaterials(resource",{"_index":706,"title":{},"body":{"classes/FactoryManager.html":{}}}],["head",{"_index":1774,"title":{},"body":{"index.html":{}}}],["heal",{"_index":47,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/CommuneManager.html":{},"interfaces/CreepCombatData.html":{}}}],["healcreeps",{"_index":1469,"title":{},"body":{"classes/TowerManager.html":{}}}],["healer",{"_index":618,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["healing",{"_index":1477,"title":{},"body":{"classes/TowerManager.html":{}}}],["help",{"_index":1618,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1821,"title":{},"body":{"license.html":{}}}],["high",{"_index":482,"title":{},"body":{"classes/CommuneManager.html":{},"classes/ErrorMapper.html":{}}}],["highest",{"_index":54,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/CollectiveManager.html":{},"classes/PlayerManager.html":{},"classes/Quad.html":{}}}],["highestthreat",{"_index":1019,"title":{},"body":{"classes/PlayerManager.html":{}}}],["history",{"_index":300,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["hits",{"_index":538,"title":{},"body":{"interfaces/CreepCombatData.html":{},"classes/Quad.html":{}}}],["holders",{"_index":1864,"title":{},"body":{"license.html":{}}}],["holdformation",{"_index":587,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["homepage",{"_index":1880,"title":{},"body":{"properties.html":{}}}],["hoping",{"_index":1785,"title":{},"body":{"index.html":{}}}],["host",{"_index":1699,"title":{},"body":{"index.html":{}}}],["https://github.com/alinanova21/zeswarm",{"_index":951,"title":{},"body":{"classes/MemHack.html":{}}}],["https://github.com/the",{"_index":1881,"title":{},"body":{"properties.html":{}}}],["hubhauler",{"_index":786,"title":{"classes/HubHauler.html":{}},"body":{"classes/HubHauler.html":{},"classes/SpawnRequestsManager.html":{}}}],["hubtocontroller",{"_index":926,"title":{},"body":{"classes/LinkManager.html":{}}}],["hubtofastfiller",{"_index":927,"title":{},"body":{"classes/LinkManager.html":{}}}],["huge",{"_index":1779,"title":{},"body":{"index.html":{}}}],["i'd",{"_index":1759,"title":{},"body":{"index.html":{}}}],["id",{"_index":20,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/Builder.html":{},"classes/Claimer.html":{},"classes/CommuneManager.html":{},"classes/ControllerUpgrader.html":{},"classes/FastFiller.html":{},"classes/Hauler.html":{},"classes/HubHauler.html":{},"interfaces/InterpretedRoomEvent.html":{},"classes/LabManager.html":{},"classes/Maintainer.html":{},"classes/MeleeDefender.html":{},"classes/MineralHarvester.html":{},"classes/Operator.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RequestHauler.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/TowerManager.html":{},"classes/Vanguard.html":{}}}],["ide",{"_index":1731,"title":{},"body":{"index.html":{}}}],["identifies",{"_index":1097,"title":{},"body":{"classes/Quad.html":{}}}],["identify",{"_index":572,"title":{},"body":{"classes/DefenceManager.html":{}}}],["identifying",{"_index":1080,"title":{},"body":{"classes/Quad.html":{}}}],["implement",{"_index":1082,"title":{},"body":{"classes/Quad.html":{}}}],["implied",{"_index":1854,"title":{},"body":{"license.html":{}}}],["import",{"_index":955,"title":{},"body":{"classes/MemHack.html":{}}}],["important",{"_index":1736,"title":{},"body":{"index.html":{}}}],["improvements",{"_index":1597,"title":{},"body":{"index.html":{}}}],["inactive",{"_index":283,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/SpawningStructuresManager.html":{}}}],["inactivespawns",{"_index":1333,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["included",{"_index":1687,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":1681,"title":{},"body":{"index.html":{},"license.html":{}}}],["incomingtransactions",{"_index":752,"title":{},"body":{"classes/FlagManager.html":{}}}],["incomingtransactions(flagname",{"_index":768,"title":{},"body":{"classes/FlagManager.html":{}}}],["increase",{"_index":33,"title":{},"body":{"interfaces/AllyRequest.html":{}}}],["incredibly",{"_index":1644,"title":{},"body":{"index.html":{}}}],["increment",{"_index":1279,"title":{},"body":{"interfaces/Settings.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"interfaces/AdvancedFindDistanceOpts.html":{},"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"interfaces/AnimatedStyle.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/Collectivizer.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ConstructionSiteManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"interfaces/CreepCombatData.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"interfaces/CustomLogOpts.html":{},"interfaces/DeadCreepNames.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/EndTickManager.html":{},"interfaces/EnemyThreatData.html":{},"interfaces/ErrorData.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"interfaces/FeatureFlagConfig.html":{},"classes/FeatureFlagManager.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/InitManager.html":{},"classes/Int32Queue.html":{},"interfaces/InterpretedRoomEvent.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MemHack.html":{},"classes/MigrationManager.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"interfaces/OutputArgs.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"classes/RespawnManager.html":{},"classes/RoomPruningManager.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{},"classes/RoomsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"interfaces/Settings.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"interfaces/SpeechStyle.html":{},"classes/StatsManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TickInit.html":{},"classes/TombstoneManager.html":{},"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{},"classes/TowerManager.html":{},"classes/UserScriptManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{},"miscellaneous/typealiases.html":{}}}],["individual",{"_index":1013,"title":{},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["induce",{"_index":1280,"title":{},"body":{"interfaces/Settings.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AdvancedFindDistanceOpts.html":{},"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"interfaces/AnimatedStyle.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/Collectivizer.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ConstructionSiteManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"interfaces/CreepCombatData.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"interfaces/CustomLogOpts.html":{},"interfaces/DeadCreepNames.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/EndTickManager.html":{},"interfaces/EnemyThreatData.html":{},"interfaces/ErrorData.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"interfaces/FeatureFlagConfig.html":{},"classes/FeatureFlagManager.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/InitManager.html":{},"classes/Int32Queue.html":{},"classes/InterShardPlanner.html":{},"interfaces/InterpretedRoomEvent.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MemHack.html":{},"classes/MigrationManager.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"interfaces/OutputArgs.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"classes/RespawnManager.html":{},"classes/RoomPruningManager.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{},"classes/RoomsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"interfaces/Settings.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"interfaces/SpeechStyle.html":{},"classes/StatsManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TickInit.html":{},"classes/TombstoneManager.html":{},"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{},"classes/TowerManager.html":{},"classes/UserScriptManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{}}}],["information",{"_index":1562,"title":{},"body":{"index.html":{}}}],["informs",{"_index":474,"title":{},"body":{"classes/CommuneManager.html":{}}}],["initallies",{"_index":807,"title":{},"body":{"classes/InitManager.html":{}}}],["initglobal",{"_index":808,"title":{},"body":{"classes/InitManager.html":{}}}],["initialrun",{"_index":185,"title":{},"body":{"classes/BuilderManager.html":{},"classes/ControllerUpgraderManager.html":{}}}],["initialrun(room",{"_index":191,"title":{},"body":{"classes/BuilderManager.html":{},"classes/ControllerUpgraderManager.html":{}}}],["initialruncreep",{"_index":187,"title":{},"body":{"classes/BuilderManager.html":{},"classes/ControllerUpgraderManager.html":{}}}],["initialruncreep(creep",{"_index":192,"title":{},"body":{"classes/BuilderManager.html":{},"classes/ControllerUpgraderManager.html":{}}}],["initmanager",{"_index":800,"title":{"classes/InitManager.html":{}},"body":{"classes/InitManager.html":{}}}],["initmemory",{"_index":809,"title":{},"body":{"classes/InitManager.html":{}}}],["initplayer",{"_index":1021,"title":{},"body":{"classes/PlayerManager.html":{}}}],["initplayer(playername",{"_index":1029,"title":{},"body":{"classes/PlayerManager.html":{}}}],["initrun",{"_index":82,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/RoomsManager.html":{}}}],["input",{"_index":903,"title":{},"body":{"classes/LabManager.html":{}}}],["inputfull",{"_index":872,"title":{},"body":{"classes/LabManager.html":{}}}],["inputfull(inputlab",{"_index":912,"title":{},"body":{"classes/LabManager.html":{}}}],["inputlab",{"_index":913,"title":{},"body":{"classes/LabManager.html":{}}}],["inputlab1",{"_index":847,"title":{},"body":{"classes/LabManager.html":{}}}],["inputlab2",{"_index":848,"title":{},"body":{"classes/LabManager.html":{}}}],["inputlabids",{"_index":849,"title":{},"body":{"classes/LabManager.html":{}}}],["inputlabs",{"_index":879,"title":{},"body":{"classes/LabManager.html":{}}}],["inputresources",{"_index":850,"title":{},"body":{"classes/LabManager.html":{}}}],["inspiration",{"_index":1529,"title":{},"body":{"index.html":{}}}],["install",{"_index":1616,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1739,"title":{},"body":{"index.html":{}}}],["installing",{"_index":1587,"title":{},"body":{"index.html":{}}}],["instead",{"_index":468,"title":{},"body":{"classes/CommuneManager.html":{},"index.html":{}}}],["instructions",{"_index":1685,"title":{},"body":{"index.html":{}}}],["int32array",{"_index":828,"title":{},"body":{"classes/Int32Queue.html":{}}}],["int32queue",{"_index":817,"title":{"classes/Int32Queue.html":{}},"body":{"classes/Int32Queue.html":{}}}],["integration",{"_index":1732,"title":{},"body":{"index.html":{}}}],["intended",{"_index":1556,"title":{},"body":{"index.html":{}}}],["inter",{"_index":203,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AdvancedFindDistanceOpts.html":{},"interfaces/AllyRequest.html":{},"interfaces/AnimatedStyle.html":{},"interfaces/CreepCombatData.html":{},"interfaces/CustomLogOpts.html":{},"interfaces/DeadCreepNames.html":{},"interfaces/EnemyThreatData.html":{},"interfaces/ErrorData.html":{},"interfaces/FeatureFlagConfig.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"interfaces/InterpretedRoomEvent.html":{},"interfaces/OutputArgs.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"interfaces/RoomVisual.html":{},"interfaces/Settings.html":{},"interfaces/SpeechStyle.html":{},"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{}},"body":{}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AdvancedFindDistanceOpts.html":{},"interfaces/AllyRequest.html":{},"interfaces/AnimatedStyle.html":{},"interfaces/CreepCombatData.html":{},"interfaces/CustomLogOpts.html":{},"interfaces/DeadCreepNames.html":{},"interfaces/EnemyThreatData.html":{},"interfaces/ErrorData.html":{},"interfaces/FeatureFlagConfig.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"interfaces/InterpretedRoomEvent.html":{},"interfaces/OutputArgs.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"interfaces/RoomVisual.html":{},"interfaces/Settings.html":{},"interfaces/SpeechStyle.html":{},"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{},"overview.html":{}}}],["international",{"_index":1507,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["internationalallybuildrequestsdatavisuals",{"_index":1215,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["internationalallybuildrequestsdatavisuals(y",{"_index":1228,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["internationalallycombatrequestsdatavisuals",{"_index":1216,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["internationalallycombatrequestsdatavisuals(y",{"_index":1229,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["internationalallyresourcerequestsdatavisuals",{"_index":1217,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["internationalallyresourcerequestsdatavisuals(y",{"_index":1230,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["internationalconfig",{"_index":1374,"title":{},"body":{"classes/StatsManager.html":{}}}],["internationaldatavisuals",{"_index":223,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/FlagManager.html":{},"classes/RoomVisualsManager.html":{}}}],["internationaldatavisuals(flagname",{"_index":769,"title":{},"body":{"classes/FlagManager.html":{}}}],["internationalendtick",{"_index":1375,"title":{},"body":{"classes/StatsManager.html":{}}}],["internationalgeneraldatavisuals",{"_index":1218,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["internationalgeneraldatavisuals(y",{"_index":1231,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["internationalpretick",{"_index":1376,"title":{},"body":{"classes/StatsManager.html":{}}}],["internationalrequestsdatavisuals",{"_index":1219,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["internationalrequestsdatavisuals(y",{"_index":1232,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["internationalstatdatavisuals",{"_index":1220,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["internationalstatdatavisuals(y",{"_index":1233,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["internationalterminalrequestsdatavisuals",{"_index":1221,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["internationalterminalrequestsdatavisuals(y",{"_index":1234,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["interpretedroomevent",{"_index":836,"title":{"interfaces/InterpretedRoomEvent.html":{}},"body":{"interfaces/InterpretedRoomEvent.html":{}}}],["intershardplanner",{"_index":834,"title":{"classes/InterShardPlanner.html":{}},"body":{"classes/InterShardPlanner.html":{}}}],["ip",{"_index":1701,"title":{},"body":{"index.html":{}}}],["isbasesafe",{"_index":566,"title":{},"body":{"classes/DefenceManager.html":{}}}],["iscontrollersafe",{"_index":567,"title":{},"body":{"classes/DefenceManager.html":{}}}],["iscurrentreactionfinished",{"_index":873,"title":{},"body":{"classes/LabManager.html":{}}}],["iscurrentremotevalid",{"_index":1145,"title":{},"body":{"classes/RemoteHauler.html":{}}}],["isdying",{"_index":532,"title":{},"body":{"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/SourceHarvester.html":{}}}],["isdying(creep",{"_index":535,"title":{},"body":{"classes/ControllerUpgraderManager.html":{}}}],["isflagon",{"_index":721,"title":{},"body":{"classes/FeatureFlagManager.html":{}}}],["isflagon(flag",{"_index":726,"title":{},"body":{"classes/FeatureFlagManager.html":{}}}],["isn't",{"_index":628,"title":{},"body":{"classes/EndTickCreepManager.html":{},"classes/InitManager.html":{}}}],["isremoteblocked",{"_index":1162,"title":{},"body":{"classes/RemotesManager.html":{}}}],["isremoteblocked(remotename",{"_index":1165,"title":{},"body":{"classes/RemotesManager.html":{}}}],["isremotevalid",{"_index":1132,"title":{},"body":{"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{}}}],["isremotevalid(remotename",{"_index":1136,"title":{},"body":{"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{}}}],["isreverse",{"_index":851,"title":{},"body":{"classes/LabManager.html":{}}}],["issues",{"_index":1788,"title":{},"body":{"index.html":{}}}],["istradingpossible",{"_index":1413,"title":{},"body":{"classes/TerminalManager.html":{}}}],["it's",{"_index":1771,"title":{},"body":{"index.html":{}}}],["join",{"_index":1572,"title":{},"body":{"index.html":{}}}],["js",{"_index":1624,"title":{},"body":{"index.html":{}}}],["kh",{"_index":886,"title":{},"body":{"classes/LabManager.html":{}}}],["kind",{"_index":1852,"title":{},"body":{"license.html":{}}}],["known",{"_index":1027,"title":{},"body":{"classes/PlayerManager.html":{},"index.html":{}}}],["labmanager",{"_index":360,"title":{"classes/LabManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/LabManager.html":{}}}],["labs",{"_index":917,"title":{},"body":{"classes/LabManager.html":{}}}],["labsbyboost",{"_index":852,"title":{},"body":{"classes/LabManager.html":{}}}],["laggy",{"_index":1761,"title":{},"body":{"index.html":{}}}],["largest",{"_index":461,"title":{},"body":{"classes/CommuneManager.html":{}}}],["lastattempt",{"_index":1183,"title":{},"body":{"classes/RoomPruningManager.html":{}}}],["lastrun",{"_index":493,"title":{},"body":{"classes/ConstructionManager.html":{}}}],["laugh",{"_index":1531,"title":{},"body":{"index.html":{}}}],["leader",{"_index":582,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["learn",{"_index":1622,"title":{},"body":{"index.html":{}}}],["length",{"_index":825,"title":{},"body":{"classes/Int32Queue.html":{}}}],["less",{"_index":1661,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1867,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1865,"title":{},"body":{"license.html":{}}}],["license",{"_index":1816,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["limitation",{"_index":1833,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1855,"title":{},"body":{"license.html":{}}}],["linestyle",{"_index":1199,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["linkmanager",{"_index":361,"title":{"classes/LinkManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/LinkManager.html":{}}}],["links",{"_index":1813,"title":{},"body":{"index.html":{}}}],["linux/macos",{"_index":1608,"title":{},"body":{"index.html":{}}}],["list",{"_index":1270,"title":{},"body":{"interfaces/Settings.html":{}}}],["literal",{"_index":14,"title":{},"body":{"interfaces/AdvancedFindDistanceOpts.html":{},"classes/BasePlans.html":{},"classes/CollectiveManager.html":{},"classes/CommuneManager.html":{},"classes/ErrorMapper.html":{},"classes/LabManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/TerminalManager.html":{}}}],["local",{"_index":435,"title":{},"body":{"classes/CommuneManager.html":{}}}],["localhost:21025",{"_index":1749,"title":{},"body":{"index.html":{}}}],["localhost:3000",{"_index":1750,"title":{},"body":{"index.html":{}}}],["log",{"_index":1284,"title":{},"body":{"interfaces/Settings.html":{}}}],["logging",{"_index":632,"title":{},"body":{"classes/EndTickManager.html":{},"interfaces/Settings.html":{}}}],["long",{"_index":1047,"title":{},"body":{"classes/PowerSpawnsManager.html":{}}}],["longer",{"_index":1150,"title":{},"body":{"classes/RemoteHauler.html":{}}}],["loop",{"_index":686,"title":{},"body":{"classes/ErrorMapper.html":{},"classes/MemHack.html":{},"classes/Quad.html":{}}}],["lower",{"_index":1100,"title":{},"body":{"classes/Quad.html":{}}}],["lowest",{"_index":56,"title":{},"body":{"interfaces/AllyRequest.html":{}}}],["luck",{"_index":1655,"title":{},"body":{"index.html":{}}}],["made",{"_index":92,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/HubHauler.html":{}}}],["main",{"_index":1593,"title":{},"body":{"index.html":{}}}],["maintaincontainer",{"_index":1133,"title":{},"body":{"classes/RemoteHarvester.html":{},"classes/SourceHarvester.html":{}}}],["maintaincontainer(container",{"_index":1137,"title":{},"body":{"classes/RemoteHarvester.html":{}}}],["maintaincontainer(sourcecontainer",{"_index":1307,"title":{},"body":{"classes/SourceHarvester.html":{}}}],["maintainer",{"_index":929,"title":{"classes/Maintainer.html":{}},"body":{"classes/Maintainer.html":{}}}],["maintainers",{"_index":1321,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["make",{"_index":810,"title":{},"body":{"classes/InitManager.html":{},"index.html":{}}}],["makerampartsprivate",{"_index":568,"title":{},"body":{"classes/DefenceManager.html":{}}}],["making",{"_index":1610,"title":{},"body":{"index.html":{}}}],["manageabandonment",{"_index":325,"title":{},"body":{"classes/CombatRequestManager.html":{},"classes/RemotesManager.html":{}}}],["manageabandonment(remotename",{"_index":1166,"title":{},"body":{"classes/RemotesManager.html":{}}}],["manageabandonment(requestname",{"_index":333,"title":{},"body":{"classes/CombatRequestManager.html":{}}}],["managedefencerequests",{"_index":569,"title":{},"body":{"classes/DefenceManager.html":{}}}],["manageinaction",{"_index":326,"title":{},"body":{"classes/CombatRequestManager.html":{}}}],["manageinaction(requestname",{"_index":334,"title":{},"body":{"classes/CombatRequestManager.html":{}}}],["managepathcacheallowance",{"_index":1163,"title":{},"body":{"classes/RemotesManager.html":{}}}],["managepathcacheallowance(remotename",{"_index":1167,"title":{},"body":{"classes/RemotesManager.html":{}}}],["managepowertask",{"_index":987,"title":{},"body":{"classes/Operator.html":{}}}],["manager",{"_index":183,"title":{},"body":{"classes/BuilderManager.html":{},"classes/ControllerUpgraderManager.html":{},"classes/HaulerManager.html":{},"interfaces/Settings.html":{}}}],["managereactions",{"_index":874,"title":{},"body":{"classes/LabManager.html":{}}}],["manageresources",{"_index":1414,"title":{},"body":{"classes/TerminalManager.html":{}}}],["managethreat",{"_index":570,"title":{},"body":{"classes/DefenceManager.html":{}}}],["manual",{"_index":1559,"title":{},"body":{"index.html":{}}}],["many",{"_index":1782,"title":{},"body":{"index.html":{}}}],["map",{"_index":165,"title":{},"body":{"classes/BasePlans.html":{},"classes/DefenceManager.html":{},"classes/ErrorMapper.html":{},"classes/MapVisualsManager.html":{},"classes/RampartPlans.html":{},"interfaces/Settings.html":{},"dependencies.html":{}}}],["mapped",{"_index":684,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["mapvisuals",{"_index":936,"title":{},"body":{"classes/MapVisualsManager.html":{},"interfaces/Settings.html":{}}}],["mapvisualsmanager",{"_index":931,"title":{"classes/MapVisualsManager.html":{}},"body":{"classes/MapVisualsManager.html":{}}}],["market",{"_index":1290,"title":{},"body":{"interfaces/Settings.html":{}}}],["marketisfunctional",{"_index":245,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["marketresourceconstant",{"_index":270,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["marketusage",{"_index":1262,"title":{},"body":{"interfaces/Settings.html":{}}}],["marvintmb",{"_index":1808,"title":{},"body":{"index.html":{}}}],["marvintmb's",{"_index":1579,"title":{},"body":{"index.html":{}}}],["master",{"_index":1797,"title":{},"body":{"index.html":{}}}],["matching",{"_index":16,"title":{},"body":{"interfaces/AdvancedFindDistanceOpts.html":{},"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"interfaces/AnimatedStyle.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/Collectivizer.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ConstructionSiteManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"interfaces/CreepCombatData.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"interfaces/CustomLogOpts.html":{},"interfaces/DeadCreepNames.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/EndTickManager.html":{},"interfaces/EnemyThreatData.html":{},"interfaces/ErrorData.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"interfaces/FeatureFlagConfig.html":{},"classes/FeatureFlagManager.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/InitManager.html":{},"classes/Int32Queue.html":{},"classes/InterShardPlanner.html":{},"interfaces/InterpretedRoomEvent.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MemHack.html":{},"classes/MigrationManager.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"interfaces/OutputArgs.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"classes/RespawnManager.html":{},"classes/RoomPruningManager.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{},"classes/RoomsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"interfaces/Settings.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"interfaces/SpeechStyle.html":{},"classes/StatsManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TickInit.html":{},"classes/TombstoneManager.html":{},"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{},"classes/TowerManager.html":{},"classes/UserScriptManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["matters",{"_index":205,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["max",{"_index":286,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/CommuneManager.html":{}}}],["maxamount",{"_index":21,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{}}}],["maxcombatrequests",{"_index":394,"title":{},"body":{"classes/CommuneManager.html":{}}}],["maxcommunes",{"_index":246,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["maxcostpercreep",{"_index":1361,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["maxcsites",{"_index":508,"title":{},"body":{"classes/ConstructionManager.html":{}}}],["maxcsitesperroom",{"_index":251,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["maxlines",{"_index":996,"title":{},"body":{"interfaces/OutputArgs.html":{}}}],["maxprice",{"_index":278,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["maxupgradestrength",{"_index":396,"title":{},"body":{"classes/CommuneManager.html":{}}}],["maybe",{"_index":1475,"title":{},"body":{"classes/TowerManager.html":{}}}],["melee",{"_index":48,"title":{},"body":{"interfaces/AllyRequest.html":{}}}],["meleedamage",{"_index":539,"title":{},"body":{"interfaces/CreepCombatData.html":{}}}],["meleedefender",{"_index":940,"title":{"classes/MeleeDefender.html":{}},"body":{"classes/MeleeDefender.html":{}}}],["member",{"_index":1075,"title":{},"body":{"classes/Quad.html":{}}}],["membername",{"_index":1093,"title":{},"body":{"classes/Quad.html":{}}}],["membernames",{"_index":156,"title":{},"body":{"classes/Antifa.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["members",{"_index":583,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["membersattackmove",{"_index":1060,"title":{},"body":{"classes/Quad.html":{}}}],["membersattackmove(moveleader",{"_index":1084,"title":{},"body":{"classes/Quad.html":{}}}],["membersbycoord",{"_index":1056,"title":{},"body":{"classes/Quad.html":{}}}],["membersbytype",{"_index":609,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["memhack",{"_index":948,"title":{"classes/MemHack.html":{}},"body":{"classes/MemHack.html":{}}}],["memhack.run",{"_index":957,"title":{},"body":{"classes/MemHack.html":{}}}],["memory",{"_index":70,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/InitManager.html":{},"classes/MemHack.html":{},"classes/SpawningStructuresManager.html":{}}}],["merchantability",{"_index":1857,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1789,"title":{},"body":{"index.html":{},"license.html":{}}}],["mermaid",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["mess",{"_index":1476,"title":{},"body":{"classes/TowerManager.html":{}}}],["methods",{"_index":65,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/Collectivizer.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ConstructionSiteManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/EndTickManager.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"classes/FeatureFlagManager.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/InitManager.html":{},"classes/Int32Queue.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MemHack.html":{},"classes/MigrationManager.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"classes/RespawnManager.html":{},"classes/RoomPruningManager.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{},"classes/RoomsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"classes/StatsManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TickInit.html":{},"classes/TombstoneManager.html":{},"classes/TowerManager.html":{},"classes/UserScriptManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{}}}],["migrate",{"_index":496,"title":{},"body":{"classes/ConstructionManager.html":{},"classes/MigrationManager.html":{},"interfaces/Settings.html":{}}}],["migration",{"_index":1283,"title":{},"body":{"interfaces/Settings.html":{}}}],["migrationmanager",{"_index":958,"title":{"classes/MigrationManager.html":{}},"body":{"classes/MigrationManager.html":{}}}],["migrations",{"_index":1281,"title":{},"body":{"interfaces/Settings.html":{}}}],["military",{"_index":1568,"title":{},"body":{"index.html":{}}}],["min",{"_index":1324,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["minavoid",{"_index":730,"title":{},"body":{"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["mincredits",{"_index":239,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["mindamage",{"_index":22,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/CommuneManager.html":{},"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{}}}],["mindismantle",{"_index":421,"title":{},"body":{"classes/CommuneManager.html":{}}}],["mineral",{"_index":264,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/MineralHarvester.html":{}}}],["mineralboostconstant",{"_index":885,"title":{},"body":{"classes/LabManager.html":{}}}],["mineralcommunes",{"_index":224,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["mineralcompoundconstant",{"_index":884,"title":{},"body":{"classes/LabManager.html":{}}}],["mineralconstant",{"_index":702,"title":{},"body":{"classes/FactoryManager.html":{},"classes/LabManager.html":{}}}],["mineralharvester",{"_index":962,"title":{"classes/MineralHarvester.html":{}},"body":{"classes/MineralHarvester.html":{},"classes/SpawnRequestsManager.html":{}}}],["minheal",{"_index":427,"title":{},"body":{"classes/CommuneManager.html":{}}}],["minimum",{"_index":42,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/CommuneManager.html":{}}}],["minmeleeheal",{"_index":23,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{}}}],["minprice",{"_index":271,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["minramparthits",{"_index":391,"title":{},"body":{"classes/CommuneManager.html":{}}}],["minrangedheal",{"_index":24,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{}}}],["minremotepriority",{"_index":1315,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["minstoredenergy",{"_index":386,"title":{},"body":{"classes/CommuneManager.html":{}}}],["miscellaneous",{"_index":1887,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["mit",{"_index":1817,"title":{},"body":{"license.html":{}}}],["mmo",{"_index":1717,"title":{},"body":{"index.html":{}}}],["modify",{"_index":1835,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1875,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monthly",{"_index":1810,"title":{},"body":{"index.html":{}}}],["more",{"_index":635,"title":{},"body":{"classes/EndTickManager.html":{},"classes/ErrorMapper.html":{},"index.html":{}}}],["movecoord",{"_index":1152,"title":{},"body":{"classes/RemoteHauler.html":{}}}],["moveleader",{"_index":594,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["moverequestopts",{"_index":593,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["movetype",{"_index":610,"title":{},"body":{"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["moving",{"_index":1088,"title":{},"body":{"classes/Quad.html":{}}}],["much",{"_index":31,"title":{},"body":{"interfaces/AllyRequest.html":{}}}],["myorders",{"_index":240,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["myorderscount",{"_index":242,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["myrequests",{"_index":80,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["name",{"_index":103,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"classes/FeatureFlagManager.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/Int32Queue.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"classes/StatsManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TombstoneManager.html":{},"classes/TowerManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{},"index.html":{}}}],["names",{"_index":261,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/ErrorMapper.html":{},"classes/PlayerManager.html":{}}}],["need",{"_index":51,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/LabManager.html":{},"index.html":{}}}],["needs",{"_index":46,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/CommuneManager.html":{},"classes/RemoteHauler.html":{}}}],["needssecondmincutlayer",{"_index":403,"title":{},"body":{"classes/CommuneManager.html":{}}}],["neutral",{"_index":1291,"title":{},"body":{"interfaces/Settings.html":{}}}],["new",{"_index":1522,"title":{},"body":{"index.html":{}}}],["newcustomcreepid",{"_index":235,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["newer",{"_index":1555,"title":{},"body":{"index.html":{}}}],["newrun",{"_index":548,"title":{},"body":{"classes/CreepRoleManager.html":{}}}],["newtickid",{"_index":236,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["next",{"_index":96,"title":{},"body":{"classes/AllyRequestManager.html":{},"index.html":{}}}],["nextproduction",{"_index":694,"title":{},"body":{"classes/FactoryManager.html":{}}}],["nextproduction(product",{"_index":708,"title":{},"body":{"classes/FactoryManager.html":{}}}],["nextspawnenergyavailable",{"_index":362,"title":{},"body":{"classes/CommuneManager.html":{}}}],["nice",{"_index":1178,"title":{},"body":{"classes/RespawnManager.html":{}}}],["node",{"_index":1602,"title":{},"body":{"index.html":{}}}],["nomove",{"_index":1902,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["non",{"_index":204,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["nonaggressionplayers",{"_index":1263,"title":{},"body":{"interfaces/Settings.html":{}}}],["none",{"_index":161,"title":{},"body":{"classes/Antifa.html":{}}}],["noninfringement",{"_index":1861,"title":{},"body":{"license.html":{}}}],["noobs",{"_index":1633,"title":{},"body":{"index.html":{}}}],["notice",{"_index":1846,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1600,"title":{},"body":{"index.html":{}}}],["nuker",{"_index":968,"title":{},"body":{"classes/NukerManager.html":{}}}],["nukermanager",{"_index":966,"title":{"classes/NukerManager.html":{}},"body":{"classes/NukerManager.html":{}}}],["null",{"_index":1428,"title":{},"body":{"classes/TerminalManager.html":{}}}],["number",{"_index":30,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"interfaces/AnimatedStyle.html":{},"classes/BasePlans.html":{},"classes/CollectiveManager.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"interfaces/CreepCombatData.html":{},"interfaces/CustomLogOpts.html":{},"classes/DefenceManager.html":{},"interfaces/ErrorData.html":{},"classes/ErrorExporter.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"classes/HaulRequestManager.html":{},"classes/Int32Queue.html":{},"interfaces/InterpretedRoomEvent.html":{},"classes/LabManager.html":{},"interfaces/OutputArgs.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RoomPruningManager.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{},"interfaces/Settings.html":{},"classes/SourceHarvester.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"interfaces/SpeechStyle.html":{},"classes/StatsManager.html":{},"classes/TerminalManager.html":{},"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{},"classes/TowerManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{}}}],["nvm",{"_index":1607,"title":{},"body":{"index.html":{}}}],["observer",{"_index":971,"title":{},"body":{"classes/ObserverManager.html":{}}}],["observermanager",{"_index":363,"title":{"classes/ObserverManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/ObserverManager.html":{}}}],["obtainenergyifneeded",{"_index":1134,"title":{},"body":{"classes/RemoteHarvester.html":{}}}],["obtaining",{"_index":1826,"title":{},"body":{"license.html":{}}}],["offensive",{"_index":1025,"title":{},"body":{"classes/PlayerManager.html":{},"index.html":{}}}],["official",{"_index":1691,"title":{},"body":{"index.html":{}}}],["offset",{"_index":1074,"title":{},"body":{"classes/Quad.html":{}}}],["offset's",{"_index":1077,"title":{},"body":{"classes/Quad.html":{}}}],["old",{"_index":518,"title":{},"body":{"classes/ConstructionSiteManager.html":{},"index.html":{}}}],["one",{"_index":160,"title":{},"body":{"classes/Antifa.html":{},"classes/CollectiveManager.html":{},"index.html":{}}}],["ones",{"_index":1525,"title":{},"body":{"index.html":{}}}],["opacity",{"_index":140,"title":{},"body":{"interfaces/AnimatedStyle.html":{},"interfaces/SpeechStyle.html":{}}}],["open",{"_index":1649,"title":{},"body":{"index.html":{},"properties.html":{}}}],["operator",{"_index":975,"title":{"classes/Operator.html":{}},"body":{"classes/Operator.html":{}}}],["operatormanager",{"_index":988,"title":{},"body":{"classes/Operator.html":{}}}],["operatormanager(room",{"_index":992,"title":{},"body":{"classes/Operator.html":{}}}],["opperate",{"_index":918,"title":{},"body":{"classes/LabManager.html":{}}}],["optimizations",{"_index":1599,"title":{},"body":{"index.html":{}}}],["optional",{"_index":8,"title":{},"body":{"interfaces/AdvancedFindDistanceOpts.html":{},"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"interfaces/AnimatedStyle.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"interfaces/CustomLogOpts.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"interfaces/ErrorData.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"classes/FeatureFlagManager.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/Int32Queue.html":{},"interfaces/InterpretedRoomEvent.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"interfaces/OutputArgs.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"interfaces/SpeechStyle.html":{},"classes/StatsManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TombstoneManager.html":{},"classes/TowerManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{}}}],["opts",{"_index":595,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{},"interfaces/RoomVisual.html":{}}}],["order",{"_index":254,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["ordered",{"_index":257,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["ordermanager",{"_index":237,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["orders",{"_index":241,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["organized",{"_index":253,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/CommuneManager.html":{},"classes/MemHack.html":{}}}],["organizespawns",{"_index":1341,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["organizing",{"_index":40,"title":{},"body":{"interfaces/AllyRequest.html":{}}}],["original",{"_index":670,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["otherwise",{"_index":1550,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":470,"title":{},"body":{"classes/CommuneManager.html":{},"classes/LabManager.html":{},"index.html":{},"license.html":{}}}],["outgoing",{"_index":252,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["outgoingtransactions",{"_index":753,"title":{},"body":{"classes/FlagManager.html":{}}}],["outgoingtransactions(flagname",{"_index":770,"title":{},"body":{"classes/FlagManager.html":{}}}],["output",{"_index":904,"title":{},"body":{"classes/LabManager.html":{}}}],["outputargs",{"_index":993,"title":{"interfaces/OutputArgs.html":{}},"body":{"interfaces/OutputArgs.html":{}}}],["outputlabs",{"_index":880,"title":{},"body":{"classes/LabManager.html":{}}}],["outputresource",{"_index":853,"title":{},"body":{"classes/LabManager.html":{}}}],["outsideremote",{"_index":1159,"title":{},"body":{"classes/RemoteReserver.html":{}}}],["overly",{"_index":1551,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1876,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":255,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/ConstructionManager.html":{},"index.html":{}}}],["pack",{"_index":167,"title":{},"body":{"classes/BasePlans.html":{},"classes/RampartPlans.html":{}}}],["package",{"_index":1495,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":1730,"title":{},"body":{"index.html":{}}}],["packedcoord",{"_index":172,"title":{},"body":{"classes/BasePlans.html":{},"classes/RampartPlans.html":{}}}],["packedmap",{"_index":177,"title":{},"body":{"classes/BasePlans.html":{},"classes/RampartPlans.html":{}}}],["panda",{"_index":1796,"title":{},"body":{"index.html":{}}}],["pandamaster",{"_index":1742,"title":{},"body":{"index.html":{}}}],["panel",{"_index":1563,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"classes/FeatureFlagManager.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/Int32Queue.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"classes/StatsManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TombstoneManager.html":{},"classes/TowerManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{}}}],["partial",{"_index":90,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/CollectiveManager.html":{},"classes/DynamicSquad.html":{}}}],["particular",{"_index":1859,"title":{},"body":{"license.html":{}}}],["parts",{"_index":415,"title":{},"body":{"classes/CommuneManager.html":{}}}],["passivehealquad",{"_index":1061,"title":{},"body":{"classes/Quad.html":{}}}],["passiverangedattack",{"_index":1062,"title":{},"body":{"classes/Quad.html":{}}}],["password",{"_index":1704,"title":{},"body":{"index.html":{}}}],["pathgoal",{"_index":642,"title":{},"body":{"interfaces/EnemyThreatData.html":{}}}],["patreon",{"_index":1815,"title":{},"body":{"index.html":{}}}],["paypal",{"_index":1814,"title":{},"body":{"index.html":{}}}],["people",{"_index":1638,"title":{},"body":{"index.html":{}}}],["per",{"_index":1330,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["perform",{"_index":1558,"title":{},"body":{"index.html":{}}}],["performance",{"_index":1747,"title":{},"body":{"index.html":{}}}],["performing",{"_index":960,"title":{},"body":{"classes/MigrationManager.html":{}}}],["permission",{"_index":1820,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1841,"title":{},"body":{"license.html":{}}}],["person",{"_index":1825,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1842,"title":{},"body":{"license.html":{}}}],["pick",{"_index":1646,"title":{},"body":{"index.html":{}}}],["pickproduct",{"_index":695,"title":{},"body":{"classes/FactoryManager.html":{}}}],["piece",{"_index":1179,"title":{},"body":{"classes/RespawnManager.html":{}}}],["pixelgeneration",{"_index":1264,"title":{},"body":{"interfaces/Settings.html":{}}}],["pixels",{"_index":268,"title":{},"body":{"classes/CollectiveManager.html":{},"interfaces/Settings.html":{}}}],["pixelselling",{"_index":1265,"title":{},"body":{"interfaces/Settings.html":{}}}],["place",{"_index":497,"title":{},"body":{"classes/ConstructionManager.html":{},"index.html":{}}}],["placebase",{"_index":498,"title":{},"body":{"classes/ConstructionManager.html":{}}}],["placebase(rcl",{"_index":507,"title":{},"body":{"classes/ConstructionManager.html":{}}}],["placed",{"_index":1325,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["placedsites",{"_index":494,"title":{},"body":{"classes/ConstructionManager.html":{}}}],["placeramparts",{"_index":499,"title":{},"body":{"classes/ConstructionManager.html":{}}}],["placeramparts(rcl",{"_index":509,"title":{},"body":{"classes/ConstructionManager.html":{}}}],["plaid",{"_index":1799,"title":{},"body":{"index.html":{}}}],["plan",{"_index":1014,"title":{},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["planned",{"_index":1298,"title":{},"body":{"interfaces/Settings.html":{}}}],["plans",{"_index":1581,"title":{},"body":{"index.html":{}}}],["planstampsargs",{"_index":1000,"title":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["player",{"_index":35,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/CollectiveManager.html":{},"classes/ConstructionManager.html":{},"classes/PlayerManager.html":{},"index.html":{}}}],["playerbyhate",{"_index":1023,"title":{},"body":{"classes/PlayerManager.html":{}}}],["playermanager",{"_index":1016,"title":{"classes/PlayerManager.html":{}},"body":{"classes/PlayerManager.html":{}}}],["playername",{"_index":25,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/PlayerManager.html":{}}}],["playerrelationship",{"_index":1891,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["players",{"_index":1028,"title":{},"body":{"classes/PlayerManager.html":{},"index.html":{}}}],["please",{"_index":1542,"title":{},"body":{"index.html":{}}}],["poly",{"_index":1207,"title":{},"body":{"interfaces/RoomVisual.html":{},"miscellaneous/typealiases.html":{}}}],["polystyle",{"_index":1206,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["portions",{"_index":1849,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1359,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["position",{"_index":1898,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["positions",{"_index":1299,"title":{},"body":{"interfaces/Settings.html":{}}}],["potential",{"_index":1007,"title":{},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["power",{"_index":1050,"title":{},"body":{"classes/PowerSpawnsManager.html":{}}}],["powerclassconstant",{"_index":1040,"title":{},"body":{"classes/PowerCreepRoleManager.html":{}}}],["powercreep",{"_index":977,"title":{},"body":{"classes/Operator.html":{}}}],["powercreeporganizer",{"_index":1035,"title":{"classes/PowerCreepOrganizer.html":{}},"body":{"classes/PowerCreepOrganizer.html":{}}}],["powercreeprolemanager",{"_index":1037,"title":{"classes/PowerCreepRoleManager.html":{}},"body":{"classes/PowerCreepRoleManager.html":{}}}],["powerspawn",{"_index":1043,"title":{},"body":{"classes/PowerSpawnsManager.html":{}}}],["powerspawningstructuresmanager",{"_index":364,"title":{},"body":{"classes/CommuneManager.html":{}}}],["powerspawnsmanager",{"_index":417,"title":{"classes/PowerSpawnsManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/PowerSpawnsManager.html":{}}}],["powertask",{"_index":991,"title":{},"body":{"classes/Operator.html":{}}}],["precision",{"_index":1384,"title":{},"body":{"classes/StatsManager.html":{}}}],["precogs",{"_index":1089,"title":{},"body":{"classes/Quad.html":{}}}],["prefences",{"_index":1680,"title":{},"body":{"index.html":{}}}],["preheal",{"_index":1063,"title":{},"body":{"classes/Quad.html":{}}}],["preparing",{"_index":1712,"title":{},"body":{"index.html":{}}}],["present",{"_index":288,"title":{},"body":{"classes/CollectiveManager.html":{},"interfaces/Settings.html":{}}}],["presentthreat",{"_index":560,"title":{},"body":{"classes/DefenceManager.html":{}}}],["pretickmanager",{"_index":119,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/Builder.html":{},"classes/Claimer.html":{},"classes/ControllerUpgrader.html":{},"classes/Maintainer.html":{},"classes/MeleeDefender.html":{},"classes/MineralHarvester.html":{},"classes/Operator.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RequestHauler.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/Vanguard.html":{}}}],["pretickrun",{"_index":382,"title":{},"body":{"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/HaulRequestManager.html":{},"classes/LabManager.html":{},"classes/ObserverManager.html":{},"classes/RemotesManager.html":{},"classes/SourceManager.html":{},"classes/TerminalManager.html":{},"classes/WorkRequestManager.html":{}}}],["preticktest",{"_index":383,"title":{},"body":{"classes/CommuneManager.html":{}}}],["preticktransferrequest",{"_index":772,"title":{},"body":{"classes/HaulRequestManager.html":{}}}],["preticktransferrequest(requestname",{"_index":775,"title":{},"body":{"classes/HaulRequestManager.html":{}}}],["price",{"_index":1431,"title":{},"body":{"classes/TerminalManager.html":{}}}],["priority",{"_index":26,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/CollectiveManager.html":{},"classes/CommuneManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{}}}],["private",{"_index":186,"title":{},"body":{"classes/BuilderManager.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgraderManager.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"classes/DefenceManager.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/ErrorMapper.html":{},"classes/FeatureFlagManager.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/InitManager.html":{},"classes/Int32Queue.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/MapVisualsManager.html":{},"classes/NukerManager.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RemoteHarvester.html":{},"classes/RemotesManager.html":{},"classes/RespawnManager.html":{},"classes/RoomVisualsManager.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TowerManager.html":{},"classes/WorkRequestManager.html":{},"index.html":{}}}],["process",{"_index":1049,"title":{},"body":{"classes/PowerSpawnsManager.html":{}}}],["processcreep",{"_index":543,"title":{},"body":{"classes/CreepOrganizer.html":{},"classes/PowerCreepOrganizer.html":{}}}],["processcreep(creepname",{"_index":544,"title":{},"body":{"classes/CreepOrganizer.html":{},"classes/PowerCreepOrganizer.html":{}}}],["product",{"_index":705,"title":{},"body":{"classes/FactoryManager.html":{}}}],["production",{"_index":919,"title":{},"body":{"classes/LabManager.html":{}}}],["profile",{"_index":1580,"title":{},"body":{"index.html":{}}}],["program",{"_index":1639,"title":{},"body":{"index.html":{}}}],["programming",{"_index":1623,"title":{},"body":{"index.html":{}}}],["progress",{"_index":1565,"title":{},"body":{"index.html":{}}}],["project",{"_index":1613,"title":{},"body":{"index.html":{}}}],["project's",{"_index":1769,"title":{},"body":{"index.html":{}}}],["proletariat",{"_index":1519,"title":{},"body":{"index.html":{}}}],["proper",{"_index":806,"title":{},"body":{"classes/InitManager.html":{}}}],["properties",{"_index":7,"title":{"properties.html":{}},"body":{"interfaces/AdvancedFindDistanceOpts.html":{},"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"interfaces/AnimatedStyle.html":{},"classes/BasePlans.html":{},"classes/BuilderManager.html":{},"classes/CollectiveManager.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgraderManager.html":{},"interfaces/CreepCombatData.html":{},"classes/CreepRoleManager.html":{},"interfaces/CustomLogOpts.html":{},"interfaces/DeadCreepNames.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"interfaces/EnemyThreatData.html":{},"interfaces/ErrorData.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"interfaces/FeatureFlagConfig.html":{},"classes/FeatureFlagManager.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"classes/HaulRequestManager.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/Int32Queue.html":{},"interfaces/InterpretedRoomEvent.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/MemHack.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"interfaces/OutputArgs.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RemotesManager.html":{},"classes/RoomPruningManager.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"interfaces/Settings.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"interfaces/SpeechStyle.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TombstoneManager.html":{},"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{},"classes/TowerManager.html":{},"classes/WorkRequestManager.html":{},"properties.html":{}}}],["provide",{"_index":423,"title":{},"body":{"classes/CommuneManager.html":{},"index.html":{}}}],["provided",{"_index":1850,"title":{},"body":{"license.html":{}}}],["pserver",{"_index":1698,"title":{},"body":{"index.html":{}}}],["public",{"_index":327,"title":{},"body":{"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ControllerUpgrader.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"classes/EndTickCreepManager.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/InitManager.html":{},"classes/LabManager.html":{},"classes/MigrationManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RoomVisualsManager.html":{},"interfaces/Settings.html":{},"classes/SourceHarvester.html":{},"classes/SpawningStructuresManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TickInit.html":{},"classes/WorkRequestManager.html":{}}}],["publicramparts",{"_index":1266,"title":{},"body":{"interfaces/Settings.html":{}}}],["publish",{"_index":1836,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1546,"title":{},"body":{"index.html":{}}}],["purchasetarget",{"_index":1434,"title":{},"body":{"classes/TerminalManager.html":{}}}],["purpose",{"_index":1860,"title":{},"body":{"license.html":{}}}],["push",{"_index":823,"title":{},"body":{"classes/Int32Queue.html":{},"index.html":{}}}],["push(v",{"_index":829,"title":{},"body":{"classes/Int32Queue.html":{}}}],["pushing",{"_index":1715,"title":{},"body":{"index.html":{}}}],["put",{"_index":1652,"title":{},"body":{"index.html":{}}}],["q",{"_index":820,"title":{},"body":{"classes/Int32Queue.html":{}}}],["quad",{"_index":1052,"title":{"classes/Quad.html":{}},"body":{"classes/Quad.html":{}}}],["questions",{"_index":1570,"title":{},"body":{"index.html":{}}}],["rabbit",{"_index":1800,"title":{},"body":{"index.html":{}}}],["radius",{"_index":141,"title":{},"body":{"interfaces/AnimatedStyle.html":{}}}],["rampartplancoord",{"_index":1109,"title":{},"body":{"classes/RampartPlans.html":{}}}],["rampartplans",{"_index":1107,"title":{"classes/RampartPlans.html":{}},"body":{"classes/RampartPlans.html":{}}}],["rampartrepairtargets",{"_index":402,"title":{},"body":{"classes/CommuneManager.html":{}}}],["rampartrepairtreshold",{"_index":1474,"title":{},"body":{"classes/TowerManager.html":{}}}],["ramparts",{"_index":1293,"title":{},"body":{"interfaces/Settings.html":{}}}],["rampartsmaintenancecost",{"_index":390,"title":{},"body":{"classes/CommuneManager.html":{}}}],["random",{"_index":627,"title":{},"body":{"classes/EndTickCreepManager.html":{}}}],["randomintrange(50000",{"_index":1185,"title":{},"body":{"classes/RoomPruningManager.html":{}}}],["ranged",{"_index":49,"title":{},"body":{"interfaces/AllyRequest.html":{}}}],["rangedattackattackers",{"_index":1064,"title":{},"body":{"classes/Quad.html":{}}}],["rangedattackenemies",{"_index":1065,"title":{},"body":{"classes/Quad.html":{}}}],["rangedattackstructures",{"_index":150,"title":{},"body":{"classes/Antifa.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["rangedattackstructures(creep",{"_index":620,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["rangeddamage",{"_index":540,"title":{},"body":{"interfaces/CreepCombatData.html":{}}}],["rangeddefender",{"_index":1110,"title":{"classes/RangedDefender.html":{}},"body":{"classes/RangedDefender.html":{}}}],["rangedkite",{"_index":1066,"title":{},"body":{"classes/Quad.html":{}}}],["rateoverride",{"_index":1445,"title":{},"body":{"classes/TerminalManager.html":{}}}],["rawspawnrequestsargs",{"_index":1316,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["rcl",{"_index":457,"title":{},"body":{"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{}}}],["re",{"_index":1719,"title":{},"body":{"index.html":{}}}],["reaching",{"_index":285,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["reaction",{"_index":906,"title":{},"body":{"classes/LabManager.html":{}}}],["reactionamountremaining",{"_index":881,"title":{},"body":{"classes/LabManager.html":{}}}],["read",{"_index":1585,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":718,"title":{},"body":{"classes/FeatureFlagManager.html":{}}}],["reasonable",{"_index":681,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["rebuild",{"_index":1523,"title":{},"body":{"index.html":{}}}],["recent",{"_index":1605,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":1772,"title":{},"body":{"index.html":{}}}],["recording",{"_index":634,"title":{},"body":{"classes/EndTickManager.html":{}}}],["records",{"_index":513,"title":{},"body":{"classes/ConstructionSiteManager.html":{}}}],["recurseabandonment",{"_index":1164,"title":{},"body":{"classes/RemotesManager.html":{}}}],["recurseabandonment(remotename",{"_index":1171,"title":{},"body":{"classes/RemotesManager.html":{}}}],["red",{"_index":1515,"title":{},"body":{"index.html":{}}}],["reference",{"_index":1527,"title":{},"body":{"index.html":{}}}],["relay",{"_index":1146,"title":{},"body":{"classes/RemoteHauler.html":{}}}],["relaycardinal",{"_index":1147,"title":{},"body":{"classes/RemoteHauler.html":{}}}],["relaycardinal(movecoord",{"_index":1151,"title":{},"body":{"classes/RemoteHauler.html":{}}}],["relaycoord",{"_index":1148,"title":{},"body":{"classes/RemoteHauler.html":{}}}],["relaycoord(coord",{"_index":1153,"title":{},"body":{"classes/RemoteHauler.html":{}}}],["relaydiagonal",{"_index":1149,"title":{},"body":{"classes/RemoteHauler.html":{}}}],["relaydiagonal(movecoord",{"_index":1154,"title":{},"body":{"classes/RemoteHauler.html":{}}}],["release",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["remote",{"_index":418,"title":{},"body":{"classes/CommuneManager.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{}}}],["remoteactions",{"_index":1116,"title":{},"body":{"classes/RemoteBuilder.html":{},"classes/RemoteHarvester.html":{}}}],["remotebuilder",{"_index":1112,"title":{"classes/RemoteBuilder.html":{}},"body":{"classes/RemoteBuilder.html":{}}}],["remotecoreattacker",{"_index":1119,"title":{"classes/RemoteCoreAttacker.html":{}},"body":{"classes/RemoteCoreAttacker.html":{}}}],["remotedatavisuals",{"_index":1222,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["remotedatavisuals(y",{"_index":1235,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["remotedefender",{"_index":1123,"title":{"classes/RemoteDefender.html":{}},"body":{"classes/RemoteDefender.html":{}}}],["remotedismantler",{"_index":1126,"title":{"classes/RemoteDismantler.html":{}},"body":{"classes/RemoteDismantler.html":{}}}],["remoteharvester",{"_index":1128,"title":{"classes/RemoteHarvester.html":{}},"body":{"classes/RemoteHarvester.html":{}}}],["remotehauler",{"_index":1140,"title":{"classes/RemoteHauler.html":{}},"body":{"classes/RemoteHauler.html":{}}}],["remotehaulers",{"_index":416,"title":{},"body":{"classes/CommuneManager.html":{}}}],["remotely",{"_index":317,"title":{},"body":{"classes/Collectivizer.html":{}}}],["remotename",{"_index":439,"title":{},"body":{"classes/CommuneManager.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{}}}],["remotereserver",{"_index":1155,"title":{"classes/RemoteReserver.html":{}},"body":{"classes/RemoteReserver.html":{}}}],["remotes",{"_index":1326,"title":{},"body":{"classes/SpawnRequestsManager.html":{},"index.html":{}}}],["remotesmanager",{"_index":365,"title":{"classes/RemotesManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/RemotesManager.html":{}}}],["remotesourceharvesters",{"_index":366,"title":{},"body":{"classes/CommuneManager.html":{}}}],["remotesourceroles",{"_index":1322,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["remove",{"_index":483,"title":{},"body":{"classes/CommuneManager.html":{}}}],["removeremote",{"_index":384,"title":{},"body":{"classes/CommuneManager.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{}}}],["removeremote(remotename",{"_index":438,"title":{},"body":{"classes/CommuneManager.html":{}}}],["removes",{"_index":282,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["rename",{"_index":1674,"title":{},"body":{"index.html":{}}}],["repairgeneral",{"_index":1470,"title":{},"body":{"classes/TowerManager.html":{}}}],["repairrampart",{"_index":1484,"title":{},"body":{"classes/Vanguard.html":{}}}],["repairramparts",{"_index":1471,"title":{},"body":{"classes/TowerManager.html":{}}}],["replace",{"_index":1692,"title":{},"body":{"index.html":{}}}],["replacement",{"_index":1745,"title":{},"body":{"index.html":{}}}],["replanat",{"_index":854,"title":{},"body":{"classes/LabManager.html":{}}}],["replicated",{"_index":1539,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1590,"title":{},"body":{"index.html":{},"properties.html":{}}}],["representing",{"_index":50,"title":{},"body":{"interfaces/AllyRequest.html":{}}}],["request",{"_index":52,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/CollectiveManager.html":{},"classes/SpawningStructuresManager.html":{},"index.html":{}}}],["requestattack",{"_index":83,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["requestattack(roomname",{"_index":101,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["requestbuild",{"_index":84,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["requestbuild(roomname",{"_index":106,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["requestdatavisuals",{"_index":1223,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["requestdatavisuals(y",{"_index":1236,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["requestdefense",{"_index":85,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["requestdefense(roomname",{"_index":107,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["requestedboosts",{"_index":855,"title":{},"body":{"classes/LabManager.html":{}}}],["requesthate",{"_index":86,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["requesthate(playername",{"_index":108,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["requesthauler",{"_index":1172,"title":{"classes/RequestHauler.html":{}},"body":{"classes/RequestHauler.html":{},"classes/SpawnRequestsManager.html":{}}}],["requestname",{"_index":330,"title":{},"body":{"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/HaulRequestManager.html":{}}}],["requestresource",{"_index":87,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["requestresource(roomname",{"_index":109,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["requests",{"_index":39,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/CommuneManager.html":{},"interfaces/Settings.html":{},"index.html":{}}}],["requesttype",{"_index":27,"title":{},"body":{"interfaces/AllyRequest.html":{}}}],["required",{"_index":100,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/MigrationManager.html":{},"index.html":{}}}],["requirements",{"_index":1584,"title":{},"body":{"index.html":{}}}],["reservation",{"_index":799,"title":{},"body":{"classes/HubHauler.html":{}}}],["reservefactorytransfer",{"_index":790,"title":{},"body":{"classes/HubHauler.html":{}}}],["reservefactorywithdraw",{"_index":791,"title":{},"body":{"classes/HubHauler.html":{}}}],["reservehublinktransfer",{"_index":792,"title":{},"body":{"classes/HubHauler.html":{}}}],["reservehublinkwithdraw",{"_index":793,"title":{},"body":{"classes/HubHauler.html":{}}}],["reservepowerspawntransferenergy",{"_index":794,"title":{},"body":{"classes/HubHauler.html":{}}}],["reservepowerspawntransferpower",{"_index":795,"title":{},"body":{"classes/HubHauler.html":{}}}],["reservestoragetransfer",{"_index":796,"title":{},"body":{"classes/HubHauler.html":{}}}],["reserveterminaltransfer",{"_index":797,"title":{},"body":{"classes/HubHauler.html":{}}}],["reset",{"_index":677,"title":{},"body":{"classes/ErrorMapper.html":{},"classes/Int32Queue.html":{}}}],["reset(arr",{"_index":831,"title":{},"body":{"classes/Int32Queue.html":{}}}],["resource",{"_index":707,"title":{},"body":{"classes/FactoryManager.html":{},"classes/LabManager.html":{},"interfaces/RoomVisual.html":{},"classes/TerminalManager.html":{}}}],["resource(type",{"_index":1200,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["resource_catalyzed_ghodium_acid",{"_index":897,"title":{},"body":{"classes/LabManager.html":{}}}],["resource_catalyzed_ghodium_alkalide",{"_index":895,"title":{},"body":{"classes/LabManager.html":{}}}],["resource_catalyzed_keanium_alkalide",{"_index":892,"title":{},"body":{"classes/LabManager.html":{}}}],["resource_catalyzed_lemergium_acid",{"_index":894,"title":{},"body":{"classes/LabManager.html":{}}}],["resource_catalyzed_lemergium_alkalide",{"_index":891,"title":{},"body":{"classes/LabManager.html":{}}}],["resource_catalyzed_utrium_acid",{"_index":890,"title":{},"body":{"classes/LabManager.html":{}}}],["resource_catalyzed_zynthium_acid",{"_index":896,"title":{},"body":{"classes/LabManager.html":{}}}],["resource_catalyzed_zynthium_alkalide",{"_index":893,"title":{},"body":{"classes/LabManager.html":{}}}],["resource_energy",{"_index":704,"title":{},"body":{"classes/FactoryManager.html":{}}}],["resource_ghodium",{"_index":703,"title":{},"body":{"classes/FactoryManager.html":{}}}],["resourceamount",{"_index":875,"title":{},"body":{"classes/LabManager.html":{}}}],["resourceamount(resource",{"_index":915,"title":{},"body":{"classes/LabManager.html":{}}}],["resourceconstant",{"_index":58,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"interfaces/RoomVisual.html":{},"classes/TerminalManager.html":{}}}],["resources",{"_index":467,"title":{},"body":{"classes/CommuneManager.html":{},"classes/LabManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/TerminalManager.html":{}}}],["resourcesinstoringstructures",{"_index":250,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["resourcestodirectbuy",{"_index":1446,"title":{},"body":{"classes/TerminalManager.html":{}}}],["resourcetype",{"_index":28,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/CollectiveManager.html":{}}}],["respawnmanager",{"_index":1174,"title":{"classes/RespawnManager.html":{}},"body":{"classes/RespawnManager.html":{}}}],["respond",{"_index":462,"title":{},"body":{"classes/CommuneManager.html":{},"interfaces/Settings.html":{}}}],["respondtoallyrequests",{"_index":1415,"title":{},"body":{"classes/TerminalManager.html":{}}}],["respondtoterminalrequests",{"_index":1416,"title":{},"body":{"classes/TerminalManager.html":{}}}],["response",{"_index":41,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/RemoteHarvester.html":{}}}],["restriction",{"_index":1832,"title":{},"body":{"license.html":{}}}],["resulting",{"_index":1011,"title":{},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["results",{"_index":15,"title":{},"body":{"interfaces/AdvancedFindDistanceOpts.html":{},"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"interfaces/AnimatedStyle.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/Collectivizer.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ConstructionSiteManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"interfaces/CreepCombatData.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"interfaces/CustomLogOpts.html":{},"interfaces/DeadCreepNames.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/EndTickManager.html":{},"interfaces/EnemyThreatData.html":{},"interfaces/ErrorData.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"interfaces/FeatureFlagConfig.html":{},"classes/FeatureFlagManager.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/InitManager.html":{},"classes/Int32Queue.html":{},"classes/InterShardPlanner.html":{},"interfaces/InterpretedRoomEvent.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MemHack.html":{},"classes/MigrationManager.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"interfaces/OutputArgs.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"classes/RespawnManager.html":{},"classes/RoomPruningManager.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{},"classes/RoomsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"interfaces/Settings.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"interfaces/SpeechStyle.html":{},"classes/StatsManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TickInit.html":{},"classes/TombstoneManager.html":{},"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{},"classes/TowerManager.html":{},"classes/UserScriptManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":97,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/Collectivizer.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ConstructionSiteManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/EndTickManager.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"classes/FeatureFlagManager.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/InitManager.html":{},"classes/Int32Queue.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MemHack.html":{},"classes/MigrationManager.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"classes/RespawnManager.html":{},"classes/RoomPruningManager.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{},"classes/RoomsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"classes/StatsManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TickInit.html":{},"classes/TombstoneManager.html":{},"classes/TowerManager.html":{},"classes/UserScriptManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{}}}],["reverse",{"_index":901,"title":{},"body":{"classes/LabManager.html":{}}}],["review",{"_index":1787,"title":{},"body":{"index.html":{}}}],["revolutionaries",{"_index":1520,"title":{},"body":{"index.html":{}}}],["rights",{"_index":1834,"title":{},"body":{"license.html":{}}}],["ripped",{"_index":950,"title":{},"body":{"classes/MemHack.html":{}}}],["roadquota",{"_index":478,"title":{},"body":{"classes/CommuneManager.html":{}}}],["roads",{"_index":476,"title":{},"body":{"classes/CommuneManager.html":{},"interfaces/RoomVisual.html":{}}}],["role",{"_index":184,"title":{},"body":{"classes/BuilderManager.html":{},"classes/CollectiveManager.html":{},"classes/ControllerUpgraderManager.html":{},"classes/CreepRoleManager.html":{},"classes/HaulerManager.html":{},"classes/SpawningStructuresManager.html":{}}}],["rolemanager",{"_index":121,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/Builder.html":{},"classes/Claimer.html":{},"classes/ControllerUpgrader.html":{},"classes/FastFiller.html":{},"classes/Hauler.html":{},"classes/HubHauler.html":{},"classes/Maintainer.html":{},"classes/MeleeDefender.html":{},"classes/MineralHarvester.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RequestHauler.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/Vanguard.html":{}}}],["rolemanager(room",{"_index":131,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/Builder.html":{},"classes/Claimer.html":{},"classes/ControllerUpgrader.html":{},"classes/FastFiller.html":{},"classes/Hauler.html":{},"classes/HubHauler.html":{},"classes/Maintainer.html":{},"classes/MeleeDefender.html":{},"classes/MineralHarvester.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RequestHauler.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/Vanguard.html":{}}}],["roles",{"_index":1329,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["rollup",{"_index":1663,"title":{},"body":{"index.html":{}}}],["room",{"_index":132,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"classes/FastFiller.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HubHauler.html":{},"classes/Maintainer.html":{},"classes/MeleeDefender.html":{},"classes/MineralHarvester.html":{},"classes/Operator.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RequestHauler.html":{},"classes/Scout.html":{},"interfaces/Settings.html":{},"classes/SourceHarvester.html":{},"classes/StatsManager.html":{},"classes/TerminalManager.html":{},"classes/Vanguard.html":{}}}],["room's",{"_index":1251,"title":{},"body":{"classes/Scout.html":{}}}],["roomcommunefinalendtick",{"_index":1377,"title":{},"body":{"classes/StatsManager.html":{}}}],["roomcommunefinalendtick(roomname",{"_index":1387,"title":{},"body":{"classes/StatsManager.html":{}}}],["roomconfig",{"_index":1378,"title":{},"body":{"classes/StatsManager.html":{}}}],["roomconfig(roomname",{"_index":1389,"title":{},"body":{"classes/StatsManager.html":{}}}],["roomendtick",{"_index":1379,"title":{},"body":{"classes/StatsManager.html":{}}}],["roomendtick(roomname",{"_index":1391,"title":{},"body":{"classes/StatsManager.html":{}}}],["roommanager",{"_index":522,"title":{},"body":{"classes/ContainerManager.html":{},"classes/CreepRoleManager.html":{},"classes/DroppedResourceManager.html":{},"classes/EndTickCreepManager.html":{},"classes/PowerCreepRoleManager.html":{},"classes/RoomVisualsManager.html":{},"classes/RuinManager.html":{},"classes/TombstoneManager.html":{}}}],["roommemory",{"_index":939,"title":{},"body":{"classes/MapVisualsManager.html":{}}}],["roomname",{"_index":29,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/CollectiveManager.html":{},"classes/MapVisualsManager.html":{},"classes/StatsManager.html":{},"classes/TerminalManager.html":{},"index.html":{}}}],["roomposition",{"_index":1358,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["roompretick",{"_index":1380,"title":{},"body":{"classes/StatsManager.html":{}}}],["roompretick(roomname",{"_index":1392,"title":{},"body":{"classes/StatsManager.html":{}}}],["roompruningmanager",{"_index":1181,"title":{"classes/RoomPruningManager.html":{}},"body":{"classes/RoomPruningManager.html":{}}}],["rooms",{"_index":1441,"title":{},"body":{"classes/TerminalManager.html":{},"index.html":{}}}],["roomsmanager",{"_index":1238,"title":{"classes/RoomsManager.html":{}},"body":{"classes/RoomsManager.html":{}}}],["roomstats",{"_index":1267,"title":{},"body":{"interfaces/Settings.html":{}}}],["roomtype",{"_index":1390,"title":{},"body":{"classes/StatsManager.html":{}}}],["roomvisual",{"_index":1187,"title":{"interfaces/RoomVisual.html":{}},"body":{"interfaces/RoomVisual.html":{}}}],["roomvisuals",{"_index":1224,"title":{},"body":{"classes/RoomVisualsManager.html":{},"interfaces/Settings.html":{}}}],["roomvisualsmanager",{"_index":1208,"title":{"classes/RoomVisualsManager.html":{}},"body":{"classes/RoomVisualsManager.html":{}}}],["round",{"_index":1381,"title":{},"body":{"classes/StatsManager.html":{}}}],["round(value",{"_index":1393,"title":{},"body":{"classes/StatsManager.html":{}}}],["rude",{"_index":1645,"title":{},"body":{"index.html":{}}}],["ruining",{"_index":1643,"title":{},"body":{"index.html":{}}}],["ruinmanager",{"_index":1241,"title":{"classes/RuinManager.html":{}},"body":{"classes/RuinManager.html":{}}}],["run",{"_index":180,"title":{},"body":{"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Collectivizer.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionSiteManager.html":{},"classes/ControllerUpgraderManager.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"classes/DefenceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/EndTickManager.html":{},"classes/FactoryManager.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/InitManager.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MemHack.html":{},"classes/MigrationManager.html":{},"classes/NukerManager.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RemoteHauler.html":{},"classes/RemotesManager.html":{},"classes/RespawnManager.html":{},"classes/RoomPruningManager.html":{},"classes/RoomVisualsManager.html":{},"classes/RoomsManager.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TickInit.html":{},"classes/TowerManager.html":{},"classes/UserScriptManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{},"index.html":{}}}],["run(room",{"_index":193,"title":{},"body":{"classes/BuilderManager.html":{},"classes/ControllerUpgraderManager.html":{},"classes/HaulerManager.html":{}}}],["runchant",{"_index":624,"title":{},"body":{"classes/EndTickCreepManager.html":{}}}],["runcombat",{"_index":151,"title":{},"body":{"classes/Antifa.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["runcombatattackduo",{"_index":612,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["runcombatdismantler",{"_index":613,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["runcombatrangedattacker",{"_index":614,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["runcombatroom",{"_index":588,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["runcommune",{"_index":523,"title":{},"body":{"classes/ContainerManager.html":{},"classes/DroppedResourceManager.html":{},"classes/RuinManager.html":{},"classes/TombstoneManager.html":{}}}],["runcontrollercontainer",{"_index":524,"title":{},"body":{"classes/ContainerManager.html":{}}}],["runcreep",{"_index":188,"title":{},"body":{"classes/BuilderManager.html":{},"classes/ControllerUpgraderManager.html":{},"classes/HaulerManager.html":{}}}],["runcreep(creep",{"_index":194,"title":{},"body":{"classes/BuilderManager.html":{},"classes/ControllerUpgraderManager.html":{},"classes/HaulerManager.html":{}}}],["rundeadchant",{"_index":625,"title":{},"body":{"classes/EndTickCreepManager.html":{}}}],["runfactory",{"_index":696,"title":{},"body":{"classes/FactoryManager.html":{}}}],["runfastfillercontainers",{"_index":525,"title":{},"body":{"classes/ContainerManager.html":{}}}],["runmanager",{"_index":549,"title":{},"body":{"classes/CreepRoleManager.html":{},"classes/PowerCreepRoleManager.html":{}}}],["runmanager(classname",{"_index":1039,"title":{},"body":{"classes/PowerCreepRoleManager.html":{}}}],["runmanager(role",{"_index":550,"title":{},"body":{"classes/CreepRoleManager.html":{}}}],["runmineralcontainer",{"_index":526,"title":{},"body":{"classes/ContainerManager.html":{}}}],["runnewversion",{"_index":1417,"title":{},"body":{"classes/TerminalManager.html":{}}}],["running",{"_index":1708,"title":{},"body":{"index.html":{}}}],["runpowertask",{"_index":989,"title":{},"body":{"classes/Operator.html":{}}}],["runreactions",{"_index":876,"title":{},"body":{"classes/LabManager.html":{}}}],["runremote",{"_index":527,"title":{},"body":{"classes/ContainerManager.html":{},"classes/DroppedResourceManager.html":{},"classes/RemoteReserver.html":{},"classes/RuinManager.html":{},"classes/TombstoneManager.html":{}}}],["runsingle",{"_index":152,"title":{},"body":{"classes/Antifa.html":{}}}],["runsourcecontainers",{"_index":528,"title":{},"body":{"classes/ContainerManager.html":{}}}],["runspawning",{"_index":1342,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["runspawnrequest",{"_index":1343,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["runspawnrequest(index",{"_index":1364,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["runsquad",{"_index":153,"title":{},"body":{"classes/Antifa.html":{}}}],["runtask",{"_index":990,"title":{},"body":{"classes/Operator.html":{}}}],["safe",{"_index":1170,"title":{},"body":{"classes/RemotesManager.html":{}}}],["safemode",{"_index":576,"title":{},"body":{"classes/DefenceManager.html":{}}}],["safemoded",{"_index":266,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["safemodedcommunename",{"_index":225,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["same",{"_index":1684,"title":{},"body":{"index.html":{}}}],["save",{"_index":1295,"title":{},"body":{"interfaces/Settings.html":{}}}],["scared",{"_index":1102,"title":{},"body":{"classes/Quad.html":{}}}],["scattershot",{"_index":1472,"title":{},"body":{"classes/TowerManager.html":{}}}],["score",{"_index":1076,"title":{},"body":{"classes/Quad.html":{}}}],["scoremembertransform",{"_index":1067,"title":{},"body":{"classes/Quad.html":{}}}],["scoremembertransform(membername",{"_index":1092,"title":{},"body":{"classes/Quad.html":{}}}],["scores",{"_index":1079,"title":{},"body":{"classes/Quad.html":{}}}],["scout",{"_index":1243,"title":{"classes/Scout.html":{}},"body":{"classes/Scout.html":{},"classes/SpawnRequestsManager.html":{}}}],["scoutedrooms",{"_index":1245,"title":{},"body":{"classes/Scout.html":{}}}],["scouttarget",{"_index":972,"title":{},"body":{"classes/ObserverManager.html":{}}}],["scratch",{"_index":1641,"title":{},"body":{"index.html":{}}}],["screeps",{"_index":1508,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["screeps.yaml",{"_index":1667,"title":{},"body":{"index.html":{}}}],["screeps.yaml.example",{"_index":1688,"title":{},"body":{"index.html":{}}}],["screepsmod",{"_index":1737,"title":{},"body":{"index.html":{}}}],["screepsplus",{"_index":1744,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":1726,"title":{},"body":{"index.html":{}}}],["secondly",{"_index":1631,"title":{},"body":{"index.html":{}}}],["section",{"_index":1586,"title":{},"body":{"index.html":{}}}],["see",{"_index":1168,"title":{},"body":{"classes/RemotesManager.html":{},"index.html":{}}}],["seeking",{"_index":469,"title":{},"body":{"classes/CommuneManager.html":{}}}],["segment",{"_index":1296,"title":{},"body":{"interfaces/Settings.html":{}}}],["selecting",{"_index":1591,"title":{},"body":{"index.html":{}}}],["sell",{"_index":267,"title":{},"body":{"classes/CollectiveManager.html":{},"interfaces/Settings.html":{},"license.html":{}}}],["sellat",{"_index":1418,"title":{},"body":{"classes/TerminalManager.html":{}}}],["sellat(resource",{"_index":1439,"title":{},"body":{"classes/TerminalManager.html":{}}}],["selltarget",{"_index":1436,"title":{},"body":{"classes/TerminalManager.html":{}}}],["semantic",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["semi",{"_index":601,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["semperrabbit",{"_index":1177,"title":{},"body":{"classes/RespawnManager.html":{}}}],["send",{"_index":1286,"title":{},"body":{"interfaces/Settings.html":{}}}],["sendalltorooms",{"_index":1419,"title":{},"body":{"classes/TerminalManager.html":{}}}],["sendalltorooms(resource",{"_index":1440,"title":{},"body":{"classes/TerminalManager.html":{}}}],["sendresourcetoroom",{"_index":1420,"title":{},"body":{"classes/TerminalManager.html":{}}}],["sendresourcetoroom(resource",{"_index":1442,"title":{},"body":{"classes/TerminalManager.html":{}}}],["sendsometorooms",{"_index":1421,"title":{},"body":{"classes/TerminalManager.html":{}}}],["sendsometorooms(resource",{"_index":1443,"title":{},"body":{"classes/TerminalManager.html":{}}}],["serve",{"_index":1727,"title":{},"body":{"index.html":{}}}],["server",{"_index":1574,"title":{},"body":{"index.html":{}}}],["servers",{"_index":1696,"title":{},"body":{"index.html":{}}}],["set",{"_index":558,"title":{},"body":{"interfaces/DeadCreepNames.html":{},"classes/EndTickCreepManager.html":{},"interfaces/Settings.html":{},"index.html":{}}}],["setcurrentreaction",{"_index":877,"title":{},"body":{"classes/LabManager.html":{}}}],["setmovetype",{"_index":615,"title":{},"body":{"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["setmovetype(type",{"_index":621,"title":{},"body":{"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["setproduct",{"_index":697,"title":{},"body":{"classes/FactoryManager.html":{}}}],["setproduct(product",{"_index":709,"title":{},"body":{"classes/FactoryManager.html":{}}}],["setsegmentdata",{"_index":650,"title":{},"body":{"classes/ErrorExporter.html":{}}}],["setsegmentdata(data",{"_index":653,"title":{},"body":{"classes/ErrorExporter.html":{}}}],["settings",{"_index":907,"title":{"interfaces/Settings.html":{}},"body":{"classes/LabManager.html":{},"interfaces/Settings.html":{},"index.html":{}}}],["settings.example.ts",{"_index":1672,"title":{},"body":{"index.html":{}}}],["settings.ts",{"_index":1676,"title":{},"body":{"index.html":{}}}],["settingsexample",{"_index":1677,"title":{},"body":{"index.html":{}}}],["shall",{"_index":1847,"title":{},"body":{"license.html":{}}}],["shard",{"_index":1683,"title":{},"body":{"index.html":{}}}],["share",{"_index":1656,"title":{},"body":{"index.html":{}}}],["shift",{"_index":824,"title":{},"body":{"classes/Int32Queue.html":{}}}],["shouldpreheal",{"_index":1068,"title":{},"body":{"classes/Quad.html":{}}}],["shouldsafemode",{"_index":571,"title":{},"body":{"classes/DefenceManager.html":{}}}],["showing",{"_index":1564,"title":{},"body":{"index.html":{}}}],["shu",{"_index":1804,"title":{},"body":{"index.html":{}}}],["sign",{"_index":1250,"title":{},"body":{"classes/Scout.html":{}}}],["similar",{"_index":1544,"title":{},"body":{"index.html":{}}}],["simplealliessegment",{"_index":75,"title":{},"body":{"classes/AllyRequestManager.html":{},"interfaces/Settings.html":{}}}],["simplyalex",{"_index":1803,"title":{},"body":{"index.html":{}}}],["single",{"_index":1665,"title":{},"body":{"index.html":{}}}],["site",{"_index":1746,"title":{},"body":{"index.html":{}}}],["sites",{"_index":519,"title":{},"body":{"classes/ConstructionSiteManager.html":{}}}],["situation",{"_index":1253,"title":{},"body":{"classes/Scout.html":{}}}],["size",{"_index":603,"title":{},"body":{"classes/DynamicSquad.html":{},"interfaces/RoomVisual.html":{}}}],["sleep",{"_index":1033,"title":{},"body":{"classes/PlayerManager.html":{}}}],["sleepfor",{"_index":1031,"title":{},"body":{"classes/PlayerManager.html":{},"miscellaneous/typealiases.html":{}}}],["sleeping",{"_index":1022,"title":{},"body":{"classes/PlayerManager.html":{}}}],["sleeping(sleepfor",{"_index":1030,"title":{},"body":{"classes/PlayerManager.html":{}}}],["sleeptime",{"_index":1184,"title":{},"body":{"classes/RoomPruningManager.html":{}}}],["sleepuntil",{"_index":1020,"title":{},"body":{"classes/PlayerManager.html":{}}}],["slogans",{"_index":1285,"title":{},"body":{"interfaces/Settings.html":{}}}],["snoozeuntil",{"_index":856,"title":{},"body":{"classes/LabManager.html":{}}}],["software",{"_index":1827,"title":{},"body":{"license.html":{}}}],["soon",{"_index":1740,"title":{},"body":{"index.html":{}}}],["sort",{"_index":997,"title":{},"body":{"interfaces/OutputArgs.html":{}}}],["sorted",{"_index":305,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/PlayerManager.html":{}}}],["sortmembersbycoord",{"_index":1069,"title":{},"body":{"classes/Quad.html":{}}}],["source",{"_index":668,"title":{},"body":{"classes/ErrorMapper.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["source/issues",{"_index":1883,"title":{},"body":{"properties.html":{}}}],["sourcecontainer",{"_index":1308,"title":{},"body":{"classes/SourceHarvester.html":{}}}],["sourceharvester",{"_index":1301,"title":{"classes/SourceHarvester.html":{}},"body":{"classes/SourceHarvester.html":{},"classes/SpawnRequestsManager.html":{}}}],["sourceindex",{"_index":135,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/CommuneManager.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/Vanguard.html":{}}}],["sourcelinkids",{"_index":367,"title":{},"body":{"classes/CommuneManager.html":{}}}],["sourcelinks",{"_index":404,"title":{},"body":{"classes/CommuneManager.html":{}}}],["sourcemanager",{"_index":368,"title":{"classes/SourceManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/SourceManager.html":{}}}],["sourcemapconsumer",{"_index":662,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["sourcemappedstacktrace",{"_index":659,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["sourcemappedstacktrace(error",{"_index":663,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["sourceneed",{"_index":783,"title":{},"body":{"classes/HaulerNeedManager.html":{}}}],["sourcepath",{"_index":1169,"title":{},"body":{"classes/RemotesManager.html":{}}}],["sources",{"_index":1310,"title":{},"body":{"classes/SourceManager.html":{}}}],["sourcestoreceivers",{"_index":928,"title":{},"body":{"classes/LinkManager.html":{}}}],["sparingly",{"_index":678,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["spawn",{"_index":127,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/PowerSpawnsManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{}}}],["spawnenergycapacity",{"_index":1317,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["spawnids",{"_index":1363,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["spawnindex",{"_index":1334,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["spawningstructuresmanager",{"_index":369,"title":{"classes/SpawningStructuresManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/SpawningStructuresManager.html":{}}}],["spawnrequest",{"_index":1349,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["spawnrequestargs",{"_index":1328,"title":{},"body":{"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{}}}],["spawnrequestbygroup",{"_index":1344,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["spawnrequestbygroup(args",{"_index":1365,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["spawnrequestindividually",{"_index":1345,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["spawnrequestindividually(args",{"_index":1366,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["spawnrequests",{"_index":1335,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["spawnrequestsmanager",{"_index":370,"title":{"classes/SpawnRequestsManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/SpawnRequestsManager.html":{}}}],["spawns",{"_index":1362,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["spawnvisuals",{"_index":1225,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["spec",{"_index":1707,"title":{},"body":{"index.html":{}}}],["special",{"_index":1794,"title":{},"body":{"index.html":{}}}],["specific",{"_index":1569,"title":{},"body":{"index.html":{}}}],["specified",{"_index":199,"title":{},"body":{"classes/Claimer.html":{}}}],["speech",{"_index":1193,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["speech(text",{"_index":1201,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["speechstyle",{"_index":1202,"title":{"interfaces/SpeechStyle.html":{}},"body":{"interfaces/RoomVisual.html":{},"interfaces/SpeechStyle.html":{}}}],["speed",{"_index":1098,"title":{},"body":{"classes/Quad.html":{}}}],["squad",{"_index":45,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/Antifa.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["squadmovetypes",{"_index":616,"title":{},"body":{"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["src",{"_index":1615,"title":{},"body":{"index.html":{}}}],["src/.../collectivizer.ts",{"_index":1895,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../constants.ts",{"_index":1892,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../roomutils.ts",{"_index":1890,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../roomvisual.ts",{"_index":1893,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/international/allyrequests.ts",{"_index":18,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"interfaces/CreepCombatData.html":{}}}],["src/international/collective.ts",{"_index":201,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["src/international/collectivizer.ts",{"_index":310,"title":{},"body":{"classes/Collectivizer.html":{},"miscellaneous/typealiases.html":{}}}],["src/international/constants.ts",{"_index":1901,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/international/constructionsitemanager.ts",{"_index":511,"title":{},"body":{"classes/ConstructionSiteManager.html":{}}}],["src/international/creeporganizer.ts",{"_index":542,"title":{},"body":{"classes/CreepOrganizer.html":{}}}],["src/international/endtickmanager.ts",{"_index":631,"title":{},"body":{"classes/EndTickManager.html":{}}}],["src/international/featureflags.ts",{"_index":716,"title":{},"body":{"interfaces/FeatureFlagConfig.html":{},"classes/FeatureFlagManager.html":{}}}],["src/international/flags.ts",{"_index":744,"title":{},"body":{"classes/FlagManager.html":{}}}],["src/international/init.ts",{"_index":801,"title":{},"body":{"classes/InitManager.html":{}}}],["src/international/intershardplanner.ts",{"_index":835,"title":{},"body":{"classes/InterShardPlanner.html":{}}}],["src/international/mapvisuals.ts",{"_index":932,"title":{},"body":{"classes/MapVisualsManager.html":{}}}],["src/international/migration.ts",{"_index":959,"title":{},"body":{"classes/MigrationManager.html":{}}}],["src/international/players.ts",{"_index":1017,"title":{},"body":{"classes/PlayerManager.html":{}}}],["src/international/powercreeporganizer.ts",{"_index":1036,"title":{},"body":{"classes/PowerCreepOrganizer.html":{}}}],["src/international/respawn.ts",{"_index":1175,"title":{},"body":{"classes/RespawnManager.html":{}}}],["src/international/roompruning.ts",{"_index":1182,"title":{},"body":{"classes/RoomPruningManager.html":{}}}],["src/international/statsmanager.ts",{"_index":1373,"title":{},"body":{"classes/StatsManager.html":{}}}],["src/international/tickinit.ts",{"_index":1453,"title":{},"body":{"classes/TickInit.html":{}}}],["src/international/utils.ts",{"_index":5,"title":{},"body":{"interfaces/AdvancedFindDistanceOpts.html":{},"interfaces/CustomLogOpts.html":{}}}],["src/other/errorexporter.ts",{"_index":644,"title":{},"body":{"interfaces/ErrorData.html":{},"classes/ErrorExporter.html":{}}}],["src/other/errormapper.ts",{"_index":656,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["src/other/memhack.ts",{"_index":949,"title":{},"body":{"classes/MemHack.html":{}}}],["src/other/profiler.ts",{"_index":994,"title":{},"body":{"interfaces/OutputArgs.html":{}}}],["src/other/roomvisual.ts",{"_index":137,"title":{},"body":{"interfaces/AnimatedStyle.html":{},"interfaces/RoomVisual.html":{},"interfaces/SpeechStyle.html":{},"miscellaneous/typealiases.html":{}}}],["src/other/userscript/userscript.example.ts",{"_index":1775,"title":{},"body":{"index.html":{}}}],["src/other/userscript/userscript.ts",{"_index":1480,"title":{},"body":{"classes/UserScriptManager.html":{}}}],["src/room/commune/combatrequest.ts",{"_index":319,"title":{},"body":{"classes/CombatRequestManager.html":{}}}],["src/room/commune/commune.ts",{"_index":335,"title":{},"body":{"classes/CommuneManager.html":{}}}],["src/room/commune/defence.ts",{"_index":559,"title":{},"body":{"classes/DefenceManager.html":{}}}],["src/room/commune/factory.ts",{"_index":689,"title":{},"body":{"classes/FactoryManager.html":{}}}],["src/room/commune/haulerneed.ts",{"_index":781,"title":{},"body":{"classes/HaulerNeedManager.html":{}}}],["src/room/commune/haulersize.ts",{"_index":784,"title":{},"body":{"classes/HaulerSizeManager.html":{}}}],["src/room/commune/haulrequestmanager.ts",{"_index":771,"title":{},"body":{"classes/HaulRequestManager.html":{}}}],["src/room/commune/labs.ts",{"_index":843,"title":{},"body":{"classes/LabManager.html":{}}}],["src/room/commune/links.ts",{"_index":924,"title":{},"body":{"classes/LinkManager.html":{}}}],["src/room/commune/nuker.ts",{"_index":967,"title":{},"body":{"classes/NukerManager.html":{}}}],["src/room/commune/observer.ts",{"_index":970,"title":{},"body":{"classes/ObserverManager.html":{}}}],["src/room/commune/powerspawn.ts",{"_index":1042,"title":{},"body":{"classes/PowerSpawnsManager.html":{}}}],["src/room/commune/remotesmanager.ts",{"_index":1161,"title":{},"body":{"classes/RemotesManager.html":{}}}],["src/room/commune/sourcemanager.ts",{"_index":1309,"title":{},"body":{"classes/SourceManager.html":{}}}],["src/room/commune/spawning/spawningstructures.ts",{"_index":1331,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["src/room/commune/spawning/spawnrequests.ts",{"_index":1313,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["src/room/commune/storingstructures.ts",{"_index":1396,"title":{},"body":{"classes/StoringStructuresManager.html":{}}}],["src/room/commune/terminal/terminal.ts",{"_index":1397,"title":{},"body":{"classes/TerminalManager.html":{}}}],["src/room/commune/towers.ts",{"_index":1461,"title":{},"body":{"classes/TowerManager.html":{}}}],["src/room/commune/workrequest.ts",{"_index":1487,"title":{},"body":{"classes/WorkRequestManager.html":{}}}],["src/room/communeplanner.ts",{"_index":729,"title":{},"body":{"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/TowerDamageCoord.html":{}}}],["src/room/construction/baseplans.ts",{"_index":164,"title":{},"body":{"classes/BasePlans.html":{}}}],["src/room/construction/construction.ts",{"_index":492,"title":{},"body":{"classes/ConstructionManager.html":{}}}],["src/room/construction/mincut.ts",{"_index":818,"title":{},"body":{"classes/Int32Queue.html":{}}}],["src/room/construction/rampartplans.ts",{"_index":1108,"title":{},"body":{"classes/RampartPlans.html":{}}}],["src/room/container.ts",{"_index":521,"title":{},"body":{"classes/ContainerManager.html":{}}}],["src/room/creeps/creeprolemanager.ts",{"_index":547,"title":{},"body":{"classes/CreepRoleManager.html":{}}}],["src/room/creeps/endtickcreepmanager.ts",{"_index":623,"title":{},"body":{"classes/EndTickCreepManager.html":{}}}],["src/room/creeps/powercreeprolemanager.ts",{"_index":1038,"title":{},"body":{"classes/PowerCreepRoleManager.html":{}}}],["src/room/creeps/powercreeps/operator.ts",{"_index":976,"title":{},"body":{"classes/Operator.html":{}}}],["src/room/creeps/rolemanager.new/commune/builder.ts",{"_index":182,"title":{},"body":{"classes/BuilderManager.html":{}}}],["src/room/creeps/rolemanager.new/commune/controllerupgrader.ts",{"_index":534,"title":{},"body":{"classes/ControllerUpgraderManager.html":{}}}],["src/room/creeps/rolemanager.new/commune/hauler.ts",{"_index":780,"title":{},"body":{"classes/HaulerManager.html":{}}}],["src/room/creeps/rolemanagers/antifa/antifa.ts",{"_index":143,"title":{},"body":{"classes/Antifa.html":{}}}],["src/room/creeps/rolemanagers/antifa/duo.ts",{"_index":580,"title":{},"body":{"classes/Duo.html":{}}}],["src/room/creeps/rolemanagers/antifa/dynamicsquad.ts",{"_index":600,"title":{},"body":{"classes/DynamicSquad.html":{}}}],["src/room/creeps/rolemanagers/antifa/quad.ts",{"_index":638,"title":{},"body":{"interfaces/EnemyThreatData.html":{},"classes/Quad.html":{}}}],["src/room/creeps/rolemanagers/commune/builder.ts",{"_index":179,"title":{},"body":{"classes/Builder.html":{}}}],["src/room/creeps/rolemanagers/commune/controllerupgrader.ts",{"_index":531,"title":{},"body":{"classes/ControllerUpgrader.html":{}}}],["src/room/creeps/rolemanagers/commune/defenders/meleedefender.ts",{"_index":941,"title":{},"body":{"classes/MeleeDefender.html":{}}}],["src/room/creeps/rolemanagers/commune/defenders/rangeddefender.ts",{"_index":1111,"title":{},"body":{"classes/RangedDefender.html":{}}}],["src/room/creeps/rolemanagers/commune/fastfiller.ts",{"_index":711,"title":{},"body":{"classes/FastFiller.html":{}}}],["src/room/creeps/rolemanagers/commune/hauler.ts",{"_index":778,"title":{},"body":{"classes/Hauler.html":{}}}],["src/room/creeps/rolemanagers/commune/hubhauler.ts",{"_index":787,"title":{},"body":{"classes/HubHauler.html":{}}}],["src/room/creeps/rolemanagers/commune/maintainer.ts",{"_index":930,"title":{},"body":{"classes/Maintainer.html":{}}}],["src/room/creeps/rolemanagers/commune/mineralharvester.ts",{"_index":963,"title":{},"body":{"classes/MineralHarvester.html":{}}}],["src/room/creeps/rolemanagers/commune/sourceharvester.ts",{"_index":1302,"title":{},"body":{"classes/SourceHarvester.html":{}}}],["src/room/creeps/rolemanagers/international/allyvanguard.ts",{"_index":112,"title":{},"body":{"classes/AllyVanguard.html":{}}}],["src/room/creeps/rolemanagers/international/claimer.ts",{"_index":196,"title":{},"body":{"classes/Claimer.html":{}}}],["src/room/creeps/rolemanagers/international/requesthauler.ts",{"_index":1173,"title":{},"body":{"classes/RequestHauler.html":{}}}],["src/room/creeps/rolemanagers/international/scout.ts",{"_index":1244,"title":{},"body":{"classes/Scout.html":{}}}],["src/room/creeps/rolemanagers/international/vanguard.ts",{"_index":1482,"title":{},"body":{"classes/Vanguard.html":{}}}],["src/room/creeps/rolemanagers/remote/remotebuilder.ts",{"_index":1113,"title":{},"body":{"classes/RemoteBuilder.html":{}}}],["src/room/creeps/rolemanagers/remote/remotecoreattacker.ts",{"_index":1120,"title":{},"body":{"classes/RemoteCoreAttacker.html":{}}}],["src/room/creeps/rolemanagers/remote/remotedefender.ts",{"_index":1124,"title":{},"body":{"classes/RemoteDefender.html":{}}}],["src/room/creeps/rolemanagers/remote/remotedismantler.ts",{"_index":1127,"title":{},"body":{"classes/RemoteDismantler.html":{}}}],["src/room/creeps/rolemanagers/remote/remotehauler.ts",{"_index":1141,"title":{},"body":{"classes/RemoteHauler.html":{}}}],["src/room/creeps/rolemanagers/remote/remotereserver.ts",{"_index":1156,"title":{},"body":{"classes/RemoteReserver.html":{}}}],["src/room/creeps/rolemanagers/remote/remotesourceharvester.ts",{"_index":1129,"title":{},"body":{"classes/RemoteHarvester.html":{}}}],["src/room/droppedresources.ts",{"_index":578,"title":{},"body":{"classes/DroppedResourceManager.html":{}}}],["src/room/remoteplanner.ts",{"_index":736,"title":{},"body":{"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"interfaces/PlanStampsArgs-1.html":{},"interfaces/TowerDamageCoord-1.html":{}}}],["src/room/room.ts",{"_index":556,"title":{},"body":{"interfaces/DeadCreepNames.html":{},"interfaces/InterpretedRoomEvent.html":{}}}],["src/room/rooms.ts",{"_index":1239,"title":{},"body":{"classes/RoomsManager.html":{}}}],["src/room/roomutils.ts",{"_index":1896,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/room/roomvisuals.ts",{"_index":1209,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["src/room/ruins.ts",{"_index":1242,"title":{},"body":{"classes/RuinManager.html":{}}}],["src/room/tombstones.ts",{"_index":1459,"title":{},"body":{"classes/TombstoneManager.html":{}}}],["src/settingsdefault.ts",{"_index":1254,"title":{},"body":{"interfaces/Settings.html":{}}}],["stable",{"_index":1594,"title":{},"body":{"index.html":{}}}],["stack",{"_index":652,"title":{},"body":{"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{}}}],["stamp",{"_index":731,"title":{},"body":{"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{}}}],["stampanchor",{"_index":1010,"title":{},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["stampanchors",{"_index":1008,"title":{},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["stamptype",{"_index":1003,"title":{},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["stamptypes",{"_index":1015,"title":{},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["start",{"_index":956,"title":{},"body":{"classes/MemHack.html":{},"index.html":{}}}],["startcoords",{"_index":732,"title":{},"body":{"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["started",{"_index":1506,"title":{"index.html":{},"license.html":{}},"body":{}}],["stat",{"_index":633,"title":{},"body":{"classes/EndTickManager.html":{}}}],["statdatavisuals",{"_index":1226,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["statdatavisuals(y",{"_index":1237,"title":{},"body":{"classes/RoomVisualsManager.html":{}}}],["static",{"_index":120,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/Claimer.html":{},"classes/ControllerUpgrader.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FastFiller.html":{},"classes/Hauler.html":{},"classes/HubHauler.html":{},"classes/Maintainer.html":{},"classes/MeleeDefender.html":{},"classes/MineralHarvester.html":{},"classes/Operator.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RequestHauler.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/Vanguard.html":{}}}],["statsmanager",{"_index":1372,"title":{"classes/StatsManager.html":{}},"body":{"classes/StatsManager.html":{}}}],["steamless",{"_index":1763,"title":{},"body":{"index.html":{}}}],["stompenemycsites",{"_index":154,"title":{},"body":{"classes/Antifa.html":{},"classes/Duo.html":{}}}],["stopresponse",{"_index":1490,"title":{},"body":{"classes/WorkRequestManager.html":{}}}],["stopresponse(deletecombat",{"_index":1494,"title":{},"body":{"classes/WorkRequestManager.html":{}}}],["storage",{"_index":453,"title":{},"body":{"classes/CommuneManager.html":{}}}],["stored",{"_index":442,"title":{},"body":{"classes/CommuneManager.html":{}}}],["storedenergybuildthreshold",{"_index":389,"title":{},"body":{"classes/CommuneManager.html":{}}}],["storedenergyupgradethreshold",{"_index":388,"title":{},"body":{"classes/CommuneManager.html":{}}}],["storer",{"_index":1288,"title":{},"body":{"interfaces/Settings.html":{}}}],["storing",{"_index":436,"title":{},"body":{"classes/CommuneManager.html":{}}}],["storingstructures",{"_index":392,"title":{},"body":{"classes/CommuneManager.html":{}}}],["storingstructurescapacity",{"_index":393,"title":{},"body":{"classes/CommuneManager.html":{}}}],["storingstructuresmanager",{"_index":371,"title":{"classes/StoringStructuresManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/StoringStructuresManager.html":{}}}],["strength",{"_index":434,"title":{},"body":{"classes/CommuneManager.html":{}}}],["string",{"_index":36,"title":{},"body":{"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"interfaces/AnimatedStyle.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ControllerUpgrader.html":{},"classes/CreepOrganizer.html":{},"interfaces/CustomLogOpts.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"interfaces/ErrorData.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FastFiller.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HubHauler.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MineralHarvester.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"interfaces/RoomVisual.html":{},"classes/Scout.html":{},"interfaces/Settings.html":{},"classes/SourceHarvester.html":{},"interfaces/SpeechStyle.html":{},"classes/StatsManager.html":{},"classes/TerminalManager.html":{},"classes/Vanguard.html":{}}}],["strongly",{"_index":1626,"title":{},"body":{"index.html":{}}}],["structure",{"_index":437,"title":{},"body":{"classes/CommuneManager.html":{},"classes/Quad.html":{},"interfaces/RoomVisual.html":{}}}],["structure(x",{"_index":1204,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["structureconstant",{"_index":1205,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["structurecontainer",{"_index":1138,"title":{},"body":{"classes/RemoteHarvester.html":{},"classes/SourceHarvester.html":{}}}],["structured",{"_index":1536,"title":{},"body":{"index.html":{}}}],["structurefactory",{"_index":699,"title":{},"body":{"classes/FactoryManager.html":{}}}],["structurelab",{"_index":883,"title":{},"body":{"classes/LabManager.html":{}}}],["structurelink",{"_index":407,"title":{},"body":{"classes/CommuneManager.html":{}}}],["structuremigration",{"_index":1268,"title":{},"body":{"interfaces/Settings.html":{}}}],["structurenuker",{"_index":969,"title":{},"body":{"classes/NukerManager.html":{}}}],["structureobserver",{"_index":974,"title":{},"body":{"classes/ObserverManager.html":{}}}],["structurepowerspawn",{"_index":1046,"title":{},"body":{"classes/PowerSpawnsManager.html":{}}}],["structurerampart",{"_index":408,"title":{},"body":{"classes/CommuneManager.html":{}}}],["structures",{"_index":452,"title":{},"body":{"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/RemoteDismantler.html":{},"interfaces/Settings.html":{}}}],["structurespawn",{"_index":1348,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["structurestorage",{"_index":409,"title":{},"body":{"classes/CommuneManager.html":{}}}],["structureterminal",{"_index":410,"title":{},"body":{"classes/CommuneManager.html":{},"classes/TerminalManager.html":{}}}],["structuretypesbybuildpriority",{"_index":399,"title":{},"body":{"classes/CommuneManager.html":{}}}],["stuck",{"_index":1528,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":914,"title":{},"body":{"classes/LabManager.html":{}}}],["subject",{"_index":1844,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1838,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1848,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1012,"title":{},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["sufficient",{"_index":475,"title":{},"body":{"classes/CommuneManager.html":{},"classes/PowerSpawnsManager.html":{}}}],["suggest",{"_index":1760,"title":{},"body":{"index.html":{}}}],["sum",{"_index":1078,"title":{},"body":{"classes/Quad.html":{}}}],["superposition",{"_index":553,"title":{},"body":{"interfaces/CustomLogOpts.html":{}}}],["support",{"_index":1806,"title":{},"body":{"index.html":{}}}],["sure",{"_index":811,"title":{},"body":{"classes/InitManager.html":{},"index.html":{}}}],["symbol",{"_index":671,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["t",{"_index":821,"title":{},"body":{"classes/Int32Queue.html":{}}}],["taking",{"_index":1634,"title":{},"body":{"index.html":{}}}],["target",{"_index":839,"title":{},"body":{"interfaces/InterpretedRoomEvent.html":{},"classes/LabManager.html":{},"classes/Quad.html":{},"classes/Scout.html":{}}}],["targetamount",{"_index":857,"title":{},"body":{"classes/LabManager.html":{}}}],["targetcompounds",{"_index":858,"title":{},"body":{"classes/LabManager.html":{}}}],["targetenergy",{"_index":387,"title":{},"body":{"classes/CommuneManager.html":{}}}],["targets",{"_index":1086,"title":{},"body":{"classes/Quad.html":{},"interfaces/Settings.html":{}}}],["tcollectivizer",{"_index":1894,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["teamwork",{"_index":1781,"title":{},"body":{"index.html":{}}}],["teirmal",{"_index":454,"title":{},"body":{"classes/CommuneManager.html":{}}}],["terminal",{"_index":1399,"title":{},"body":{"classes/TerminalManager.html":{}}}],["terminalcommunes",{"_index":226,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["terminalmanager",{"_index":372,"title":{"classes/TerminalManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/TerminalManager.html":{}}}],["terminalrequests",{"_index":227,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["terrible",{"_index":1532,"title":{},"body":{"index.html":{}}}],["test",{"_index":385,"title":{},"body":{"classes/CommuneManager.html":{},"classes/MapVisualsManager.html":{},"interfaces/RoomVisual.html":{},"classes/SpawningStructuresManager.html":{},"index.html":{}}}],["test(roomname",{"_index":938,"title":{},"body":{"classes/MapVisualsManager.html":{}}}],["testargs",{"_index":1346,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["testrequests",{"_index":1347,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["text",{"_index":1203,"title":{},"body":{"interfaces/RoomVisual.html":{}}}],["textcolor",{"_index":554,"title":{},"body":{"interfaces/CustomLogOpts.html":{},"interfaces/SpeechStyle.html":{}}}],["textfont",{"_index":1369,"title":{},"body":{"interfaces/SpeechStyle.html":{}}}],["textsize",{"_index":1370,"title":{},"body":{"interfaces/SpeechStyle.html":{}}}],["textstyle",{"_index":1371,"title":{},"body":{"interfaces/SpeechStyle.html":{}}}],["thanks",{"_index":1795,"title":{},"body":{"index.html":{}}}],["that's",{"_index":1617,"title":{},"body":{"index.html":{}}}],["thematically",{"_index":1509,"title":{},"body":{"index.html":{}}}],["themselves",{"_index":471,"title":{},"body":{"classes/CommuneManager.html":{}}}],["thier",{"_index":515,"title":{},"body":{"classes/ConstructionSiteManager.html":{}}}],["things",{"_index":1620,"title":{},"body":{"index.html":{}}}],["this.leader",{"_index":596,"title":{},"body":{"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/Quad.html":{}}}],["those",{"_index":1647,"title":{},"body":{"index.html":{}}}],["threat",{"_index":1026,"title":{},"body":{"classes/PlayerManager.html":{}}}],["threatbyplayers",{"_index":561,"title":{},"body":{"classes/DefenceManager.html":{}}}],["through",{"_index":1073,"title":{},"body":{"classes/Quad.html":{},"index.html":{}}}],["tick",{"_index":93,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/CollectiveManager.html":{},"classes/EndTickCreepManager.html":{},"classes/EndTickManager.html":{}}}],["tickid",{"_index":228,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["tickinit",{"_index":1452,"title":{"classes/TickInit.html":{}},"body":{"classes/TickInit.html":{}}}],["ticks",{"_index":1032,"title":{},"body":{"classes/PlayerManager.html":{},"classes/RemotesManager.html":{}}}],["tier",{"_index":1356,"title":{},"body":{"classes/SpawningStructuresManager.html":{}}}],["time",{"_index":1723,"title":{},"body":{"index.html":{}}}],["timer",{"_index":485,"title":{},"body":{"classes/CommuneManager.html":{}}}],["together",{"_index":313,"title":{},"body":{"classes/Collectivizer.html":{}}}],["token",{"_index":1693,"title":{},"body":{"index.html":{}}}],["tombstonemanager",{"_index":1458,"title":{"classes/TombstoneManager.html":{}},"body":{"classes/TombstoneManager.html":{}}}],["tool",{"_index":1762,"title":{},"body":{"index.html":{}}}],["top",{"_index":1776,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1871,"title":{},"body":{"license.html":{}}}],["total",{"_index":413,"title":{},"body":{"classes/CommuneManager.html":{}}}],["towerattacktarget",{"_index":373,"title":{},"body":{"classes/CommuneManager.html":{}}}],["towerdamagecoord",{"_index":1460,"title":{"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{}},"body":{"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{}}}],["towermanager",{"_index":374,"title":{"classes/TowerManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/TowerManager.html":{}}}],["trace",{"_index":666,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["trackenemysquads",{"_index":1473,"title":{},"body":{"classes/TowerManager.html":{}}}],["tracks",{"_index":512,"title":{},"body":{"classes/ConstructionSiteManager.html":{}}}],["trade",{"_index":1300,"title":{},"body":{"interfaces/Settings.html":{}}}],["tradeblacklist",{"_index":1269,"title":{},"body":{"interfaces/Settings.html":{}}}],["trading",{"_index":67,"title":{},"body":{"classes/AllyRequestManager.html":{},"interfaces/Settings.html":{}}}],["transferrequest",{"_index":773,"title":{},"body":{"classes/HaulRequestManager.html":{}}}],["transferrequest(requestname",{"_index":776,"title":{},"body":{"classes/HaulRequestManager.html":{}}}],["transfertonearbycreep",{"_index":1303,"title":{},"body":{"classes/SourceHarvester.html":{}}}],["transfertosourceextensions",{"_index":1304,"title":{},"body":{"classes/SourceHarvester.html":{}}}],["transfertosourcelink",{"_index":1305,"title":{},"body":{"classes/SourceHarvester.html":{}}}],["transfertosourcestructures",{"_index":1306,"title":{},"body":{"classes/SourceHarvester.html":{}}}],["translate",{"_index":1664,"title":{},"body":{"index.html":{}}}],["traveltocontroller",{"_index":1160,"title":{},"body":{"classes/RemoteReserver.html":{}}}],["traveltofastfiller",{"_index":714,"title":{},"body":{"classes/FastFiller.html":{}}}],["traveltohub",{"_index":798,"title":{},"body":{"classes/HubHauler.html":{}}}],["traveltosource",{"_index":122,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/RemoteHarvester.html":{},"classes/SourceHarvester.html":{},"classes/Vanguard.html":{}}}],["traveltosource(sourceindex",{"_index":134,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/RemoteHarvester.html":{},"classes/Vanguard.html":{}}}],["treat",{"_index":1272,"title":{},"body":{"interfaces/Settings.html":{}}}],["tricks",{"_index":764,"title":{},"body":{"classes/FlagManager.html":{}}}],["tries",{"_index":157,"title":{},"body":{"classes/Antifa.html":{},"classes/Scout.html":{}}}],["try",{"_index":1048,"title":{},"body":{"classes/PowerSpawnsManager.html":{},"interfaces/Settings.html":{}}}],["trybuyingstuff",{"_index":1422,"title":{},"body":{"classes/TerminalManager.html":{}}}],["trybuyingstuff(resourcestodirectbuy",{"_index":1444,"title":{},"body":{"classes/TerminalManager.html":{}}}],["trying",{"_index":574,"title":{},"body":{"classes/DefenceManager.html":{}}}],["trysellingoffstuff",{"_index":1423,"title":{},"body":{"classes/TerminalManager.html":{}}}],["trysellingoffstuff(resources",{"_index":1447,"title":{},"body":{"classes/TerminalManager.html":{}}}],["ts",{"_index":1625,"title":{},"body":{"index.html":{}}}],["two",{"_index":1619,"title":{},"body":{"index.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/AdvancedFindDistanceOpts.html":{},"interfaces/AllyRequest.html":{},"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"interfaces/AnimatedStyle.html":{},"classes/Antifa.html":{},"classes/BasePlans.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"interfaces/CreepCombatData.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"interfaces/CustomLogOpts.html":{},"interfaces/DeadCreepNames.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"interfaces/EnemyThreatData.html":{},"interfaces/ErrorData.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"classes/FeatureFlagManager.html":{},"interfaces/FindDynamicStampAnchorArgs.html":{},"interfaces/FindDynamicStampAnchorArgs-1.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"interfaces/FindStampAnchorArgs.html":{},"interfaces/FindStampAnchorArgs-1.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/Int32Queue.html":{},"interfaces/InterpretedRoomEvent.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MemHack.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"interfaces/OutputArgs.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RampartPlans.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"classes/RoomPruningManager.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"interfaces/Settings.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"interfaces/SpeechStyle.html":{},"classes/StatsManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TombstoneManager.html":{},"interfaces/TowerDamageCoord.html":{},"interfaces/TowerDamageCoord-1.html":{},"classes/TowerManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1888,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":765,"title":{},"body":{"classes/FlagManager.html":{},"index.html":{}}}],["typeweights",{"_index":10,"title":{},"body":{"interfaces/AdvancedFindDistanceOpts.html":{}}}],["uint32array",{"_index":739,"title":{},"body":{"interfaces/FindDynamicStampAnchorWeightedArgs.html":{},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["uint8array",{"_index":641,"title":{},"body":{"interfaces/EnemyThreatData.html":{}}}],["undefined",{"_index":258,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/MemHack.html":{},"interfaces/Settings.html":{}}}],["understood",{"_index":1538,"title":{},"body":{"index.html":{}}}],["unified",{"_index":1706,"title":{},"body":{"index.html":{}}}],["unpack",{"_index":168,"title":{},"body":{"classes/BasePlans.html":{},"classes/RampartPlans.html":{}}}],["unpack(packedmap",{"_index":176,"title":{},"body":{"classes/BasePlans.html":{},"classes/RampartPlans.html":{}}}],["unpacklabidsbytype",{"_index":878,"title":{},"body":{"classes/LabManager.html":{}}}],["unscoutedrooms",{"_index":1246,"title":{},"body":{"classes/Scout.html":{}}}],["unspawned",{"_index":1051,"title":{},"body":{"classes/PowerSpawnsManager.html":{}}}],["unspawnedpowercreepnames",{"_index":229,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["up",{"_index":1287,"title":{},"body":{"interfaces/Settings.html":{},"classes/TowerManager.html":{},"index.html":{}}}],["update",{"_index":238,"title":{},"body":{"classes/CollectiveManager.html":{},"classes/CommuneManager.html":{}}}],["update(room",{"_index":440,"title":{},"body":{"classes/CommuneManager.html":{}}}],["updatebuyavg",{"_index":1424,"title":{},"body":{"classes/TerminalManager.html":{}}}],["updatebuyavg(energyprice",{"_index":1448,"title":{},"body":{"classes/TerminalManager.html":{}}}],["updateminhaulercost",{"_index":785,"title":{},"body":{"classes/HaulerSizeManager.html":{}}}],["updaterun",{"_index":1240,"title":{},"body":{"classes/RoomsManager.html":{}}}],["updates",{"_index":287,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["updatesellavg",{"_index":1425,"title":{},"body":{"classes/TerminalManager.html":{}}}],["updatesellavg(energyprice",{"_index":1449,"title":{},"body":{"classes/TerminalManager.html":{}}}],["updateusableresources",{"_index":698,"title":{},"body":{"classes/FactoryManager.html":{}}}],["upgrade",{"_index":433,"title":{},"body":{"classes/CommuneManager.html":{}}}],["upgraderoom",{"_index":1485,"title":{},"body":{"classes/Vanguard.html":{}}}],["upgraderoom(conditions",{"_index":1486,"title":{},"body":{"classes/Vanguard.html":{}}}],["upgradestructure",{"_index":398,"title":{},"body":{"classes/CommuneManager.html":{}}}],["upload",{"_index":1713,"title":{},"body":{"index.html":{}}}],["upon",{"_index":1541,"title":{},"body":{"index.html":{}}}],["usage",{"_index":77,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/MemHack.html":{},"index.html":{}}}],["use",{"_index":444,"title":{},"body":{"classes/CommuneManager.html":{},"classes/ErrorMapper.html":{},"classes/RemotesManager.html":{},"interfaces/Settings.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":1534,"title":{},"body":{"index.html":{}}}],["useful",{"_index":66,"title":{},"body":{"classes/AllyRequestManager.html":{},"index.html":{}}}],["username",{"_index":1703,"title":{},"body":{"index.html":{}}}],["usernames",{"_index":1271,"title":{},"body":{"interfaces/Settings.html":{}}}],["users",{"_index":1754,"title":{},"body":{"index.html":{}}}],["userscript",{"_index":1773,"title":{},"body":{"index.html":{}}}],["userscriptmanager",{"_index":1479,"title":{"classes/UserScriptManager.html":{}},"body":{"classes/UserScriptManager.html":{}}}],["useterminal",{"_index":1426,"title":{},"body":{"classes/TerminalManager.html":{}}}],["useterminal(bestenergysellorder",{"_index":1450,"title":{},"body":{"classes/TerminalManager.html":{}}}],["using",{"_index":667,"title":{},"body":{"classes/ErrorMapper.html":{},"interfaces/Settings.html":{},"index.html":{}}}],["v",{"_index":830,"title":{},"body":{"classes/Int32Queue.html":{},"index.html":{}}}],["value",{"_index":105,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/BuilderManager.html":{},"classes/CollectiveManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ControllerUpgraderManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/ErrorMapper.html":{},"classes/HaulerManager.html":{},"classes/LabManager.html":{},"classes/PlayerManager.html":{},"classes/Quad.html":{},"classes/RoomPruningManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/StatsManager.html":{},"classes/TerminalManager.html":{},"classes/WorkRequestManager.html":{}}}],["values",{"_index":73,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/CollectiveManager.html":{},"classes/Quad.html":{},"classes/RemoteHarvester.html":{}}}],["vanguard",{"_index":1481,"title":{"classes/Vanguard.html":{}},"body":{"classes/Vanguard.html":{}}}],["variables",{"_index":802,"title":{},"body":{"classes/InitManager.html":{}}}],["version",{"_index":646,"title":{},"body":{"interfaces/ErrorData.html":{},"classes/ErrorExporter.html":{},"classes/MigrationManager.html":{},"interfaces/Settings.html":{},"index.html":{},"properties.html":{}}}],["via",{"_index":1560,"title":{},"body":{"index.html":{}}}],["viable",{"_index":1085,"title":{},"body":{"classes/Quad.html":{},"interfaces/Settings.html":{}}}],["videos",{"_index":1578,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":500,"title":{},"body":{"classes/ConstructionManager.html":{}}}],["visuals",{"_index":1276,"title":{},"body":{"interfaces/Settings.html":{}}}],["void",{"_index":98,"title":{},"body":{"classes/AllyRequestManager.html":{},"classes/AllyVanguard.html":{},"classes/Antifa.html":{},"classes/Builder.html":{},"classes/BuilderManager.html":{},"classes/Claimer.html":{},"classes/CollectiveManager.html":{},"classes/Collectivizer.html":{},"classes/CombatRequestManager.html":{},"classes/CommuneManager.html":{},"classes/ConstructionManager.html":{},"classes/ConstructionSiteManager.html":{},"classes/ContainerManager.html":{},"classes/ControllerUpgrader.html":{},"classes/ControllerUpgraderManager.html":{},"classes/CreepOrganizer.html":{},"classes/CreepRoleManager.html":{},"classes/DefenceManager.html":{},"classes/DroppedResourceManager.html":{},"classes/Duo.html":{},"classes/DynamicSquad.html":{},"classes/EndTickCreepManager.html":{},"classes/EndTickManager.html":{},"classes/ErrorExporter.html":{},"classes/ErrorMapper.html":{},"classes/FactoryManager.html":{},"classes/FastFiller.html":{},"classes/FlagManager.html":{},"classes/HaulRequestManager.html":{},"classes/Hauler.html":{},"classes/HaulerManager.html":{},"classes/HaulerNeedManager.html":{},"classes/HaulerSizeManager.html":{},"classes/HubHauler.html":{},"classes/InitManager.html":{},"classes/Int32Queue.html":{},"classes/LabManager.html":{},"classes/LinkManager.html":{},"classes/Maintainer.html":{},"classes/MapVisualsManager.html":{},"classes/MeleeDefender.html":{},"classes/MemHack.html":{},"classes/MigrationManager.html":{},"classes/MineralHarvester.html":{},"classes/NukerManager.html":{},"classes/ObserverManager.html":{},"classes/Operator.html":{},"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{},"classes/PlayerManager.html":{},"classes/PowerCreepOrganizer.html":{},"classes/PowerCreepRoleManager.html":{},"classes/PowerSpawnsManager.html":{},"classes/Quad.html":{},"classes/RangedDefender.html":{},"classes/RemoteBuilder.html":{},"classes/RemoteCoreAttacker.html":{},"classes/RemoteDefender.html":{},"classes/RemoteDismantler.html":{},"classes/RemoteHarvester.html":{},"classes/RemoteHauler.html":{},"classes/RemoteReserver.html":{},"classes/RemotesManager.html":{},"classes/RequestHauler.html":{},"classes/RespawnManager.html":{},"classes/RoomPruningManager.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{},"classes/RoomsManager.html":{},"classes/RuinManager.html":{},"classes/Scout.html":{},"classes/SourceHarvester.html":{},"classes/SourceManager.html":{},"classes/SpawnRequestsManager.html":{},"classes/SpawningStructuresManager.html":{},"classes/StatsManager.html":{},"classes/StoringStructuresManager.html":{},"classes/TerminalManager.html":{},"classes/TickInit.html":{},"classes/TombstoneManager.html":{},"classes/TowerManager.html":{},"classes/UserScriptManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{}}}],["want",{"_index":1530,"title":{},"body":{"index.html":{}}}],["warning",{"_index":672,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["warranties",{"_index":1856,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1851,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1734,"title":{},"body":{"index.html":{}}}],["we're",{"_index":1778,"title":{},"body":{"index.html":{}}}],["weighted",{"_index":1004,"title":{},"body":{"interfaces/PlanStampsArgs.html":{},"interfaces/PlanStampsArgs-1.html":{}}}],["welcome",{"_index":1548,"title":{},"body":{"index.html":{}}}],["well",{"_index":72,"title":{},"body":{"classes/AllyRequestManager.html":{}}}],["wether",{"_index":464,"title":{},"body":{"classes/CommuneManager.html":{},"interfaces/OutputArgs.html":{},"classes/PlayerManager.html":{},"interfaces/Settings.html":{}}}],["whether",{"_index":1868,"title":{},"body":{"license.html":{}}}],["wiki",{"_index":1583,"title":{},"body":{"index.html":{}}}],["willmove",{"_index":1072,"title":{},"body":{"classes/Quad.html":{}}}],["windows",{"_index":1609,"title":{},"body":{"index.html":{}}}],["withdrawrequest",{"_index":774,"title":{},"body":{"classes/HaulRequestManager.html":{}}}],["withdrawrequest(requestname",{"_index":777,"title":{},"body":{"classes/HaulRequestManager.html":{}}}],["without",{"_index":1087,"title":{},"body":{"classes/Quad.html":{},"index.html":{},"license.html":{}}}],["withstand",{"_index":425,"title":{},"body":{"classes/CommuneManager.html":{}}}],["work",{"_index":312,"title":{},"body":{"classes/Collectivizer.html":{}}}],["workers",{"_index":1518,"title":{},"body":{"index.html":{}}}],["working",{"_index":1784,"title":{},"body":{"index.html":{}}}],["workrequest",{"_index":130,"title":{},"body":{"classes/AllyVanguard.html":{},"classes/Claimer.html":{}}}],["workrequestmanager",{"_index":375,"title":{"classes/WorkRequestManager.html":{}},"body":{"classes/CommuneManager.html":{},"classes/WorkRequestManager.html":{}}}],["workrequestroles",{"_index":1323,"title":{},"body":{"classes/SpawnRequestsManager.html":{}}}],["workrequests",{"_index":937,"title":{},"body":{"classes/MapVisualsManager.html":{},"interfaces/Settings.html":{}}}],["workrequestsbyscore",{"_index":243,"title":{},"body":{"classes/CollectiveManager.html":{}}}],["world",{"_index":1553,"title":{},"body":{"index.html":{}}}],["wraploop",{"_index":660,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["wraploop(loop",{"_index":685,"title":{},"body":{"classes/ErrorMapper.html":{}}}],["x",{"_index":175,"title":{},"body":{"classes/BasePlans.html":{},"classes/PlayerManager.html":{},"classes/RampartPlans.html":{},"classes/RemotesManager.html":{},"interfaces/RoomVisual.html":{}}}],["xtwistedx",{"_index":954,"title":{},"body":{"classes/MemHack.html":{}}}],["y",{"_index":174,"title":{},"body":{"classes/BasePlans.html":{},"classes/RampartPlans.html":{},"interfaces/RoomVisual.html":{},"classes/RoomVisualsManager.html":{}}}],["yes",{"_index":170,"title":{},"body":{"classes/BasePlans.html":{},"classes/ErrorExporter.html":{},"classes/RampartPlans.html":{},"interfaces/RoomVisual.html":{},"classes/StatsManager.html":{},"classes/Vanguard.html":{},"classes/WorkRequestManager.html":{}}}],["you'd",{"_index":1757,"title":{},"body":{"index.html":{}}}],["you'll",{"_index":1588,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1621,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":1650,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AdvancedFindDistanceOpts.html":{"url":"interfaces/AdvancedFindDistanceOpts.html","title":"interface - AdvancedFindDistanceOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdvancedFindDistanceOpts\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            avoidDanger\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            typeWeights\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avoidDanger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avoidDanger:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typeWeights\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        typeWeights:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AllyRequest.html":{"url":"interfaces/AllyRequest.html","title":"interface - AllyRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AllyRequest\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/AllyRequests.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hateAmount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ID\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxAmount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minDamage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minMeleeHeal\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minRangedHeal\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            playerName\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            requestType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            resourceType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roomName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hateAmount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hateAmount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How much hate to increase or decrease a player by\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Added to ally requests when organizing them for response\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAmount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAmount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDamage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDamage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The minimum amount of damage a squad needs\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minMeleeHeal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minMeleeHeal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The minimum amount of heal a melee squad needs\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minRangedHeal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minRangedHeal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The minimum amount of heal a ranged squad needs\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playerName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playerName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A number representing the need of the request, where 1 is highest and 0 is lowest\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requestType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requestType:         AllyRequestTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AllyRequestTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resourceType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resourceType:     ResourceConstant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResourceConstant\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roomName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllyRequestManager.html":{"url":"classes/AllyRequestManager.html","title":"class - AllyRequestManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllyRequestManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/AllyRequests.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains functions and methods useful for ally trading. Ensure allyTrading in Memory is enabled, as well as no other values or in the designated simpleAlliesSegment before usage\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _allyRequests\n                            \n                            \n                                currentAlly\n                            \n                            \n                                myRequests\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endRun\n                            \n                            \n                                initRun\n                            \n                            \n                                requestAttack\n                            \n                            \n                                requestBuild\n                            \n                            \n                                requestDefense\n                            \n                            \n                                requestHate\n                            \n                            \n                                requestResource\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    allyRequests\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _allyRequests\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial>\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentAlly\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myRequests\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AllyRequest[]\n\n                    \n                \n\n            \n                \n                    An array of the requests you have made this tick\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        endRun\n                        \n                    \n                \n            \n            \n                \nendRun()\n                \n            \n\n\n\n\n            \n                \n                    To call after requests have been made, to assign requests to the next ally\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initRun\n                        \n                    \n                \n            \n            \n                \ninitRun()\n                \n            \n\n\n\n\n            \n                \n                    To call before any requests are made. Configures some required values\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestAttack\n                        \n                    \n                \n            \n            \n                \nrequestAttack(roomName: string, playerName: string, minDamage: number, minMeleeHeal: number, minRangedHeal: number, priority: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    playerName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    minDamage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    minMeleeHeal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    minRangedHeal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    priority\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestBuild\n                        \n                    \n                \n            \n            \n                \nrequestBuild(roomName: string, priority: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    priority\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestDefense\n                        \n                    \n                \n            \n            \n                \nrequestDefense(roomName: string, minDamage: number, minMeleeHeal: number, minRangedHeal: number, priority: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    minDamage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    minMeleeHeal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    minRangedHeal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    priority\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestHate\n                        \n                    \n                \n            \n            \n                \nrequestHate(playerName: string, hateAmount: number, priority: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    playerName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    hateAmount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    priority\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestResource\n                        \n                    \n                \n            \n            \n                \nrequestResource(roomName: string, resourceType: ResourceConstant, maxAmount: number, priority: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    resourceType\n                                    \n                                            ResourceConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    maxAmount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    priority\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        allyRequests\n                    \n                \n\n                \n                    \n                        getallyRequests()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllyVanguard.html":{"url":"classes/AllyVanguard.html","title":"class - AllyVanguard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllyVanguard\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/international/allyVanguard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                buildRoom\n                            \n                            \n                                    Optional\n                                findRemote\n                            \n                            \n                                    Optional\n                                getEnergyFromRemote\n                            \n                            \n                                    Optional\n                                getEnergyFromRoom\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                            \n                                    Optional\n                                travelToSource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        buildRoom\n                        \n                    \n                \n            \n            \n                \nbuildRoom()\n                \n            \n\n\n\n\n            \n                \n                    Builds a spawn in the creep's commune workRequest\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findRemote\n                        \n                    \n                \n            \n            \n                \nfindRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        getEnergyFromRemote\n                        \n                    \n                \n            \n            \n                \ngetEnergyFromRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        getEnergyFromRoom\n                        \n                    \n                \n            \n            \n                \ngetEnergyFromRoom()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        travelToSource\n                        \n                    \n                \n            \n            \n                \ntravelToSource(sourceIndex: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimatedStyle.html":{"url":"interfaces/AnimatedStyle.html","title":"interface - AnimatedStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnimatedStyle\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/other/RoomVisual.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            frames\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            radius\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frames:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        radius:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Antifa.html":{"url":"classes/Antifa.html","title":"class - Antifa","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Antifa\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/antifa/antifa.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                advancedAttack\n                            \n                            \n                                    Optional\n                                advancedDismantle\n                            \n                            \n                                    Optional\n                                advancedRangedAttack\n                            \n                            \n                                    Optional\n                                attackStructures\n                            \n                            \n                                    Optional\n                                createSquad\n                            \n                            \n                                    Optional\n                                findSquad\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Optional\n                                rangedAttackStructures\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                            \n                                    Optional\n                                runCombat\n                            \n                            \n                                    Optional\n                                runSingle\n                            \n                            \n                                    Optional\n                                runSquad\n                            \n                            \n                                    Optional\n                                stompEnemyCSites\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        advancedAttack\n                        \n                    \n                \n            \n            \n                \nadvancedAttack()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        advancedDismantle\n                        \n                    \n                \n            \n            \n                \nadvancedDismantle()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        advancedRangedAttack\n                        \n                    \n                \n            \n            \n                \nadvancedRangedAttack()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        attackStructures\n                        \n                    \n                \n            \n            \n                \nattackStructures()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        createSquad\n                        \n                    \n                \n            \n            \n                \ncreateSquad(memberNames: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    memberNames\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findSquad\n                        \n                    \n                \n            \n            \n                \nfindSquad()\n                \n            \n\n\n\n\n            \n                \n                    Tries to find a squad, creating one if none could be found\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        rangedAttackStructures\n                        \n                    \n                \n            \n            \n                \nrangedAttackStructures()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        runCombat\n                        \n                    \n                \n            \n            \n                \nrunCombat()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        runSingle\n                        \n                    \n                \n            \n            \n                \nrunSingle()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        runSquad\n                        \n                    \n                \n            \n            \n                \nrunSquad()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        stompEnemyCSites\n                        \n                    \n                \n            \n            \n                \nstompEnemyCSites()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BasePlans.html":{"url":"classes/BasePlans.html","title":"class - BasePlans","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BasePlans\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/construction/basePlans.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getXY\n                            \n                            \n                                pack\n                            \n                            \n                                    Static\n                                unpack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map?: literal type)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(packedCoord: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    packedCoord\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXY\n                        \n                    \n                \n            \n            \n                \ngetXY(x: number, y: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pack\n                        \n                    \n                \n            \n            \n                \npack()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        unpack\n                        \n                    \n                \n            \n            \n                \n                    \n                    unpack(packedMap: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    packedMap\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasePlans\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Builder.html":{"url":"classes/Builder.html","title":"class - Builder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Builder\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/commune/builder.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preTickManager\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                            \n                                    Optional\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuilderManager.html":{"url":"classes/BuilderManager.html","title":"class - BuilderManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuilderManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManager.new/commune/builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                manager\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialRun\n                            \n                            \n                                    Private\n                                initialRunCreep\n                            \n                            \n                                run\n                            \n                            \n                                    Private\n                                runCreep\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        manager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreepRoles\n\n                    \n                \n                \n                    \n                        Default value : 'hauler'\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialRun\n                        \n                    \n                \n            \n            \n                \ninitialRun(room: Room)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initialRunCreep\n                        \n                    \n                \n            \n            \n                \n                    \n                    initialRunCreep(creep: Creep)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creep\n                                    \n                                            Creep\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun(room: Room)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        runCreep\n                        \n                    \n                \n            \n            \n                \n                    \n                    runCreep(creep: Creep)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creep\n                                    \n                                            Creep\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Claimer.html":{"url":"classes/Claimer.html","title":"class - Claimer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Claimer\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/international/claimer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                claimRoom\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        claimRoom\n                        \n                    \n                \n            \n            \n                \nclaimRoom()\n                \n            \n\n\n\n\n            \n                \n                    Claims a room specified in the creep's commune workRequest\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CollectiveManager.html":{"url":"classes/CollectiveManager.html","title":"class - CollectiveManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CollectiveManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/collective.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles inter room and non-room matters\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _avgCommunesPerMineral\n                            \n                            \n                                _compoundPriority\n                            \n                            \n                                _defaultMinCacheAmount\n                            \n                            \n                                _funnelOrder\n                            \n                            \n                                _marketIsFunctional\n                            \n                            \n                                _maxCommunes\n                            \n                            \n                                _maxCSitesPerRoom\n                            \n                            \n                                _minCredits\n                            \n                            \n                                _myOrders\n                            \n                            \n                                _myOrdersCount\n                            \n                            \n                                    Optional\n                                _orders\n                            \n                            \n                                _resourcesInStoringStructures\n                            \n                            \n                                _workRequestsByScore\n                            \n                            \n                                creepsByCombatRequest\n                            \n                            \n                                creepsByHaulRequest\n                            \n                            \n                                customCreepIDIndex\n                            \n                            \n                                customCreepIDs\n                            \n                            \n                                internationalDataVisuals\n                            \n                            \n                                mineralCommunes\n                            \n                            \n                                safemodedCommuneName\n                            \n                            \n                                terminalCommunes\n                            \n                            \n                                terminalRequests\n                            \n                            \n                                tickID\n                            \n                            \n                                unspawnedPowerCreepNames\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                advancedGeneratePixel\n                            \n                            \n                                advancedSellPixels\n                            \n                            \n                                getBuyOrder\n                            \n                            \n                                getSellOrder\n                            \n                            \n                                getTerrainCoords\n                            \n                            \n                                newCustomCreepID\n                            \n                            \n                                newTickID\n                            \n                            \n                                orderManager\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    minCredits\n                                \n                                \n                                    myOrders\n                                \n                                \n                                    orders\n                                \n                                \n                                    myOrdersCount\n                                \n                                \n                                    workRequestsByScore\n                                \n                                \n                                    defaultMinCacheAmount\n                                \n                                \n                                    marketIsFunctional\n                                \n                                \n                                    maxCommunes\n                                \n                                \n                                    avgCommunesPerMineral\n                                \n                                \n                                    compoundPriority\n                                \n                                \n                                    funnelOrder\n                                \n                                \n                                    resourcesInStoringStructures\n                                \n                                \n                                    maxCSitesPerRoom\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _avgCommunesPerMineral\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _compoundPriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _defaultMinCacheAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _funnelOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _marketIsFunctional\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _maxCommunes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _maxCSitesPerRoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _minCredits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _myOrders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n            \n                \n                    My outgoing orders organized by room, order type and resourceType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _myOrdersCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    The number of orders owned by me\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial>>>\n\n                    \n                \n\n            \n                \n                    Existing other-player orders ordered by order type and resourceType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _resourcesInStoringStructures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _workRequestsByScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (string | undefined)[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creepsByCombatRequest\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n            \n                \n                    Antifa creeps by combat request name, then by role with an array of creep names\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creepsByHaulRequest\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customCreepIDIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customCreepIDs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     undefined[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        internationalDataVisuals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mineralCommunes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n\n            \n                \n                    The aggregate number of each mineral in our communes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        safemodedCommuneName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n\n            \n                \n                    The name of the room that is safemoded, if there is one\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        terminalCommunes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        terminalRequests\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tickID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unspawnedPowerCreepNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        advancedGeneratePixel\n                        \n                    \n                \n            \n            \n                \nadvancedGeneratePixel()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        advancedSellPixels\n                        \n                    \n                \n            \n            \n                \nadvancedSellPixels()\n                \n            \n\n\n\n\n            \n                \n                    Find the highest order and sell pixels to it\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBuyOrder\n                        \n                    \n                \n            \n            \n                \ngetBuyOrder(resourceType: MarketResourceConstant, minPrice)\n                \n            \n\n\n\n\n            \n                \n                    Finds the most expensive buy order\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    resourceType\n                                    \n                                            MarketResourceConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    minPrice\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        getAvgPrice(resourceType) * 0.8\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Order\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSellOrder\n                        \n                    \n                \n            \n            \n                \ngetSellOrder(resourceType: MarketResourceConstant, maxPrice)\n                \n            \n\n\n\n\n            \n                \n                    Finds the cheapest sell order\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    resourceType\n                                    \n                                            MarketResourceConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    maxPrice\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        getAvgPrice(resourceType) * 1.2\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Order\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTerrainCoords\n                        \n                    \n                \n            \n            \n                \ngetTerrainCoords(roomName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newCustomCreepID\n                        \n                    \n                \n            \n            \n                \nnewCustomCreepID()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newTickID\n                        \n                    \n                \n            \n            \n                \nnewTickID()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderManager\n                        \n                    \n                \n            \n            \n                \norderManager()\n                \n            \n\n\n\n\n            \n                \n                    Removes inactive orders if the bot is reaching max orders\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n\n\n            \n                \n                    Updates values to be present for this tick\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        minCredits\n                    \n                \n\n                \n                    \n                        getminCredits()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        myOrders\n                    \n                \n\n                \n                    \n                        getmyOrders()\n                    \n                \n                    \n                        \n                                Gets my outgoing orders organized by room, order type and resourceType\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        orders\n                    \n                \n\n                \n                    \n                        getorders()\n                    \n                \n                    \n                        \n                                Gets existing other-player orders ordered by order type and resourceType\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        myOrdersCount\n                    \n                \n\n                \n                    \n                        getmyOrdersCount()\n                    \n                \n                    \n                        \n                                Gets the number of orders owned by me\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        workRequestsByScore\n                    \n                \n\n                \n                    \n                        getworkRequestsByScore()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        defaultMinCacheAmount\n                    \n                \n\n                \n                    \n                        getdefaultMinCacheAmount()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        marketIsFunctional\n                    \n                \n\n                \n                    \n                        getmarketIsFunctional()\n                    \n                \n                    \n                        \n                                Determines if there is functional based on history\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        maxCommunes\n                    \n                \n\n                \n                    \n                        getmaxCommunes()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        avgCommunesPerMineral\n                    \n                \n\n                \n                    \n                        getavgCommunesPerMineral()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        compoundPriority\n                    \n                \n\n                \n                    \n                        getcompoundPriority()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        funnelOrder\n                    \n                \n\n                \n                    \n                        getfunnelOrder()\n                    \n                \n                    \n                        \n                                Commune names sorted by funnel priority\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        resourcesInStoringStructures\n                    \n                \n\n                \n                    \n                        getresourcesInStoringStructures()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        maxCSitesPerRoom\n                    \n                \n\n                \n                    \n                        getmaxCSitesPerRoom()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Collectivizer.html":{"url":"classes/Collectivizer.html","title":"class - Collectivizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Collectivizer\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/collectivizer.ts\n        \n\n\n            \n                Description\n            \n            \n                Has collectives work together, allows the collectivizer to execute code remotely\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CombatRequestManager.html":{"url":"classes/CombatRequestManager.html","title":"class - CombatRequestManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CombatRequestManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/combatRequest.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                attackRequest\n                            \n                            \n                                    Private\n                                canKeepRequest\n                            \n                            \n                                    Private\n                                defendRequest\n                            \n                            \n                                    Private\n                                harassRequest\n                            \n                            \n                                    Private\n                                manageAbandonment\n                            \n                            \n                                    Private\n                                manageInaction\n                            \n                            \n                                    Public\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        attackRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    attackRequest(requestName: string, index: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        canKeepRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    canKeepRequest()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        defendRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    defendRequest(requestName: string, index: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        harassRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    harassRequest(requestName: string, index: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        manageAbandonment\n                        \n                    \n                \n            \n            \n                \n                    \n                    manageAbandonment(requestName: string, index: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        manageInaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    manageInaction(requestName: string, index: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommuneManager.html":{"url":"classes/CommuneManager.html","title":"class - CommuneManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommuneManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/commune.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _controllerLink\n                            \n                            \n                                    Private\n                                _defensiveRamparts\n                            \n                            \n                                _fastFillerSpawnEnergyCapacity\n                            \n                            \n                                    Private\n                                _hasSufficientRoads\n                            \n                            \n                                    Private\n                                _maxCombatRequests\n                            \n                            \n                                    Private\n                                _maxUpgradeStrength\n                            \n                            \n                                    Private\n                                _minRampartHits\n                            \n                            \n                                    Private\n                                _minStoredEnergy\n                            \n                            \n                                    Private\n                                _rampartRepairTargets\n                            \n                            \n                                    Private\n                                _sourceLinks\n                            \n                            \n                                    Private\n                                _storedEnergyBuildThreshold\n                            \n                            \n                                    Private\n                                _storingStructures\n                            \n                            \n                                    Private\n                                _structureTypesByBuildPriority\n                            \n                            \n                                    Private\n                                _targetEnergy\n                            \n                            \n                                    Private\n                                _upgradeStructure\n                            \n                            \n                                combatRequestManager\n                            \n                            \n                                constructionManager\n                            \n                            \n                                    Private\n                                controllerLinkID\n                            \n                            \n                                defenceManager\n                            \n                            \n                                estimatedEnergyIncome\n                            \n                            \n                                factoryManager\n                            \n                            \n                                haulerCarryParts\n                            \n                            \n                                haulerNeedManager\n                            \n                            \n                                haulerSizeManager\n                            \n                            \n                                haulRequestManager\n                            \n                            \n                                labManager\n                            \n                            \n                                linkManager\n                            \n                            \n                                nextSpawnEnergyAvailable\n                            \n                            \n                                observerManager\n                            \n                            \n                                powerSpawningStructuresManager\n                            \n                            \n                                remotesManager\n                            \n                            \n                                remoteSourceHarvesters\n                            \n                            \n                                room\n                            \n                            \n                                    Private\n                                sourceLinkIDs\n                            \n                            \n                                sourceManager\n                            \n                            \n                                spawningStructuresManager\n                            \n                            \n                                spawnRequestsManager\n                            \n                            \n                                storingStructuresManager\n                            \n                            \n                                terminalManager\n                            \n                            \n                                towerAttackTarget\n                            \n                            \n                                towerManager\n                            \n                            \n                                workRequestManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteCombatRequest\n                            \n                            \n                                findMinDismantleCost\n                            \n                            \n                                findMinHealCost\n                            \n                            \n                                findMinMeleeAttackCost\n                            \n                            \n                                findMinRangedAttackCost\n                            \n                            \n                                findNudeMaxUpgradeStrength\n                            \n                            \n                                preTickRun\n                            \n                            \n                                    Private\n                                preTickTest\n                            \n                            \n                                removeRemote\n                            \n                            \n                                    Public\n                                run\n                            \n                            \n                                    Private\n                                test\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    minStoredEnergy\n                                \n                                \n                                    targetEnergy\n                                \n                                \n                                    storedEnergyUpgradeThreshold\n                                \n                                \n                                    storedEnergyBuildThreshold\n                                \n                                \n                                    rampartsMaintenanceCost\n                                \n                                \n                                    minRampartHits\n                                \n                                \n                                    storingStructures\n                                \n                                \n                                    storingStructuresCapacity\n                                \n                                \n                                    maxCombatRequests\n                                \n                                \n                                    buildersMakeRequests\n                                \n                                \n                                    maxUpgradeStrength\n                                \n                                \n                                    hasSufficientRoads\n                                \n                                \n                                    upgradeStructure\n                                \n                                \n                                    structureTypesByBuildPriority\n                                \n                                \n                                    controllerDowngradeUpgradeThreshold\n                                \n                                \n                                    defensiveRamparts\n                                \n                                \n                                    rampartRepairTargets\n                                \n                                \n                                    needsSecondMincutLayer\n                                \n                                \n                                    sourceLinks\n                                \n                                \n                                    controllerLink\n                                \n                                \n                                    fastFillerSpawnEnergyCapacity\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _controllerLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StructureLink | \n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _defensiveRamparts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StructureRampart[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _fastFillerSpawnEnergyCapacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _hasSufficientRoads\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _maxCombatRequests\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _maxUpgradeStrength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _minRampartHits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _minStoredEnergy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _rampartRepairTargets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StructureRampart[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _sourceLinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (StructureLink | )[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _storedEnergyBuildThreshold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _storingStructures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (StructureStorage | StructureTerminal)[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _structureTypesByBuildPriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BuildableStructureConstant[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _targetEnergy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _upgradeStructure\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnyStoreStructure | \n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        combatRequestManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CombatRequestManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        constructionManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConstructionManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        controllerLinkID\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Id\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defenceManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DefenceManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        estimatedEnergyIncome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factoryManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FactoryManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        haulerCarryParts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    The total amount of carry parts for hauler and remoteHaulers\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        haulerNeedManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HaulerNeedManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        haulerSizeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HaulerSizeManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        haulRequestManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HaulRequestManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linkManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LinkManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextSpawnEnergyAvailable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        observerManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ObserverManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        powerSpawningStructuresManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PowerSpawnsManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remotesManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RemotesManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remoteSourceHarvesters\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n            \n                \n                    Organized by remote and sourceIndex\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        room\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Room\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sourceLinkIDs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Id[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SourceManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spawningStructuresManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpawningStructuresManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spawnRequestsManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpawnRequestsManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storingStructuresManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StoringStructuresManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        terminalManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TerminalManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        towerAttackTarget\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Creep\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        towerManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TowerManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workRequestManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkRequestManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCombatRequest\n                        \n                    \n                \n            \n            \n                \ndeleteCombatRequest(requestName: string, index: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findMinDismantleCost\n                        \n                    \n                \n            \n            \n                \nfindMinDismantleCost(minDismantle: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    minDismantle\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findMinHealCost\n                        \n                    \n                \n            \n            \n                \nfindMinHealCost(minHeal: number)\n                \n            \n\n\n\n\n            \n                \n                    Finds how expensive it will be to provide enough heal parts to withstand attacks\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    minHeal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        12\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findMinMeleeAttackCost\n                        \n                    \n                \n            \n            \n                \nfindMinMeleeAttackCost(minDamage: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    minDamage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        30\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findMinRangedAttackCost\n                        \n                    \n                \n            \n            \n                \nfindMinRangedAttackCost(minDamage: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    minDamage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findNudeMaxUpgradeStrength\n                        \n                    \n                \n            \n            \n                \nfindNudeMaxUpgradeStrength()\n                \n            \n\n\n\n\n            \n                \n                    The max upgrade strength when we have no local storing structure\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickRun\n                        \n                    \n                \n            \n            \n                \npreTickRun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        preTickTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    preTickTest()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRemote\n                        \n                    \n                \n            \n            \n                \nremoveRemote(remoteName: string, index: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    remoteName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        test\n                        \n                    \n                \n            \n            \n                \n                    \n                    test()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(room: Room)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        minStoredEnergy\n                    \n                \n\n                \n                    \n                        getminStoredEnergy()\n                    \n                \n                    \n                        \n                                The minimum amount of stored energy the room should only use in emergencies\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        targetEnergy\n                    \n                \n\n                \n                    \n                        gettargetEnergy()\n                    \n                \n                    \n                        \n                                The amount of energy the room wants to have\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        storedEnergyUpgradeThreshold\n                    \n                \n\n                \n                    \n                        getstoredEnergyUpgradeThreshold()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        storedEnergyBuildThreshold\n                    \n                \n\n                \n                    \n                        getstoredEnergyBuildThreshold()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rampartsMaintenanceCost\n                    \n                \n\n                \n                    \n                        getrampartsMaintenanceCost()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        minRampartHits\n                    \n                \n\n                \n                    \n                        getminRampartHits()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        storingStructures\n                    \n                \n\n                \n                    \n                        getstoringStructures()\n                    \n                \n                    \n                        \n                                Storing structures - storage or teirmal - filtered to for defined and RCL active\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        storingStructuresCapacity\n                    \n                \n\n                \n                    \n                        getstoringStructuresCapacity()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        maxCombatRequests\n                    \n                \n\n                \n                    \n                        getmaxCombatRequests()\n                    \n                \n                    \n                        \n                                The largest amount of combat requests the room can respond to\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        buildersMakeRequests\n                    \n                \n\n                \n                    \n                        getbuildersMakeRequests()\n                    \n                \n                    \n                        \n                                Wether builders should ask for resources instead of seeking them out themselves\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        maxUpgradeStrength\n                    \n                \n\n                \n                    \n                        getmaxUpgradeStrength()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasSufficientRoads\n                    \n                \n\n                \n                    \n                        gethasSufficientRoads()\n                    \n                \n                    \n                        \n                                Informs wether we have sufficient roads compared to the roadQuota for our RCL\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        upgradeStructure\n                    \n                \n\n                \n                    \n                        getupgradeStructure()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        structureTypesByBuildPriority\n                    \n                \n\n                \n                    \n                        getstructureTypesByBuildPriority()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        controllerDowngradeUpgradeThreshold\n                    \n                \n\n                \n                    \n                        getcontrollerDowngradeUpgradeThreshold()\n                    \n                \n                    \n                        \n                                When the room needs to upgrade at high priority to remove the downgrade timer\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        defensiveRamparts\n                    \n                \n\n                \n                    \n                        getdefensiveRamparts()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rampartRepairTargets\n                    \n                \n\n                \n                    \n                        getrampartRepairTargets()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        needsSecondMincutLayer\n                    \n                \n\n                \n                    \n                        getneedsSecondMincutLayer()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sourceLinks\n                    \n                \n\n                \n                    \n                        getsourceLinks()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        controllerLink\n                    \n                \n\n                \n                    \n                        getcontrollerLink()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fastFillerSpawnEnergyCapacity\n                    \n                \n\n                \n                    \n                        getfastFillerSpawnEnergyCapacity()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConstructionManager.html":{"url":"classes/ConstructionManager.html","title":"class - ConstructionManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConstructionManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/construction/construction.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                            \n                                lastRun\n                            \n                            \n                                placedSites\n                            \n                            \n                                room\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearEnemyStructures\n                            \n                            \n                                    Private\n                                migrate\n                            \n                            \n                                    Private\n                                place\n                            \n                            \n                                    Private\n                                placeBase\n                            \n                            \n                                    Private\n                                placeRamparts\n                            \n                            \n                                preTickRun\n                            \n                            \n                                    Public\n                                visualize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastRun\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Game.time\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placedSites\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        room\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Room\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        clearEnemyStructures\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearEnemyStructures()\n                \n            \n\n\n\n\n            \n                \n                    If it hasn't yet been done for this room, check for and destroy any structures owned by another player\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        migrate\n                        \n                    \n                \n            \n            \n                \n                    \n                    migrate()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        place\n                        \n                    \n                \n            \n            \n                \n                    \n                    place()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        placeBase\n                        \n                    \n                \n            \n            \n                \n                    \n                    placeBase(RCL: number, maxCSites: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    RCL\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxCSites\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        placeRamparts\n                        \n                    \n                \n            \n            \n                \n                    \n                    placeRamparts(RCL: number, maxCSites: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    RCL\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxCSites\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickRun\n                        \n                    \n                \n            \n            \n                \npreTickRun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        visualize\n                        \n                    \n                \n            \n            \n                \n                    \n                    visualize()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConstructionSiteManager.html":{"url":"classes/ConstructionSiteManager.html","title":"class - ConstructionSiteManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConstructionSiteManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/constructionSiteManager.ts\n        \n\n\n            \n                Description\n            \n            \n                Tracks and records constructionSites and thier age, deleting old sites\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContainerManager.html":{"url":"classes/ContainerManager.html","title":"class - ContainerManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContainerManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/container.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roomManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                runCommune\n                            \n                            \n                                    Private\n                                runControllerContainer\n                            \n                            \n                                    Private\n                                runFastFillerContainers\n                            \n                            \n                                    Private\n                                runMineralContainer\n                            \n                            \n                                runRemote\n                            \n                            \n                                    Private\n                                runSourceContainers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roomManager: RoomManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roomManager\n                                                  \n                                                        \n                                                                        RoomManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        roomManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoomManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        runCommune\n                        \n                    \n                \n            \n            \n                \nrunCommune()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        runControllerContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    runControllerContainer()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        runFastFillerContainers\n                        \n                    \n                \n            \n            \n                \n                    \n                    runFastFillerContainers()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        runMineralContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    runMineralContainer()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runRemote\n                        \n                    \n                \n            \n            \n                \nrunRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        runSourceContainers\n                        \n                    \n                \n            \n            \n                \n                    \n                    runSourceContainers()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ControllerUpgrader.html":{"url":"classes/ControllerUpgrader.html","title":"class - ControllerUpgrader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ControllerUpgrader\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/commune/controllerUpgrader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isDying\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isDying\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDying()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ControllerUpgraderManager.html":{"url":"classes/ControllerUpgraderManager.html","title":"class - ControllerUpgraderManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ControllerUpgraderManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManager.new/commune/controllerUpgrader.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                manager\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialRun\n                            \n                            \n                                    Private\n                                initialRunCreep\n                            \n                            \n                                isDying\n                            \n                            \n                                run\n                            \n                            \n                                    Private\n                                runCreep\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        manager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreepRoles\n\n                    \n                \n                \n                    \n                        Default value : 'controllerUpgrader'\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialRun\n                        \n                    \n                \n            \n            \n                \ninitialRun(room: Room)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initialRunCreep\n                        \n                    \n                \n            \n            \n                \n                    \n                    initialRunCreep(creep: Creep)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creep\n                                    \n                                            Creep\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDying\n                        \n                    \n                \n            \n            \n                \nisDying(creep: Creep)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creep\n                                    \n                                            Creep\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun(room: Room)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        runCreep\n                        \n                    \n                \n            \n            \n                \n                    \n                    runCreep(creep: Creep)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creep\n                                    \n                                            Creep\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreepCombatData.html":{"url":"interfaces/CreepCombatData.html","title":"interface - CreepCombatData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreepCombatData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/AllyRequests.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defence\n                                        \n                                \n                                \n                                        \n                                            heal\n                                        \n                                \n                                \n                                        \n                                            hits\n                                        \n                                \n                                \n                                        \n                                            meleeDamage\n                                        \n                                \n                                \n                                        \n                                            rangedDamage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defence\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defence:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        heal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hits:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meleeDamage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meleeDamage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rangedDamage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rangedDamage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreepOrganizer.html":{"url":"classes/CreepOrganizer.html","title":"class - CreepOrganizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreepOrganizer\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/creepOrganizer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                processCreep\n                            \n                            \n                                    Public\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        processCreep\n                        \n                    \n                \n            \n            \n                \n                    \n                    processCreep(creepName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creepName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreepRoleManager.html":{"url":"classes/CreepRoleManager.html","title":"class - CreepRoleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreepRoleManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/creepRoleManager.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roomManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                newRun\n                            \n                            \n                                    Public\n                                run\n                            \n                            \n                                    Private\n                                runManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roomManager: RoomManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roomManager\n                                                  \n                                                        \n                                                                        RoomManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        roomManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoomManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        newRun\n                        \n                    \n                \n            \n            \n                \n                    \n                    newRun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        runManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    runManager(role: CreepRoles)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                            CreepRoles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomLogOpts.html":{"url":"interfaces/CustomLogOpts.html","title":"interface - CustomLogOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomLogOpts\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bgColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            superPosition\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bgColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bgColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        superPosition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        superPosition:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeadCreepNames.html":{"url":"interfaces/DeadCreepNames.html","title":"interface - DeadCreepNames","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeadCreepNames\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/room.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ally\n                                        \n                                \n                                \n                                        \n                                            enemy\n                                        \n                                \n                                \n                                        \n                                            my\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ally\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ally:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enemy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enemy:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        my\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        my:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefenceManager.html":{"url":"classes/DefenceManager.html","title":"class - DefenceManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefenceManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/defence.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                            \n                                presentThreat\n                            \n                            \n                                threatByPlayers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                advancedActivateSafeMode\n                            \n                            \n                                    Private\n                                assignDefenceTargets\n                            \n                            \n                                    Private\n                                considerRampartsPublic\n                            \n                            \n                                    Private\n                                findPresentThreat\n                            \n                            \n                                    Private\n                                isBaseSafe\n                            \n                            \n                                    Private\n                                isControllerSafe\n                            \n                            \n                                    Private\n                                makeRampartsPrivate\n                            \n                            \n                                manageDefenceRequests\n                            \n                            \n                                manageThreat\n                            \n                            \n                                run\n                            \n                            \n                                    Private\n                                shouldSafeMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        presentThreat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threatByPlayers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        advancedActivateSafeMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    advancedActivateSafeMode()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        assignDefenceTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    assignDefenceTargets()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        considerRampartsPublic\n                        \n                    \n                \n            \n            \n                \n                    \n                    considerRampartsPublic()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        findPresentThreat\n                        \n                    \n                \n            \n            \n                \n                    \n                    findPresentThreat()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isBaseSafe\n                        \n                    \n                \n            \n            \n                \n                    \n                    isBaseSafe()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isControllerSafe\n                        \n                    \n                \n            \n            \n                \n                    \n                    isControllerSafe()\n                \n            \n\n\n\n\n            \n                \n                    Identify claim creeps trying to downgrade the controller, safemode just before\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeRampartsPrivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeRampartsPrivate()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        manageDefenceRequests\n                        \n                    \n                \n            \n            \n                \nmanageDefenceRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        manageThreat\n                        \n                    \n                \n            \n            \n                \nmanageThreat()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        shouldSafeMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldSafeMode()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DroppedResourceManager.html":{"url":"classes/DroppedResourceManager.html","title":"class - DroppedResourceManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DroppedResourceManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/droppedResources.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roomManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                runCommune\n                            \n                            \n                                runRemote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roomManager: RoomManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roomManager\n                                                  \n                                                        \n                                                                        RoomManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        roomManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoomManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        runCommune\n                        \n                    \n                \n            \n            \n                \nrunCommune()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runRemote\n                        \n                    \n                \n            \n            \n                \nrunRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Duo.html":{"url":"classes/Duo.html","title":"class - Duo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Duo\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/antifa/duo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _combatStrength\n                            \n                            \n                                leader\n                            \n                            \n                                members\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                advancedAttack\n                            \n                            \n                                advancedDismantle\n                            \n                            \n                                advancedHeal\n                            \n                            \n                                advancedRangedAttack\n                            \n                            \n                                attackStructures\n                            \n                            \n                                createMoveRequest\n                            \n                            \n                                getInFormation\n                            \n                            \n                                holdFormation\n                            \n                            \n                                rangedAttackStructures\n                            \n                            \n                                run\n                            \n                            \n                                runCombat\n                            \n                            \n                                runCombatRoom\n                            \n                            \n                                    Optional\n                                stompEnemyCSites\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    combatStrength\n                                \n                                \n                                    canMove\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(memberNames: string[])\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        memberNames\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _combatStrength\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CombatStrength\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Antifa\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Antifa[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n            \n                \n                    All squad members, where index 0 is the leader\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        advancedAttack\n                        \n                    \n                \n            \n            \n                \nadvancedAttack()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        advancedDismantle\n                        \n                    \n                \n            \n            \n                \nadvancedDismantle()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        advancedHeal\n                        \n                    \n                \n            \n            \n                \nadvancedHeal()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        advancedRangedAttack\n                        \n                    \n                \n            \n            \n                \nadvancedRangedAttack()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        attackStructures\n                        \n                    \n                \n            \n            \n                \nattackStructures()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createMoveRequest\n                        \n                    \n                \n            \n            \n                \ncreateMoveRequest(opts: MoveRequestOpts, moveLeader)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                            MoveRequestOpts\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    moveLeader\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.leader\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInFormation\n                        \n                    \n                \n            \n            \n                \ngetInFormation()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        holdFormation\n                        \n                    \n                \n            \n            \n                \nholdFormation()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rangedAttackStructures\n                        \n                    \n                \n            \n            \n                \nrangedAttackStructures()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runCombat\n                        \n                    \n                \n            \n            \n                \nrunCombat()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runCombatRoom\n                        \n                    \n                \n            \n            \n                \nrunCombatRoom()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        stompEnemyCSites\n                        \n                    \n                \n            \n            \n                \nstompEnemyCSites()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        combatStrength\n                    \n                \n\n                \n                    \n                        getcombatStrength()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canMove\n                    \n                \n\n                \n                    \n                        getcanMove()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DynamicSquad.html":{"url":"classes/DynamicSquad.html","title":"class - DynamicSquad","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DynamicSquad\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/antifa/dynamicSquad.ts\n        \n\n\n            \n                Description\n            \n            \n                A squad of a semi-dynamic size\nAccepts at most 1 of each: antifaRangedAttacker, antifaAttacker, antifaHealer, antifaDismantler\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _combatStrength\n                            \n                            \n                                leader\n                            \n                            \n                                memberNames\n                            \n                            \n                                members\n                            \n                            \n                                membersByType\n                            \n                            \n                                moveType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                advancedHeal\n                            \n                            \n                                combatAttackDuoGetInFormation\n                            \n                            \n                                createMoveRequest\n                            \n                            \n                                getInFormation\n                            \n                            \n                                holdFormation\n                            \n                            \n                                    Optional\n                                rangedAttackStructures\n                            \n                            \n                                run\n                            \n                            \n                                runCombat\n                            \n                            \n                                runCombatAttackDuo\n                            \n                            \n                                runCombatDismantler\n                            \n                            \n                                runCombatRangedAttacker\n                            \n                            \n                                runCombatRoom\n                            \n                            \n                                setMoveType\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    combatStrength\n                                \n                                \n                                    canMove\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(memberNames: string[])\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        memberNames\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _combatStrength\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CombatStrength\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Antifa\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        memberNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Antifa[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n            \n                \n                    All squad members, where index 0 is the leader\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        membersByType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SquadMoveTypes\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        advancedHeal\n                        \n                    \n                \n            \n            \n                \n                    \n                    advancedHeal()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        combatAttackDuoGetInFormation\n                        \n                    \n                \n            \n            \n                \ncombatAttackDuoGetInFormation(attacker: Creep, healer: Creep)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attacker\n                                    \n                                            Creep\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    healer\n                                    \n                                            Creep\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createMoveRequest\n                        \n                    \n                \n            \n            \n                \ncreateMoveRequest(opts: MoveRequestOpts, moveLeader)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                            MoveRequestOpts\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    moveLeader\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.leader\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInFormation\n                        \n                    \n                \n            \n            \n                \ngetInFormation()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        holdFormation\n                        \n                    \n                \n            \n            \n                \nholdFormation()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        rangedAttackStructures\n                        \n                    \n                \n            \n            \n                \nrangedAttackStructures(creep: Creep)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creep\n                                    \n                                            Creep\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runCombat\n                        \n                    \n                \n            \n            \n                \nrunCombat()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runCombatAttackDuo\n                        \n                    \n                \n            \n            \n                \nrunCombatAttackDuo()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runCombatDismantler\n                        \n                    \n                \n            \n            \n                \nrunCombatDismantler()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runCombatRangedAttacker\n                        \n                    \n                \n            \n            \n                \nrunCombatRangedAttacker()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runCombatRoom\n                        \n                    \n                \n            \n            \n                \nrunCombatRoom()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMoveType\n                        \n                    \n                \n            \n            \n                \nsetMoveType(type: SquadMoveTypes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            SquadMoveTypes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        combatStrength\n                    \n                \n\n                \n                    \n                        getcombatStrength()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canMove\n                    \n                \n\n                \n                    \n                        getcanMove()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EndTickCreepManager.html":{"url":"classes/EndTickCreepManager.html","title":"class - EndTickCreepManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EndTickCreepManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/endTickCreepManager.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roomManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                run\n                            \n                            \n                                    Private\n                                runChant\n                            \n                            \n                                    Private\n                                runDeadChant\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roomManager: RoomManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roomManager\n                                                  \n                                                        \n                                                                        RoomManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        roomManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoomManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        runChant\n                        \n                    \n                \n            \n            \n                \n                    \n                    runChant()\n                \n            \n\n\n\n\n            \n                \n                    If enabled and there is a chant this tick, have a random creeps that isn't on an exit say the chant\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        runDeadChant\n                        \n                    \n                \n            \n            \n                \n                    \n                    runDeadChant()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Set\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EndTickManager.html":{"url":"classes/EndTickManager.html","title":"class - EndTickManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EndTickManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/endTickManager.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles logging, stat recording, and more at the end of the tick\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnemyThreatData.html":{"url":"interfaces/EnemyThreatData.html","title":"interface - EnemyThreatData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnemyThreatData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/antifa/quad.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coords\n                                        \n                                \n                                \n                                        \n                                            goals\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coords\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coords:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        goals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        goals:     PathGoal[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PathGoal[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorData.html":{"url":"interfaces/ErrorData.html","title":"interface - ErrorData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/other/ErrorExporter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorExporter.html":{"url":"classes/ErrorExporter.html","title":"class - ErrorExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorExporter\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/other/ErrorExporter.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                addErrorToSegment\n                            \n                            \n                                    Static\n                                getSegmentData\n                            \n                            \n                                    Static\n                                setSegmentData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        addErrorToSegment\n                        \n                    \n                \n            \n            \n                \n                    \n                    addErrorToSegment(stack: string, version?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stack\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSegmentData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSegmentData()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         ErrorData\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        setSegmentData\n                        \n                    \n                \n            \n            \n                \n                    \n                    setSegmentData(data: ErrorData)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ErrorData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorMapper.html":{"url":"classes/ErrorMapper.html","title":"class - ErrorMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorMapper\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/other/ErrorMapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Optional\n                                _consumer\n                            \n                            \n                                    Static\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sourceMappedStackTrace\n                            \n                            \n                                    Static\n                                wrapLoop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    consumer\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Optional\n                        _consumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SourceMapConsumer\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sourceMappedStackTrace\n                        \n                    \n                \n            \n            \n                \n                    \n                    sourceMappedStackTrace(error: Error | string)\n                \n            \n\n\n\n\n            \n                \n                    Generates a stack trace using a source map generate original symbol names.\nWARNING - EXTREMELY high CPU cost for first call after reset - >30 CPU! Use sparingly!\n(Consecutive calls after a reset are more reasonable, ~0.1 CPU/ea)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The error or original stack trace\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The source-mapped stack trace\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        wrapLoop\n                        \n                    \n                \n            \n            \n                \n                    \n                    wrapLoop(loop: () => void)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loop\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        consumer\n                    \n                \n\n                \n                    \n                        getconsumer()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FactoryManager.html":{"url":"classes/FactoryManager.html","title":"class - FactoryManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FactoryManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                            \n                                factory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allComponents\n                            \n                            \n                                getProduct\n                            \n                            \n                                haveAllMaterials\n                            \n                            \n                                nextProduction\n                            \n                            \n                                pickProduct\n                            \n                            \n                                run\n                            \n                            \n                                runFactory\n                            \n                            \n                                setProduct\n                            \n                            \n                                updateUsableResources\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StructureFactory\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        allComponents\n                        \n                    \n                \n            \n            \n                \nallComponents(product: CommodityConstant | MineralConstant | RESOURCE_GHODIUM | RESOURCE_ENERGY)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                            CommodityConstant | MineralConstant | RESOURCE_GHODIUM | RESOURCE_ENERGY\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProduct\n                        \n                    \n                \n            \n            \n                \ngetProduct()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        haveAllMaterials\n                        \n                    \n                \n            \n            \n                \nhaveAllMaterials(resource: CommodityConstant | MineralConstant | RESOURCE_ENERGY | RESOURCE_GHODIUM)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                            CommodityConstant | MineralConstant | RESOURCE_ENERGY | RESOURCE_GHODIUM\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextProduction\n                        \n                    \n                \n            \n            \n                \nnextProduction(product: CommodityConstant | MineralConstant | RESOURCE_ENERGY | RESOURCE_GHODIUM)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                            CommodityConstant | MineralConstant | RESOURCE_ENERGY | RESOURCE_GHODIUM\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     CommodityConstant | MineralConstant | RESOURCE_ENERGY | RESOURCE_GHODIUM\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pickProduct\n                        \n                    \n                \n            \n            \n                \npickProduct()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runFactory\n                        \n                    \n                \n            \n            \n                \nrunFactory()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setProduct\n                        \n                    \n                \n            \n            \n                \nsetProduct(product: CommodityConstant | MineralConstant | RESOURCE_ENERGY | RESOURCE_GHODIUM)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                            CommodityConstant | MineralConstant | RESOURCE_ENERGY | RESOURCE_GHODIUM\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUsableResources\n                        \n                    \n                \n            \n            \n                \nupdateUsableResources()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FastFiller.html":{"url":"classes/FastFiller.html","title":"class - FastFiller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FastFiller\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/commune/fastFiller.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                fillFastFiller\n                            \n                            \n                                    Optional\n                                findFastFillerPos\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                            \n                                    Optional\n                                travelToFastFiller\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        fillFastFiller\n                        \n                    \n                \n            \n            \n                \nfillFastFiller()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findFastFillerPos\n                        \n                    \n                \n            \n            \n                \nfindFastFillerPos()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        travelToFastFiller\n                        \n                    \n                \n            \n            \n                \ntravelToFastFiller()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeatureFlagConfig.html":{"url":"interfaces/FeatureFlagConfig.html","title":"interface - FeatureFlagConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeatureFlagConfig\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/featureFlags.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                \n                                \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FeatureFlagManager.html":{"url":"classes/FeatureFlagManager.html","title":"class - FeatureFlagManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FeatureFlagManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/featureFlags.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                flags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                areFlagsOn\n                            \n                            \n                                isFlagOn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: FeatureFlagConfig)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        FeatureFlagConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        flags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FeatureFlagConfig\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        areFlagsOn\n                        \n                    \n                \n            \n            \n                \nareFlagsOn(flags: Feature[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flags\n                                    \n                                                Feature[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFlagOn\n                        \n                    \n                \n            \n            \n                \nisFlagOn(flag: Feature)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flag\n                                    \n                                                Feature\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindDynamicStampAnchorArgs.html":{"url":"interfaces/FindDynamicStampAnchorArgs.html","title":"interface - FindDynamicStampAnchorArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindDynamicStampAnchorArgs\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/communePlanner.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            minAvoid\n                                        \n                                \n                                \n                                        \n                                            stamp\n                                        \n                                \n                                \n                                        \n                                            startCoords\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        conditions\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        conditions\n                        \n                    \n                \n            \n            \n                \nconditions(coord: Coord)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    coord\n                                    \n                                            Coord\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        minAvoid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minAvoid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stamp:     Stamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Stamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startCoords\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startCoords:     Coord[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Coord[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindDynamicStampAnchorArgs-1.html":{"url":"interfaces/FindDynamicStampAnchorArgs-1.html","title":"interface - FindDynamicStampAnchorArgs-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindDynamicStampAnchorArgs\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/remotePlanner.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            minAvoid\n                                        \n                                \n                                \n                                        \n                                            stamp\n                                        \n                                \n                                \n                                        \n                                            startCoords\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        conditions\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        conditions\n                        \n                    \n                \n            \n            \n                \nconditions(coord: Coord)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    coord\n                                    \n                                            Coord\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        minAvoid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minAvoid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stamp:     Stamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Stamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startCoords\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startCoords:     Coord[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Coord[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindDynamicStampAnchorWeightedArgs.html":{"url":"interfaces/FindDynamicStampAnchorWeightedArgs.html","title":"interface - FindDynamicStampAnchorWeightedArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindDynamicStampAnchorWeightedArgs\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/communePlanner.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FindDynamicStampAnchorArgs\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dynamicWeight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dynamicWeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dynamicWeight:     Uint32Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint32Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindDynamicStampAnchorWeightedArgs-1.html":{"url":"interfaces/FindDynamicStampAnchorWeightedArgs-1.html","title":"interface - FindDynamicStampAnchorWeightedArgs-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindDynamicStampAnchorWeightedArgs\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/remotePlanner.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FindDynamicStampAnchorArgs\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dynamicWeight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dynamicWeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dynamicWeight:     Uint32Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint32Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindStampAnchorArgs.html":{"url":"interfaces/FindStampAnchorArgs.html","title":"interface - FindStampAnchorArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindStampAnchorArgs\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/communePlanner.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cardinalFlood\n                                        \n                                \n                                \n                                        \n                                            coordMap\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minAvoid\n                                        \n                                \n                                \n                                        \n                                            stamp\n                                        \n                                \n                                \n                                        \n                                            startCoords\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        conditions\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        conditions\n                        \n                    \n                \n            \n            \n                \nconditions(coord: Coord)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    coord\n                                    \n                                            Coord\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardinalFlood\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardinalFlood:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coordMap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordMap:     CoordMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CoordMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minAvoid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minAvoid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stamp:     Stamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Stamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startCoords\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startCoords:     Coord[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Coord[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindStampAnchorArgs-1.html":{"url":"interfaces/FindStampAnchorArgs-1.html","title":"interface - FindStampAnchorArgs-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindStampAnchorArgs\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/remotePlanner.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cardinalFlood\n                                        \n                                \n                                \n                                        \n                                            coordMap\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minAvoid\n                                        \n                                \n                                \n                                        \n                                            stamp\n                                        \n                                \n                                \n                                        \n                                            startCoords\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        conditions\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        conditions\n                        \n                    \n                \n            \n            \n                \nconditions(coord: Coord)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    coord\n                                    \n                                            Coord\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardinalFlood\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardinalFlood:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coordMap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordMap:     CoordMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CoordMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minAvoid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minAvoid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stamp:     Stamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Stamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startCoords\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startCoords:     Coord[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Coord[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlagManager.html":{"url":"classes/FlagManager.html","title":"class - FlagManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlagManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/flags.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                abandonCommune\n                            \n                            \n                                    Private\n                                attack\n                            \n                            \n                                    Private\n                                claim\n                            \n                            \n                                    Private\n                                combat\n                            \n                            \n                                    Private\n                                defend\n                            \n                            \n                                    Private\n                                deleteClaim\n                            \n                            \n                                    Private\n                                deleteCombat\n                            \n                            \n                                    Public\n                                doNothing\n                            \n                            \n                                    Private\n                                harass\n                            \n                            \n                                    Private\n                                incomingTransactions\n                            \n                            \n                                    Private\n                                internationalDataVisuals\n                            \n                            \n                                    Private\n                                outgoingTransactions\n                            \n                            \n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        abandonCommune\n                        \n                    \n                \n            \n            \n                \n                    \n                    abandonCommune(flagName: string, flagNameParts: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flagName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flagNameParts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        attack\n                        \n                    \n                \n            \n            \n                \n                    \n                    attack(flagName: string, flagNameParts: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flagName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flagNameParts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        claim\n                        \n                    \n                \n            \n            \n                \n                    \n                    claim(flagName: string, flagNameParts: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flagName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flagNameParts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        combat\n                        \n                    \n                \n            \n            \n                \n                    \n                    combat(flagName: string, flagNameParts: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flagName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flagNameParts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        defend\n                        \n                    \n                \n            \n            \n                \n                    \n                    defend(flagName: string, flagNameParts: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flagName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flagNameParts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        deleteClaim\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteClaim(flagName: string, flagNameParts: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flagName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flagNameParts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        deleteCombat\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCombat(flagName: string, flagNameParts: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flagName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flagNameParts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        doNothing\n                        \n                    \n                \n            \n            \n                \n                    \n                    doNothing(flagName: string, flagNameParts: string[])\n                \n            \n\n\n\n\n            \n                \n                    Tricks typescript into accepting the dynamic function call in run()\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flagName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flagNameParts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        harass\n                        \n                    \n                \n            \n            \n                \n                    \n                    harass(flagName: string, flagNameParts: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flagName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flagNameParts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        incomingTransactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    incomingTransactions(flagName: string, flagNameParts: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flagName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flagNameParts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        internationalDataVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    internationalDataVisuals(flagName: string, flagNameParts: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flagName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flagNameParts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        outgoingTransactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    outgoingTransactions(flagName: string, flagNameParts: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flagName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flagNameParts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HaulRequestManager.html":{"url":"classes/HaulRequestManager.html","title":"class - HaulRequestManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HaulRequestManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/haulRequestManager.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                preTickRun\n                            \n                            \n                                    Private\n                                preTickTransferRequest\n                            \n                            \n                                    Public\n                                run\n                            \n                            \n                                    Private\n                                transferRequest\n                            \n                            \n                                    Private\n                                withdrawRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        preTickRun\n                        \n                    \n                \n            \n            \n                \n                    \n                    preTickRun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        preTickTransferRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    preTickTransferRequest(requestName: string, index: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        transferRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    transferRequest(requestName: string, index: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        withdrawRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    withdrawRequest(requestName: string, index: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Hauler.html":{"url":"classes/Hauler.html","title":"class - Hauler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Hauler\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/commune/hauler.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                roleManager\n                            \n                            \n                                    Optional\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HaulerManager.html":{"url":"classes/HaulerManager.html","title":"class - HaulerManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HaulerManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManager.new/commune/hauler.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                manager\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                            \n                                    Private\n                                runCreep\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        manager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreepRoles\n\n                    \n                \n                \n                    \n                        Default value : 'hauler'\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun(room: Room)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        runCreep\n                        \n                    \n                \n            \n            \n                \n                    \n                    runCreep(creep: Creep)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creep\n                                    \n                                            Creep\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HaulerNeedManager.html":{"url":"classes/HaulerNeedManager.html","title":"class - HaulerNeedManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HaulerNeedManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/haulerNeed.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                controllerNeed\n                            \n                            \n                                run\n                            \n                            \n                                    Private\n                                sourceNeed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        controllerNeed\n                        \n                    \n                \n            \n            \n                \n                    \n                    controllerNeed()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        sourceNeed\n                        \n                    \n                \n            \n            \n                \n                    \n                    sourceNeed()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HaulerSizeManager.html":{"url":"classes/HaulerSizeManager.html","title":"class - HaulerSizeManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HaulerSizeManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/haulerSize.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                            \n                                    Private\n                                updateMinHaulerCost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateMinHaulerCost\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMinHaulerCost()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HubHauler.html":{"url":"classes/HubHauler.html","title":"class - HubHauler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HubHauler\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/commune/hubHauler.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createCreepRoomLogisticsRequests\n                            \n                            \n                                    Optional\n                                factoryEnergyOverfillTransfer\n                            \n                            \n                                    Optional\n                                reserveFactoryTransfer\n                            \n                            \n                                    Optional\n                                reserveFactoryWithdraw\n                            \n                            \n                                    Optional\n                                reserveHubLinkTransfer\n                            \n                            \n                                    Optional\n                                reserveHubLinkWithdraw\n                            \n                            \n                                    Optional\n                                reservePowerSpawnTransferEnergy\n                            \n                            \n                                    Optional\n                                reservePowerSpawnTransferPower\n                            \n                            \n                                    Optional\n                                reserveStorageTransfer\n                            \n                            \n                                    Optional\n                                reserveTerminalTransfer\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                            \n                                    Optional\n                                travelToHub\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        createCreepRoomLogisticsRequests\n                        \n                    \n                \n            \n            \n                \ncreateCreepRoomLogisticsRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        If a reservation was made or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        factoryEnergyOverfillTransfer\n                        \n                    \n                \n            \n            \n                \nfactoryEnergyOverfillTransfer()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        reserveFactoryTransfer\n                        \n                    \n                \n            \n            \n                \nreserveFactoryTransfer()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        If a reservation was made or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        reserveFactoryWithdraw\n                        \n                    \n                \n            \n            \n                \nreserveFactoryWithdraw()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        If a reservation was made or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        reserveHubLinkTransfer\n                        \n                    \n                \n            \n            \n                \nreserveHubLinkTransfer()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        If a reservation was made or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        reserveHubLinkWithdraw\n                        \n                    \n                \n            \n            \n                \nreserveHubLinkWithdraw()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        If a reservation was made or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        reservePowerSpawnTransferEnergy\n                        \n                    \n                \n            \n            \n                \nreservePowerSpawnTransferEnergy()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        If a reservation was made or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        reservePowerSpawnTransferPower\n                        \n                    \n                \n            \n            \n                \nreservePowerSpawnTransferPower()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        If a reservation was made or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        reserveStorageTransfer\n                        \n                    \n                \n            \n            \n                \nreserveStorageTransfer()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        If a reservation was made or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        reserveTerminalTransfer\n                        \n                    \n                \n            \n            \n                \nreserveTerminalTransfer()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        If a reservation was made or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        travelToHub\n                        \n                    \n                \n            \n            \n                \ntravelToHub()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitManager.html":{"url":"classes/InitManager.html","title":"class - InitManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/init.ts\n        \n\n\n            \n                Description\n            \n            \n                Configures variables to align with the bot's expectations, to ensure proper function\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initAllies\n                            \n                            \n                                    Private\n                                initGlobal\n                            \n                            \n                                    Private\n                                initMemory\n                            \n                            \n                                    Public\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initAllies\n                        \n                    \n                \n            \n            \n                \ninitAllies()\n                \n            \n\n\n\n\n            \n                \n                    Make sure we have configured memory for allies\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initGlobal\n                        \n                    \n                \n            \n            \n                \n                    \n                    initGlobal()\n                \n            \n\n\n\n\n            \n                \n                    Construct global if it isn't constructed yet\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initMemory\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMemory()\n                \n            \n\n\n\n\n            \n                \n                    Construct Memory if it isn't constructed yet\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Int32Queue.html":{"url":"classes/Int32Queue.html","title":"class - Int32Queue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Int32Queue\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/construction/minCut.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                h\n                            \n                            \n                                    Private\n                                q\n                            \n                            \n                                    Private\n                                t\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                push\n                            \n                            \n                                reset\n                            \n                            \n                                shift\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(capacity: number)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        capacity\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        h\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        q\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Int32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        t\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        push\n                        \n                    \n                \n            \n            \n                \npush(v: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(arr: number[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shift\n                        \n                    \n                \n            \n            \n                \nshift()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InterShardPlanner.html":{"url":"classes/InterShardPlanner.html","title":"class - InterShardPlanner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InterShardPlanner\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/interShardPlanner.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InterpretedRoomEvent.html":{"url":"interfaces/InterpretedRoomEvent.html","title":"interface - InterpretedRoomEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InterpretedRoomEvent\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/room.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actionType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            eventType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionType:     EventAttackType | EventHealType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventAttackType | EventHealType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventType:     EventConstant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventConstant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Id\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LabManager.html":{"url":"classes/LabManager.html","title":"class - LabManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LabManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/labs.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _deficits\n                            \n                            \n                                _inputLabs\n                            \n                            \n                                _outputLabs\n                            \n                            \n                                communeManager\n                            \n                            \n                                inputLab1\n                            \n                            \n                                inputLab2\n                            \n                            \n                                inputLabIDs\n                            \n                            \n                                inputResources\n                            \n                            \n                                isReverse\n                            \n                            \n                                    Private\n                                labsByBoost\n                            \n                            \n                                outputResource\n                            \n                            \n                                replanAt\n                            \n                            \n                                    Private\n                                requestedBoosts\n                            \n                            \n                                snoozeUntil\n                            \n                            \n                                targetAmount\n                            \n                            \n                                targetCompounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                acceptBoost\n                            \n                            \n                                assignBoosts\n                            \n                            \n                                assignNoReaction\n                            \n                            \n                                    Private\n                                assignReaction\n                            \n                            \n                                    Private\n                                canReact\n                            \n                            \n                                chainDecompose\n                            \n                            \n                                    Private\n                                chainFindNextReaction\n                            \n                            \n                                    Private\n                                createBoostRoomLogisticsRequests\n                            \n                            \n                                    Private\n                                createInputRoomLogisticsRequests\n                            \n                            \n                                    Private\n                                createOutputRoomLogisticsRequests\n                            \n                            \n                                    Private\n                                createRoomLogisticsRequests\n                            \n                            \n                                    Public\n                                demandBoost\n                            \n                            \n                                    Private\n                                findNextReaction\n                            \n                            \n                                inputFull\n                            \n                            \n                                    Private\n                                isCurrentReactionFinished\n                            \n                            \n                                    Private\n                                manageReactions\n                            \n                            \n                                preTickRun\n                            \n                            \n                                    Private\n                                resourceAmount\n                            \n                            \n                                run\n                            \n                            \n                                    Private\n                                runReactions\n                            \n                            \n                                    Private\n                                setCurrentReaction\n                            \n                            \n                                    Private\n                                unpackLabIDsByType\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    inputLabs\n                                \n                                \n                                    outputLabs\n                                \n                                \n                                    reactionAmountRemaining\n                                \n                                \n                                    deficits\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _deficits\n                        \n                    \n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _inputLabs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StructureLab[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _outputLabs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StructureLab[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputLab1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StructureLab\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputLab2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StructureLab\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputLabIDs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Id[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputResources\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (MineralConstant | MineralCompoundConstant)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReverse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        labsByBoost\n                        \n                    \n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outputResource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MineralConstant | MineralCompoundConstant\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replanAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requestedBoosts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MineralBoostConstant[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snoozeUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetCompounds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n        KH: 15000,\n        G: 10000,\n        [RESOURCE_CATALYZED_UTRIUM_ACID]: 10000,\n        [RESOURCE_CATALYZED_LEMERGIUM_ALKALIDE]: 10000,\n        [RESOURCE_CATALYZED_KEANIUM_ALKALIDE]: 10000,\n        [RESOURCE_CATALYZED_ZYNTHIUM_ALKALIDE]: 10000,\n        [RESOURCE_CATALYZED_LEMERGIUM_ACID]: 10000,\n        [RESOURCE_CATALYZED_GHODIUM_ALKALIDE]: 10000,\n        [RESOURCE_CATALYZED_ZYNTHIUM_ACID]: 10000,\n        [RESOURCE_CATALYZED_GHODIUM_ACID]: 10000,\n    }\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        acceptBoost\n                        \n                    \n                \n            \n            \n                \n                    \n                    acceptBoost(creep: Creep, boost: MineralBoostConstant)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creep\n                                    \n                                            Creep\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    boost\n                                    \n                                            MineralBoostConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        assignBoosts\n                        \n                    \n                \n            \n            \n                \nassignBoosts()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        assignNoReaction\n                        \n                    \n                \n            \n            \n                \nassignNoReaction()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        assignReaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    assignReaction(outputResource: MineralCompoundConstant, targetAmount: number, reverse: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Assigns input resources based on the output, alongside reaction settings\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outputResource\n                                    \n                                            MineralCompoundConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetAmount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reverse\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        canReact\n                        \n                    \n                \n            \n            \n                \n                    \n                    canReact()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chainDecompose\n                        \n                    \n                \n            \n            \n                \nchainDecompose(compound: MineralConstant | MineralCompoundConstant, amount: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    compound\n                                    \n                                            MineralConstant | MineralCompoundConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        chainFindNextReaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    chainFindNextReaction(target: MineralConstant | MineralCompoundConstant, targetAmount: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            MineralConstant | MineralCompoundConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetAmount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createBoostRoomLogisticsRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    createBoostRoomLogisticsRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createInputRoomLogisticsRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInputRoomLogisticsRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createOutputRoomLogisticsRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOutputRoomLogisticsRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createRoomLogisticsRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRoomLogisticsRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        demandBoost\n                        \n                    \n                \n            \n            \n                \n                    \n                    demandBoost(creep: Creep, boost: MineralBoostConstant)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creep\n                                    \n                                            Creep\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    boost\n                                    \n                                            MineralBoostConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        findNextReaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNextReaction()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputFull\n                        \n                    \n                \n            \n            \n                \ninputFull(inputLab: StructureLab)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputLab\n                                    \n                                            StructureLab\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isCurrentReactionFinished\n                        \n                    \n                \n            \n            \n                \n                    \n                    isCurrentReactionFinished()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        manageReactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    manageReactions()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickRun\n                        \n                    \n                \n            \n            \n                \npreTickRun()\n                \n            \n\n\n\n\n            \n                \n                    Boost stuff\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        resourceAmount\n                        \n                    \n                \n            \n            \n                \n                    \n                    resourceAmount(resource: MineralConstant | MineralCompoundConstant)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                            MineralConstant | MineralCompoundConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        runReactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    runReactions()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setCurrentReaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentReaction()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unpackLabIDsByType\n                        \n                    \n                \n            \n            \n                \n                    \n                    unpackLabIDsByType()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        inputLabs\n                    \n                \n\n                \n                    \n                        getinputLabs()\n                    \n                \n                    \n                        \n                                Finds the input labs we need to opperate production\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        outputLabs\n                    \n                \n\n                \n                    \n                        getoutputLabs()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        reactionAmountRemaining\n                    \n                \n\n                \n                    \n                        getreactionAmountRemaining()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deficits\n                    \n                \n\n                \n                    \n                        getdeficits()\n                    \n                \n                    \n                        \n                                Figures out what we have\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkManager.html":{"url":"classes/LinkManager.html","title":"class - LinkManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/links.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createControllerLinkRoomLogisticsRequest\n                            \n                            \n                                    Private\n                                hubToController\n                            \n                            \n                                    Private\n                                hubToFastFiller\n                            \n                            \n                                run\n                            \n                            \n                                    Private\n                                sourcesToReceivers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createControllerLinkRoomLogisticsRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    createControllerLinkRoomLogisticsRequest()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hubToController\n                        \n                    \n                \n            \n            \n                \n                    \n                    hubToController()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hubToFastFiller\n                        \n                    \n                \n            \n            \n                \n                    \n                    hubToFastFiller()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        sourcesToReceivers\n                        \n                    \n                \n            \n            \n                \n                    \n                    sourcesToReceivers()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Maintainer.html":{"url":"classes/Maintainer.html","title":"class - Maintainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Maintainer\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/commune/maintainer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preTickManager\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                            \n                                    Optional\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MapVisualsManager.html":{"url":"classes/MapVisualsManager.html","title":"class - MapVisualsManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MapVisualsManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/mapVisuals.ts\n        \n\n\n            \n                Description\n            \n            \n                Adds colours and annotations to the map if mapVisuals are enabled\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                            \n                                    Private\n                                test\n                            \n                            \n                                    Private\n                                workRequests\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        test\n                        \n                    \n                \n            \n            \n                \n                    \n                    test(roomName: string, roomMemory: RoomMemory)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roomMemory\n                                    \n                                            RoomMemory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        workRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    workRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeleeDefender.html":{"url":"classes/MeleeDefender.html","title":"class - MeleeDefender","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeleeDefender\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/commune/defenders/meleeDefender.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                advancedDefend\n                            \n                            \n                                    Optional\n                                defendWithoutRamparts\n                            \n                            \n                                    Optional\n                                defendWithRampart\n                            \n                            \n                                    Optional\n                                findRampart\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        advancedDefend\n                        \n                    \n                \n            \n            \n                \nadvancedDefend()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        defendWithoutRamparts\n                        \n                    \n                \n            \n            \n                \ndefendWithoutRamparts(enemyCreeps: Creep[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    enemyCreeps\n                                    \n                                            Creep[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        defendWithRampart\n                        \n                    \n                \n            \n            \n                \ndefendWithRampart()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findRampart\n                        \n                    \n                \n            \n            \n                \nfindRampart()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MemHack.html":{"url":"classes/MemHack.html","title":"class - MemHack","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MemHack\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/other/memHack.ts\n        \n\n\n            \n                Description\n            \n            \n                Ripped from https://github.com/AlinaNova21/ZeSwarm/\nOrganized by Carson Burke and xTwisteDx\nUsage:\nBefore the loop, import memHack\nAt start of loop(), run memHack.run()\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                memory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        memory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Memory | undefined\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MigrationManager.html":{"url":"classes/MigrationManager.html","title":"class - MigrationManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MigrationManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/migration.ts\n        \n\n\n            \n                Description\n            \n            \n                Migrate version by performing actions, if required\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MineralHarvester.html":{"url":"classes/MineralHarvester.html","title":"class - MineralHarvester","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MineralHarvester\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/commune/mineralHarvester.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                advancedHarvestMineral\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        advancedHarvestMineral\n                        \n                    \n                \n            \n            \n                \nadvancedHarvestMineral(mineral: Mineral)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mineral\n                                    \n                                            Mineral\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NukerManager.html":{"url":"classes/NukerManager.html","title":"class - NukerManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NukerManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/nuker.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                            \n                                nuker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createRoomLogisticsRequests\n                            \n                            \n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nuker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StructureNuker\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createRoomLogisticsRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRoomLogisticsRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ObserverManager.html":{"url":"classes/ObserverManager.html","title":"class - ObserverManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ObserverManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/observer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                            \n                                observer\n                            \n                            \n                                scoutTarget\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findScoutTarget\n                            \n                            \n                                preTickRun\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        observer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StructureObserver\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scoutTarget\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findScoutTarget\n                        \n                    \n                \n            \n            \n                \nfindScoutTarget()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickRun\n                        \n                    \n                \n            \n            \n                \npreTickRun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Operator.html":{"url":"classes/Operator.html","title":"class - Operator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Operator\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/powerCreeps/operator.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PowerCreep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                advancedEnablePower\n                            \n                            \n                                    Optional\n                                advancedGenerateOps\n                            \n                            \n                                    Optional\n                                advancedRenew\n                            \n                            \n                                endRun\n                            \n                            \n                                    Optional\n                                findEnablePowerTask\n                            \n                            \n                                    Optional\n                                findGenerateOpsTask\n                            \n                            \n                                    Optional\n                                findNewBestPowerTask\n                            \n                            \n                                    Optional\n                                findPowerTask\n                            \n                            \n                                    Optional\n                                findRenewTask\n                            \n                            \n                                    Optional\n                                findTask\n                            \n                            \n                                    Optional\n                                managePowerTask\n                            \n                            \n                                    Static\n                                operatorManager\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Optional\n                                runPowerTask\n                            \n                            \n                                    Optional\n                                runTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        advancedEnablePower\n                        \n                    \n                \n            \n            \n                \nadvancedEnablePower()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        advancedGenerateOps\n                        \n                    \n                \n            \n            \n                \nadvancedGenerateOps()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        advancedRenew\n                        \n                    \n                \n            \n            \n                \nadvancedRenew()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endRun\n                        \n                    \n                \n            \n            \n                \nendRun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findEnablePowerTask\n                        \n                    \n                \n            \n            \n                \nfindEnablePowerTask()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findGenerateOpsTask\n                        \n                    \n                \n            \n            \n                \nfindGenerateOpsTask()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findNewBestPowerTask\n                        \n                    \n                \n            \n            \n                \nfindNewBestPowerTask()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     PowerTask\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findPowerTask\n                        \n                    \n                \n            \n            \n                \nfindPowerTask()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findRenewTask\n                        \n                    \n                \n            \n            \n                \nfindRenewTask()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findTask\n                        \n                    \n                \n            \n            \n                \nfindTask()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        managePowerTask\n                        \n                    \n                \n            \n            \n                \nmanagePowerTask()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        operatorManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    operatorManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        runPowerTask\n                        \n                    \n                \n            \n            \n                \nrunPowerTask()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        runTask\n                        \n                    \n                \n            \n            \n                \nrunTask()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OutputArgs.html":{"url":"interfaces/OutputArgs.html","title":"interface - OutputArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OutputArgs\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/other/profiler.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            byAvg\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxLines\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        byAvg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        byAvg:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Wether to sort by average. Default is false\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxLines\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxLines:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlanStampsArgs.html":{"url":"interfaces/PlanStampsArgs.html","title":"interface - PlanStampsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlanStampsArgs\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/communePlanner.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cardinalFlood\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            coordMap\n                                        \n                                \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            diagonalDT\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dynamic\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dynamicWeight\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minAvoid\n                                        \n                                \n                                \n                                        \n                                            stampType\n                                        \n                                \n                                \n                                        \n                                            startCoords\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weighted\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        conditions\n                                    \n                                \n                                \n                                    \n                                        consequence\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        conditions\n                        \n                    \n                \n            \n            \n                \nconditions(coord: Coord)\n                \n            \n\n\n\n\n            \n                \n                    How to consider potential stampAnchors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    coord\n                                    \n                                            Coord\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consequence\n                        \n                    \n                \n            \n            \n                \nconsequence(coord: Coord)\n                \n            \n\n\n\n\n            \n                \n                    What to do with the stampAnchor resulting from a successful individual plan\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    coord\n                                    \n                                            Coord\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the stampAnchor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardinalFlood\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardinalFlood:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coordMap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordMap:     CoordMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CoordMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        diagonalDT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diagonalDT:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dynamic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dynamic:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dynamicWeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dynamicWeight:     Uint32Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint32Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minAvoid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minAvoid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stampType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stampType:     StampTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StampTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startCoords\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startCoords:     Coord[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Coord[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weighted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weighted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlanStampsArgs-1.html":{"url":"interfaces/PlanStampsArgs-1.html","title":"interface - PlanStampsArgs-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlanStampsArgs\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/remotePlanner.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cardinalFlood\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            coordMap\n                                        \n                                \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            diagonalDT\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dynamic\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dynamicWeight\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minAvoid\n                                        \n                                \n                                \n                                        \n                                            stampType\n                                        \n                                \n                                \n                                        \n                                            startCoords\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weighted\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        conditions\n                                    \n                                \n                                \n                                    \n                                        consequence\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        conditions\n                        \n                    \n                \n            \n            \n                \nconditions(coord: Coord)\n                \n            \n\n\n\n\n            \n                \n                    How to consider potential stampAnchors\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    coord\n                                    \n                                            Coord\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consequence\n                        \n                    \n                \n            \n            \n                \nconsequence(coord: Coord)\n                \n            \n\n\n\n\n            \n                \n                    What to do with the stampAnchor resulting from a successful individual plan\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    coord\n                                    \n                                            Coord\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the stampAnchor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardinalFlood\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardinalFlood:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coordMap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordMap:     CoordMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CoordMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        diagonalDT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diagonalDT:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dynamic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dynamic:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dynamicWeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dynamicWeight:     Uint32Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint32Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minAvoid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minAvoid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stampType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stampType:     StampTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StampTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startCoords\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startCoords:     Coord[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Coord[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weighted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weighted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlayerManager.html":{"url":"classes/PlayerManager.html","title":"class - PlayerManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlayerManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/players.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _playersByHate\n                            \n                            \n                                highestThreat\n                            \n                            \n                                sleepUntil\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initPlayer\n                            \n                            \n                                run\n                            \n                            \n                                    Private\n                                sleeping\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    playerByHate\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _playersByHate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n\n            \n                \n                    Player names sorted from most hated to least\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highestThreat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n            \n                \n                    The highest offensive threat of known players\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sleepUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initPlayer\n                        \n                    \n                \n            \n            \n                \ninitPlayer(playerName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    playerName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { [x: number]: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        sleeping\n                        \n                    \n                \n            \n            \n                \n                    \n                    sleeping(sleepFor: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sleepFor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the number of ticks to sleep for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Wether we are sleeping or not\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        playerByHate\n                    \n                \n\n                \n                    \n                        getplayerByHate()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PowerCreepOrganizer.html":{"url":"classes/PowerCreepOrganizer.html","title":"class - PowerCreepOrganizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PowerCreepOrganizer\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/powerCreepOrganizer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                processCreep\n                            \n                            \n                                    Public\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        processCreep\n                        \n                    \n                \n            \n            \n                \n                    \n                    processCreep(creepName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creepName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PowerCreepRoleManager.html":{"url":"classes/PowerCreepRoleManager.html","title":"class - PowerCreepRoleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PowerCreepRoleManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/powerCreepRoleManager.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roomManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                run\n                            \n                            \n                                    Private\n                                runManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roomManager: RoomManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roomManager\n                                                  \n                                                        \n                                                                        RoomManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        roomManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoomManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        runManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    runManager(className: PowerClassConstant)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                            PowerClassConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PowerSpawnsManager.html":{"url":"classes/PowerSpawnsManager.html","title":"class - PowerSpawnsManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PowerSpawnsManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/powerSpawn.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                            \n                                powerSpawn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                advancedProcessPower\n                            \n                            \n                                    Private\n                                advancedSpawn\n                            \n                            \n                                    Public\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        powerSpawn\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StructurePowerSpawn\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        advancedProcessPower\n                        \n                    \n                \n            \n            \n                \n                    \n                    advancedProcessPower()\n                \n            \n\n\n\n\n            \n                \n                    So long as there are sufficient resources, try to process power\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        advancedSpawn\n                        \n                    \n                \n            \n            \n                \n                    \n                    advancedSpawn()\n                \n            \n\n\n\n\n            \n                \n                    Find unspawned power creeps and spawn them\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Quad.html":{"url":"classes/Quad.html","title":"class - Quad","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Quad\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/antifa/quad.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _combatStrength\n                            \n                            \n                                _defenceStrength\n                            \n                            \n                                _enemyThreatDataRanged\n                            \n                            \n                                _hits\n                            \n                            \n                                leader\n                            \n                            \n                                memberNames\n                            \n                            \n                                members\n                            \n                            \n                                membersByCoord\n                            \n                            \n                                moveType\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                advancedAttack\n                            \n                            \n                                advancedDismantle\n                            \n                            \n                                advancedRangedAttack\n                            \n                            \n                                    Private\n                                advancedTransform\n                            \n                            \n                                bulldoze\n                            \n                            \n                                createMoveRequest\n                            \n                            \n                                findMinRange\n                            \n                            \n                                getInFormation\n                            \n                            \n                                holdFormation\n                            \n                            \n                                membersAttackMove\n                            \n                            \n                                passiveHealQuad\n                            \n                            \n                                passiveRangedAttack\n                            \n                            \n                                preHeal\n                            \n                            \n                                    Private\n                                rangedAttackAttackers\n                            \n                            \n                                    Private\n                                rangedAttackEnemies\n                            \n                            \n                                rangedAttackStructures\n                            \n                            \n                                rangedKite\n                            \n                            \n                                run\n                            \n                            \n                                runCombat\n                            \n                            \n                                runCombatRoom\n                            \n                            \n                                    Private\n                                scoreMemberTransform\n                            \n                            \n                                setMoveType\n                            \n                            \n                                shouldPreHeal\n                            \n                            \n                                sortMembersByCoord\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    combatStrength\n                                \n                                \n                                    defenceStrength\n                                \n                                \n                                    hits\n                                \n                                \n                                    enemyThreatDataRanged\n                                \n                                \n                                    canMove\n                                \n                                \n                                    willMove\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(memberNames: string[])\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        memberNames\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _combatStrength\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CombatStrength\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _defenceStrength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _enemyThreatDataRanged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EnemyThreatData\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _hits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Antifa\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        memberNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Antifa[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n            \n                \n                    All squad members, where index 0 is the leader\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        membersByCoord\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SquadMoveTypes\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Structure | Creep\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        advancedAttack\n                        \n                    \n                \n            \n            \n                \nadvancedAttack()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        advancedDismantle\n                        \n                    \n                \n            \n            \n                \nadvancedDismantle()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        advancedRangedAttack\n                        \n                    \n                \n            \n            \n                \nadvancedRangedAttack()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        advancedTransform\n                        \n                    \n                \n            \n            \n                \n                    \n                    advancedTransform()\n                \n            \n\n\n\n\n            \n                \n                    Loop through every offset\nLoop through each offset and find the member which has the highest score on it\nScore each offset's sum of member scores, identifying the best offset\nimplement offset\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bulldoze\n                        \n                    \n                \n            \n            \n                \nbulldoze()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createMoveRequest\n                        \n                    \n                \n            \n            \n                \ncreateMoveRequest(opts: MoveRequestOpts, moveLeader)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                            MoveRequestOpts\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    moveLeader\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.leader\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findMinRange\n                        \n                    \n                \n            \n            \n                \nfindMinRange(coord: Coord)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    coord\n                                    \n                                            Coord\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInFormation\n                        \n                    \n                \n            \n            \n                \ngetInFormation()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        holdFormation\n                        \n                    \n                \n            \n            \n                \nholdFormation()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        membersAttackMove\n                        \n                    \n                \n            \n            \n                \nmembersAttackMove(moveLeader)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    moveLeader\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.leader\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passiveHealQuad\n                        \n                    \n                \n            \n            \n                \npassiveHealQuad()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passiveRangedAttack\n                        \n                    \n                \n            \n            \n                \npassiveRangedAttack()\n                \n            \n\n\n\n\n            \n                \n                    Attack viable targets without moving\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preHeal\n                        \n                    \n                \n            \n            \n                \npreHeal()\n                \n            \n\n\n\n\n            \n                \n                    The precogs are delighted to assist\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        rangedAttackAttackers\n                        \n                    \n                \n            \n            \n                \n                    \n                    rangedAttackAttackers()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        rangedAttackEnemies\n                        \n                    \n                \n            \n            \n                \n                    \n                    rangedAttackEnemies()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rangedAttackStructures\n                        \n                    \n                \n            \n            \n                \nrangedAttackStructures()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rangedKite\n                        \n                    \n                \n            \n            \n                \nrangedKite()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runCombat\n                        \n                    \n                \n            \n            \n                \nrunCombat()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runCombatRoom\n                        \n                    \n                \n            \n            \n                \nrunCombatRoom()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        scoreMemberTransform\n                        \n                    \n                \n            \n            \n                \n                    \n                    scoreMemberTransform(memberName: string, coord: Coord)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    memberName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    coord\n                                    \n                                            Coord\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMoveType\n                        \n                    \n                \n            \n            \n                \nsetMoveType(type: SquadMoveTypes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            SquadMoveTypes\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldPreHeal\n                        \n                    \n                \n            \n            \n                \nshouldPreHeal()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortMembersByCoord\n                        \n                    \n                \n            \n            \n                \nsortMembersByCoord()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        combatStrength\n                    \n                \n\n                \n                    \n                        getcombatStrength()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        defenceStrength\n                    \n                \n\n                \n                    \n                        getdefenceStrength()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hits\n                    \n                \n\n                \n                    \n                        gethits()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        enemyThreatDataRanged\n                    \n                \n\n                \n                    \n                        getenemyThreatDataRanged()\n                    \n                \n                    \n                        \n                                Score identifies speed of death. Lower values are better\nBe scared of enemies we can die faster from\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canMove\n                    \n                \n\n                \n                    \n                        getcanMove()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        willMove\n                    \n                \n\n                \n                    \n                        getwillMove()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RampartPlans.html":{"url":"classes/RampartPlans.html","title":"class - RampartPlans","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RampartPlans\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/construction/rampartPlans.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getXY\n                            \n                            \n                                pack\n                            \n                            \n                                    Static\n                                unpack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map?: literal type)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(packedCoord: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    packedCoord\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RampartPlanCoord\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getXY\n                        \n                    \n                \n            \n            \n                \ngetXY(x: number, y: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RampartPlanCoord\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pack\n                        \n                    \n                \n            \n            \n                \npack()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        unpack\n                        \n                    \n                \n            \n            \n                \n                    \n                    unpack(packedMap: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    packedMap\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RampartPlans\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RangedDefender.html":{"url":"classes/RangedDefender.html","title":"class - RangedDefender","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RangedDefender\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/commune/defenders/rangedDefender.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                advancedDefend\n                            \n                            \n                                    Optional\n                                advancedRangedAttack\n                            \n                            \n                                    Optional\n                                defendWithoutRamparts\n                            \n                            \n                                    Optional\n                                defendWithRampart\n                            \n                            \n                                    Optional\n                                findRampart\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        advancedDefend\n                        \n                    \n                \n            \n            \n                \nadvancedDefend()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        advancedRangedAttack\n                        \n                    \n                \n            \n            \n                \nadvancedRangedAttack()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        defendWithoutRamparts\n                        \n                    \n                \n            \n            \n                \ndefendWithoutRamparts(enemyCreeps: Creep[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    enemyCreeps\n                                    \n                                            Creep[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        defendWithRampart\n                        \n                    \n                \n            \n            \n                \ndefendWithRampart()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findRampart\n                        \n                    \n                \n            \n            \n                \nfindRampart()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoteBuilder.html":{"url":"classes/RemoteBuilder.html","title":"class - RemoteBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoteBuilder\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/remote/remoteBuilder.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                assignRemote\n                            \n                            \n                                    Optional\n                                findRemote\n                            \n                            \n                                    Optional\n                                hasValidRemote\n                            \n                            \n                                    Public\n                                isDying\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Optional\n                                remoteActions\n                            \n                            \n                                    Optional\n                                removeRemote\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        assignRemote\n                        \n                    \n                \n            \n            \n                \nassignRemote(remoteName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    remoteName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findRemote\n                        \n                    \n                \n            \n            \n                \nfindRemote()\n                \n            \n\n\n\n\n            \n                \n                    Finds a remote to harvest in\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hasValidRemote\n                        \n                    \n                \n            \n            \n                \nhasValidRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isDying\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDying()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        remoteActions\n                        \n                    \n                \n            \n            \n                \nremoteActions()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        removeRemote\n                        \n                    \n                \n            \n            \n                \nremoveRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoteCoreAttacker.html":{"url":"classes/RemoteCoreAttacker.html","title":"class - RemoteCoreAttacker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoteCoreAttacker\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/remote/remoteCoreAttacker.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                advancedAttackCores\n                            \n                            \n                                    Optional\n                                assignRemote\n                            \n                            \n                                    Optional\n                                findRemote\n                            \n                            \n                                    Optional\n                                hasValidRemote\n                            \n                            \n                                    Public\n                                isDying\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Optional\n                                removeRemote\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        advancedAttackCores\n                        \n                    \n                \n            \n            \n                \nadvancedAttackCores()\n                \n            \n\n\n\n\n            \n                \n                    Find and attack cores\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        assignRemote\n                        \n                    \n                \n            \n            \n                \nassignRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findRemote\n                        \n                    \n                \n            \n            \n                \nfindRemote()\n                \n            \n\n\n\n\n            \n                \n                    Finds a remote to harvest in\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hasValidRemote\n                        \n                    \n                \n            \n            \n                \nhasValidRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isDying\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDying()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        removeRemote\n                        \n                    \n                \n            \n            \n                \nremoveRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoteDefender.html":{"url":"classes/RemoteDefender.html","title":"class - RemoteDefender","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoteDefender\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/remote/remoteDefender.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                advancedAttackEnemies\n                            \n                            \n                                    Optional\n                                findRemote\n                            \n                            \n                                    Public\n                                isDying\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        advancedAttackEnemies\n                        \n                    \n                \n            \n            \n                \nadvancedAttackEnemies()\n                \n            \n\n\n\n\n            \n                \n                    Find and attack enemyCreeps\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findRemote\n                        \n                    \n                \n            \n            \n                \nfindRemote()\n                \n            \n\n\n\n\n            \n                \n                    Finds a remote to defend\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isDying\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDying()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoteDismantler.html":{"url":"classes/RemoteDismantler.html","title":"class - RemoteDismantler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoteDismantler\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/remote/remoteDismantler.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                advancedDismantle\n                            \n                            \n                                    Optional\n                                assignRemote\n                            \n                            \n                                    Optional\n                                findRemote\n                            \n                            \n                                    Optional\n                                hasValidRemote\n                            \n                            \n                                    Public\n                                isDying\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        advancedDismantle\n                        \n                    \n                \n            \n            \n                \nadvancedDismantle()\n                \n            \n\n\n\n\n            \n                \n                    Find and attack structures\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        assignRemote\n                        \n                    \n                \n            \n            \n                \nassignRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findRemote\n                        \n                    \n                \n            \n            \n                \nfindRemote()\n                \n            \n\n\n\n\n            \n                \n                    Finds a remote to harvest in\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hasValidRemote\n                        \n                    \n                \n            \n            \n                \nhasValidRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isDying\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDying()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoteHarvester.html":{"url":"classes/RemoteHarvester.html","title":"class - RemoteHarvester","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoteHarvester\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/remote/remoteSourceHarvester.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                applyRemote\n                            \n                            \n                                    Optional\n                                assignRemote\n                            \n                            \n                                buildContainer\n                            \n                            \n                                    Optional\n                                findRemote\n                            \n                            \n                                    Optional\n                                hasValidRemote\n                            \n                            \n                                    Public\n                                isDying\n                            \n                            \n                                    Optional\n                                isRemoteValid\n                            \n                            \n                                maintainContainer\n                            \n                            \n                                    Private\n                                obtainEnergyIfNeeded\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Optional\n                                remoteActions\n                            \n                            \n                                    Optional\n                                removeRemote\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                            \n                                    Optional\n                                travelToSource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        applyRemote\n                        \n                    \n                \n            \n            \n                \napplyRemote()\n                \n            \n\n\n\n\n            \n                \n                    Apply response values to the remote\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        assignRemote\n                        \n                    \n                \n            \n            \n                \nassignRemote(remoteName: string, sourceIndex: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    remoteName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sourceIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildContainer\n                        \n                    \n                \n            \n            \n                \nbuildContainer()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findRemote\n                        \n                    \n                \n            \n            \n                \nfindRemote()\n                \n            \n\n\n\n\n            \n                \n                    Finds a remote to harvest in\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hasValidRemote\n                        \n                    \n                \n            \n            \n                \nhasValidRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isDying\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDying()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        isRemoteValid\n                        \n                    \n                \n            \n            \n                \nisRemoteValid(remoteName: string, sourceIndex: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    remoteName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sourceIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maintainContainer\n                        \n                    \n                \n            \n            \n                \nmaintainContainer(container: StructureContainer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                            StructureContainer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        obtainEnergyIfNeeded\n                        \n                    \n                \n            \n            \n                \n                    \n                    obtainEnergyIfNeeded()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        remoteActions\n                        \n                    \n                \n            \n            \n                \nremoteActions()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        removeRemote\n                        \n                    \n                \n            \n            \n                \nremoveRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        travelToSource\n                        \n                    \n                \n            \n            \n                \ntravelToSource(sourceIndex: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoteHauler.html":{"url":"classes/RemoteHauler.html","title":"class - RemoteHauler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoteHauler\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/remote/remoteHauler.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                applyRemote\n                            \n                            \n                                    Optional\n                                assignRemote\n                            \n                            \n                                    Optional\n                                deliverResources\n                            \n                            \n                                    Optional\n                                findRemote\n                            \n                            \n                                    Optional\n                                getRemoteSourceResources\n                            \n                            \n                                    Optional\n                                getResources\n                            \n                            \n                                    Optional\n                                hasValidRemote\n                            \n                            \n                                    Optional\n                                isCurrentRemoteValid\n                            \n                            \n                                    Public\n                                isDying\n                            \n                            \n                                    Optional\n                                isRemoteValid\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Optional\n                                relay\n                            \n                            \n                                    Optional\n                                relayCardinal\n                            \n                            \n                                    Optional\n                                relayCoord\n                            \n                            \n                                    Optional\n                                relayDiagonal\n                            \n                            \n                                    Optional\n                                removeRemote\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                            \n                                    Optional\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        applyRemote\n                        \n                    \n                \n            \n            \n                \napplyRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        assignRemote\n                        \n                    \n                \n            \n            \n                \nassignRemote(remoteName: string, sourceIndex: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    remoteName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sourceIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        deliverResources\n                        \n                    \n                \n            \n            \n                \ndeliverResources()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findRemote\n                        \n                    \n                \n            \n            \n                \nfindRemote()\n                \n            \n\n\n\n\n            \n                \n                    Finds a remote to harvest in\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        getRemoteSourceResources\n                        \n                    \n                \n            \n            \n                \ngetRemoteSourceResources()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        If the creep no longer needs energy\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        getResources\n                        \n                    \n                \n            \n            \n                \ngetResources()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hasValidRemote\n                        \n                    \n                \n            \n            \n                \nhasValidRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        isCurrentRemoteValid\n                        \n                    \n                \n            \n            \n                \nisCurrentRemoteValid()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isDying\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDying()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        isRemoteValid\n                        \n                    \n                \n            \n            \n                \nisRemoteValid(remoteName: string, sourceIndex: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    remoteName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sourceIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        relay\n                        \n                    \n                \n            \n            \n                \nrelay()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        relayCardinal\n                        \n                    \n                \n            \n            \n                \nrelayCardinal(moveCoord: Coord)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moveCoord\n                                    \n                                            Coord\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        relayCoord\n                        \n                    \n                \n            \n            \n                \nrelayCoord(coord: Coord)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    coord\n                                    \n                                            Coord\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        relayDiagonal\n                        \n                    \n                \n            \n            \n                \nrelayDiagonal(moveCoord: Coord)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    moveCoord\n                                    \n                                            Coord\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        removeRemote\n                        \n                    \n                \n            \n            \n                \nremoveRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoteReserver.html":{"url":"classes/RemoteReserver.html","title":"class - RemoteReserver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoteReserver\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/remote/remoteReserver.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                applyRemote\n                            \n                            \n                                    Optional\n                                assignRemote\n                            \n                            \n                                    Optional\n                                controllerAction\n                            \n                            \n                                    Optional\n                                findControllerPos\n                            \n                            \n                                    Optional\n                                findRemote\n                            \n                            \n                                    Optional\n                                hasValidRemote\n                            \n                            \n                                    Public\n                                isDying\n                            \n                            \n                                    Optional\n                                outsideRemote\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Optional\n                                removeRemote\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                            \n                                    Optional\n                                runRemote\n                            \n                            \n                                    Optional\n                                travelToController\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        applyRemote\n                        \n                    \n                \n            \n            \n                \napplyRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        assignRemote\n                        \n                    \n                \n            \n            \n                \nassignRemote(remoteName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    remoteName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        controllerAction\n                        \n                    \n                \n            \n            \n                \ncontrollerAction()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findControllerPos\n                        \n                    \n                \n            \n            \n                \nfindControllerPos()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findRemote\n                        \n                    \n                \n            \n            \n                \nfindRemote()\n                \n            \n\n\n\n\n            \n                \n                    Finds a remote to harvest in\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hasValidRemote\n                        \n                    \n                \n            \n            \n                \nhasValidRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isDying\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDying()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        outsideRemote\n                        \n                    \n                \n            \n            \n                \noutsideRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        removeRemote\n                        \n                    \n                \n            \n            \n                \nremoveRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        runRemote\n                        \n                    \n                \n            \n            \n                \nrunRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        travelToController\n                        \n                    \n                \n            \n            \n                \ntravelToController()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemotesManager.html":{"url":"classes/RemotesManager.html","title":"class - RemotesManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemotesManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/remotesManager.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isRemoteBlocked\n                            \n                            \n                                    Private\n                                manageAbandonment\n                            \n                            \n                                    Private\n                                managePathCacheAllowance\n                            \n                            \n                                    Public\n                                preTickRun\n                            \n                            \n                                    Private\n                                recurseAbandonment\n                            \n                            \n                                    Public\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isRemoteBlocked\n                        \n                    \n                \n            \n            \n                \n                    \n                    isRemoteBlocked(remoteName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    remoteName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        manageAbandonment\n                        \n                    \n                \n            \n            \n                \n                    \n                    manageAbandonment(remoteName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    remoteName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        managePathCacheAllowance\n                        \n                    \n                \n            \n            \n                \n                    \n                    managePathCacheAllowance(remoteName: string)\n                \n            \n\n\n\n\n            \n                \n                    Every x ticks see if sourcePath is safe to use\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    remoteName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        preTickRun\n                        \n                    \n                \n            \n            \n                \n                    \n                    preTickRun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        recurseAbandonment\n                        \n                    \n                \n            \n            \n                \n                    \n                    recurseAbandonment(remoteName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    remoteName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestHauler.html":{"url":"classes/RequestHauler.html","title":"class - RequestHauler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestHauler\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/international/requestHauler.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preTickManager\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RespawnManager.html":{"url":"classes/RespawnManager.html","title":"class - RespawnManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RespawnManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/respawn.ts\n        \n\n\n            \n                Description\n            \n            \n                Credit to SemperRabbit for this nice piece of code!\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hasRespawned\n                            \n                            \n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasRespawned\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRespawned()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoomPruningManager.html":{"url":"classes/RoomPruningManager.html","title":"class - RoomPruningManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoomPruningManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/roomPruning.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastAttempt\n                            \n                            \n                                sleepTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lastAttempt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sleepTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : randomIntRange(50000, 100000)\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoomVisual.html":{"url":"interfaces/RoomVisual.html","title":"interface - RoomVisual","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RoomVisual\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/other/RoomVisual.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            roads\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        _compound\n                                    \n                                \n                                \n                                    \n                                        _fluid\n                                    \n                                \n                                \n                                    \n                                        _mineral\n                                    \n                                \n                                \n                                    \n                                        animatedPosition\n                                    \n                                \n                                \n                                    \n                                        connectRoads\n                                    \n                                \n                                \n                                    \n                                        resource\n                                    \n                                \n                                \n                                    \n                                        speech\n                                    \n                                \n                                \n                                    \n                                        structure\n                                    \n                                \n                                \n                                    \n                                        test\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        _compound\n                        \n                    \n                \n            \n            \n                \n_compound(type: ResourceConstant, x: number, y: number, size?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            ResourceConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _fluid\n                        \n                    \n                \n            \n            \n                \n_fluid(type: ResourceConstant, x: number, y: number, size?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            ResourceConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _mineral\n                        \n                    \n                \n            \n            \n                \n_mineral(type: ResourceConstant, x: number, y: number, size?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            ResourceConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animatedPosition\n                        \n                    \n                \n            \n            \n                \nanimatedPosition(x: number, y: number, opts?: AnimatedStyle)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                AnimatedStyle\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RoomVisual\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectRoads\n                        \n                    \n                \n            \n            \n                \nconnectRoads(opts?: LineStyle)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                            LineStyle\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RoomVisual\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resource\n                        \n                    \n                \n            \n            \n                \nresource(type: ResourceConstant, x: number, y: number, size?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            ResourceConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speech\n                        \n                    \n                \n            \n            \n                \nspeech(text: string, x: number, y: number, opts?: SpeechStyle)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                SpeechStyle\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RoomVisual\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        structure\n                        \n                    \n                \n            \n            \n                \nstructure(x: number, y: number, type: StructureConstant, opts?: PolyStyle)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            StructureConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                PolyStyle\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n            \n                \ntest()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         RoomVisual\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        roads\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roads:         Poly\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poly\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoomVisualsManager.html":{"url":"classes/RoomVisualsManager.html","title":"class - RoomVisualsManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoomVisualsManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/roomVisuals.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roomManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseVisuals\n                            \n                            \n                                    Private\n                                controllerVisuals\n                            \n                            \n                                    Private\n                                cSiteTargetVisuals\n                            \n                            \n                                    Private\n                                dataVisuals\n                            \n                            \n                                    Private\n                                generalDataVisuals\n                            \n                            \n                                    Private\n                                internationalAllyBuildRequestsDataVisuals\n                            \n                            \n                                    Private\n                                internationalAllyCombatRequestsDataVisuals\n                            \n                            \n                                    Private\n                                internationalAllyResourceRequestsDataVisuals\n                            \n                            \n                                    Public\n                                internationalDataVisuals\n                            \n                            \n                                    Private\n                                internationalGeneralDataVisuals\n                            \n                            \n                                    Private\n                                internationalRequestsDataVisuals\n                            \n                            \n                                    Private\n                                internationalStatDataVisuals\n                            \n                            \n                                    Private\n                                internationalTerminalRequestsDataVisuals\n                            \n                            \n                                    Private\n                                remoteDataVisuals\n                            \n                            \n                                requestDataVisuals\n                            \n                            \n                                    Private\n                                roomVisuals\n                            \n                            \n                                    Public\n                                run\n                            \n                            \n                                    Private\n                                spawnVisuals\n                            \n                            \n                                statDataVisuals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roomManager: RoomManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roomManager\n                                                  \n                                                        \n                                                                        RoomManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        roomManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoomManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        baseVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    baseVisuals()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        controllerVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    controllerVisuals()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        cSiteTargetVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    cSiteTargetVisuals()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        dataVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    dataVisuals()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generalDataVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    generalDataVisuals(y: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        internationalAllyBuildRequestsDataVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    internationalAllyBuildRequestsDataVisuals(y: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        internationalAllyCombatRequestsDataVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    internationalAllyCombatRequestsDataVisuals(y: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        internationalAllyResourceRequestsDataVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    internationalAllyResourceRequestsDataVisuals(y: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        internationalDataVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    internationalDataVisuals()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        internationalGeneralDataVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    internationalGeneralDataVisuals(y: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        internationalRequestsDataVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    internationalRequestsDataVisuals(y: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        internationalStatDataVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    internationalStatDataVisuals(y: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        internationalTerminalRequestsDataVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    internationalTerminalRequestsDataVisuals(y: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        remoteDataVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    remoteDataVisuals(y: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestDataVisuals\n                        \n                    \n                \n            \n            \n                \nrequestDataVisuals(y: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        roomVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    roomVisuals()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        spawnVisuals\n                        \n                    \n                \n            \n            \n                \n                    \n                    spawnVisuals()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statDataVisuals\n                        \n                    \n                \n            \n            \n                \nstatDataVisuals(y: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoomsManager.html":{"url":"classes/RoomsManager.html","title":"class - RoomsManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoomsManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/rooms.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initRun\n                            \n                            \n                                run\n                            \n                            \n                                updateRun\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initRun\n                        \n                    \n                \n            \n            \n                \ninitRun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRun\n                        \n                    \n                \n            \n            \n                \nupdateRun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RuinManager.html":{"url":"classes/RuinManager.html","title":"class - RuinManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RuinManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/ruins.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roomManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                runCommune\n                            \n                            \n                                runRemote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roomManager: RoomManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roomManager\n                                                  \n                                                        \n                                                                        RoomManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        roomManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoomManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        runCommune\n                        \n                    \n                \n            \n            \n                \nrunCommune()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runRemote\n                        \n                    \n                \n            \n            \n                \nrunRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scout.html":{"url":"classes/Scout.html","title":"class - Scout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scout\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/international/scout.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                scoutedRooms\n                            \n                            \n                                    Optional\n                                unscoutedRooms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                advancedSignController\n                            \n                            \n                                    Optional\n                                findBestScoutTarget\n                            \n                            \n                                    Optional\n                                findScoutTarget\n                            \n                            \n                                    Optional\n                                findScoutTargets\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        scoutedRooms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unscoutedRooms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        advancedSignController\n                        \n                    \n                \n            \n            \n                \nadvancedSignController()\n                \n            \n\n\n\n\n            \n                \n                    Tries to sign a room's controller depending on the situation\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findBestScoutTarget\n                        \n                    \n                \n            \n            \n                \nfindBestScoutTarget()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findScoutTarget\n                        \n                    \n                \n            \n            \n                \nfindScoutTarget()\n                \n            \n\n\n\n\n            \n                \n                    Finds a room name for the scout to target\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findScoutTargets\n                        \n                    \n                \n            \n            \n                \nfindScoutTargets()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Settings.html":{"url":"interfaces/Settings.html","title":"interface - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Settings\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settingsDefault.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allies\n                                        \n                                \n                                \n                                        \n                                            allyTrading\n                                        \n                                \n                                \n                                        \n                                            autoAttack\n                                        \n                                \n                                \n                                        \n                                            autoClaim\n                                        \n                                \n                                \n                                        \n                                            baseVisuals\n                                        \n                                \n                                \n                                        \n                                            breakingVersion\n                                        \n                                \n                                \n                                        \n                                            CPULogging\n                                        \n                                \n                                \n                                        \n                                            creepChant\n                                        \n                                \n                                \n                                        \n                                            creepSay\n                                        \n                                \n                                \n                                        \n                                            dataVisuals\n                                        \n                                \n                                \n                                        \n                                            errorExporting\n                                        \n                                \n                                \n                                        \n                                            logging\n                                        \n                                \n                                \n                                        \n                                            mapVisuals\n                                        \n                                \n                                \n                                        \n                                            marketUsage\n                                        \n                                \n                                \n                                        \n                                            nonAggressionPlayers\n                                        \n                                \n                                \n                                        \n                                            pixelGeneration\n                                        \n                                \n                                \n                                        \n                                            pixelSelling\n                                        \n                                \n                                \n                                        \n                                            publicRamparts\n                                        \n                                \n                                \n                                        \n                                            roomStats\n                                        \n                                \n                                \n                                        \n                                            roomVisuals\n                                        \n                                \n                                \n                                        \n                                            simpleAlliesSegment\n                                        \n                                \n                                \n                                        \n                                            structureMigration\n                                        \n                                \n                                \n                                        \n                                            tradeBlacklist\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A list of usernames to treat as allies\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allyTrading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allyTrading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether the bot should try trading with its allies\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoAttack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autoAttack:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether or not to automatically create attack requests for viable targets\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoClaim\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autoClaim:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether the bot should automatically respond to workRequests\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        baseVisuals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseVisuals:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether the bot should generate base room visuals\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        breakingVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        breakingVersion:     number | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current breaking version of the bot.\nIncrement to induce migrations which can be controlled with the migration manager\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CPULogging\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CPULogging:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether the bot should log CPU data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creepChant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creepChant:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether or not creeps should chant slogans\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creepSay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creepSay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether or not creeps should use .say\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataVisuals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataVisuals:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether or not to generate data visuals\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorExporting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorExporting:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether or not to send errors, if set up, to the error storer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logging\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logging:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether or not the bot should be using customLog\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapVisuals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mapVisuals:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether the bot should generate map visuals\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        marketUsage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        marketUsage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether or not the bot should be using the market\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nonAggressionPlayers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nonAggressionPlayers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A list of usernames to treat as neutral\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pixelGeneration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pixelGeneration:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether the bot should generate pixels\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pixelSelling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pixelSelling:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether the bot should sell pixels\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publicRamparts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        publicRamparts:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether the bot should enable ramparts when there is no enemy present\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomStats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roomStats:     \"0\" | \"1\" | \"2\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"0\" | \"1\" | \"2\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether the bot save RoomStats data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomVisuals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roomVisuals:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether the bot should generate any room visuals\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        simpleAlliesSegment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        simpleAlliesSegment:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The public segment number (0-99) that you and your allies are using\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structureMigration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structureMigration:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wether or not to try to migrate existing structures to planned positions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tradeBlacklist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tradeBlacklist:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A list of usernames to not trade with\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SourceHarvester.html":{"url":"classes/SourceHarvester.html","title":"class - SourceHarvester","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SourceHarvester\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/commune/sourceHarvester.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                buildContainer\n                            \n                            \n                                    Public\n                                isDying\n                            \n                            \n                                    Optional\n                                maintainContainer\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                            \n                                    Optional\n                                run\n                            \n                            \n                                    Optional\n                                transferToNearbyCreep\n                            \n                            \n                                    Optional\n                                transferToSourceExtensions\n                            \n                            \n                                    Optional\n                                transferToSourceLink\n                            \n                            \n                                    Optional\n                                transferToSourceStructures\n                            \n                            \n                                    Optional\n                                travelToSource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        buildContainer\n                        \n                    \n                \n            \n            \n                \nbuildContainer()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isDying\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDying()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        maintainContainer\n                        \n                    \n                \n            \n            \n                \nmaintainContainer(sourceContainer: StructureContainer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceContainer\n                                    \n                                            StructureContainer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        transferToNearbyCreep\n                        \n                    \n                \n            \n            \n                \ntransferToNearbyCreep()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        transferToSourceExtensions\n                        \n                    \n                \n            \n            \n                \ntransferToSourceExtensions()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        transferToSourceLink\n                        \n                    \n                \n            \n            \n                \ntransferToSourceLink()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        transferToSourceStructures\n                        \n                    \n                \n            \n            \n                \ntransferToSourceStructures()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        travelToSource\n                        \n                    \n                \n            \n            \n                \ntravelToSource()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SourceManager.html":{"url":"classes/SourceManager.html","title":"class - SourceManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SourceManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/sourceManager.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                            \n                                sources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createPowerTasks\n                            \n                            \n                                    Private\n                                estimateIncome\n                            \n                            \n                                preTickRun\n                            \n                            \n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sources\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Source[]\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createPowerTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPowerTasks()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        estimateIncome\n                        \n                    \n                \n            \n            \n                \n                    \n                    estimateIncome()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickRun\n                        \n                    \n                \n            \n            \n                \npreTickRun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpawnRequestsManager.html":{"url":"classes/SpawnRequestsManager.html","title":"class - SpawnRequestsManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpawnRequestsManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/spawning/spawnRequests.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeRemotePriority\n                            \n                            \n                                communeManager\n                            \n                            \n                                minRemotePriority\n                            \n                            \n                                rawSpawnRequestsArgs\n                            \n                            \n                                spawnEnergyCapacity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                antifa\n                            \n                            \n                                    Private\n                                builders\n                            \n                            \n                                    Private\n                                controllerUpgraders\n                            \n                            \n                                    Private\n                                defenders\n                            \n                            \n                                    Private\n                                fastFiller\n                            \n                            \n                                    Private\n                                generalRemoteRoles\n                            \n                            \n                                    Private\n                                hauler\n                            \n                            \n                                    Private\n                                hubHauler\n                            \n                            \n                                    Private\n                                maintainers\n                            \n                            \n                                    Private\n                                mineralHarvester\n                            \n                            \n                                    Private\n                                remoteSourceRoles\n                            \n                            \n                                    Private\n                                requestHauler\n                            \n                            \n                                run\n                            \n                            \n                                    Private\n                                scout\n                            \n                            \n                                    Private\n                                sourceHarvester\n                            \n                            \n                                    Private\n                                workRequestRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeRemotePriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    The min priority to be placed after active remotes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minRemotePriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 9\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rawSpawnRequestsArgs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (SpawnRequestArgs | )[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spawnEnergyCapacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        antifa\n                        \n                    \n                \n            \n            \n                \n                    \n                    antifa()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        builders\n                        \n                    \n                \n            \n            \n                \n                    \n                    builders()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        controllerUpgraders\n                        \n                    \n                \n            \n            \n                \n                    \n                    controllerUpgraders()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        defenders\n                        \n                    \n                \n            \n            \n                \n                    \n                    defenders()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        fastFiller\n                        \n                    \n                \n            \n            \n                \n                    \n                    fastFiller()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generalRemoteRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    generalRemoteRoles()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hauler\n                        \n                    \n                \n            \n            \n                \n                    \n                    hauler()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hubHauler\n                        \n                    \n                \n            \n            \n                \n                    \n                    hubHauler()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        maintainers\n                        \n                    \n                \n            \n            \n                \n                    \n                    maintainers()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        mineralHarvester\n                        \n                    \n                \n            \n            \n                \n                    \n                    mineralHarvester()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        remoteSourceRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    remoteSourceRoles()\n                \n            \n\n\n\n\n            \n                \n                    Spawn for roles that are per-source\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        requestHauler\n                        \n                    \n                \n            \n            \n                \n                    \n                    requestHauler()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        scout\n                        \n                    \n                \n            \n            \n                \n                    \n                    scout()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        sourceHarvester\n                        \n                    \n                \n            \n            \n                \n                    \n                    sourceHarvester()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        workRequestRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    workRequestRoles()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpawningStructuresManager.html":{"url":"classes/SpawningStructuresManager.html","title":"class - SpawningStructuresManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpawningStructuresManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/spawning/spawningStructures.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeSpawns\n                            \n                            \n                                communeManager\n                            \n                            \n                                inactiveSpawns\n                            \n                            \n                                spawnIndex\n                            \n                            \n                                spawnRequests\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configSpawnRequest\n                            \n                            \n                                    Private\n                                constructSpawnRequests\n                            \n                            \n                                createPowerTasks\n                            \n                            \n                                createRoomLogisticsRequests\n                            \n                            \n                                    Private\n                                createSpawnRequest\n                            \n                            \n                                    Private\n                                findDirections\n                            \n                            \n                                    Private\n                                findMaxCostPerCreep\n                            \n                            \n                                    Public\n                                organizeSpawns\n                            \n                            \n                                    Public\n                                run\n                            \n                            \n                                    Private\n                                runSpawning\n                            \n                            \n                                    Private\n                                runSpawnRequest\n                            \n                            \n                                    Private\n                                spawnRequestByGroup\n                            \n                            \n                                    Private\n                                spawnRequestIndividually\n                            \n                            \n                                    Private\n                                test\n                            \n                            \n                                    Private\n                                testArgs\n                            \n                            \n                                    Private\n                                testRequests\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeSpawns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StructureSpawn[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inactiveSpawns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StructureSpawn[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spawnIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spawnRequests\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SpawnRequest[]\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        configSpawnRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    configSpawnRequest(index: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        constructSpawnRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    constructSpawnRequests(args: SpawnRequestArgs)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            SpawnRequestArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createPowerTasks\n                        \n                    \n                \n            \n            \n                \ncreatePowerTasks()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRoomLogisticsRequests\n                        \n                    \n                \n            \n            \n                \ncreateRoomLogisticsRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createSpawnRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSpawnRequest(priority: number, role: CreepRoles, defaultParts: number, bodyPartCounts, tier: number, cost: number, memory: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    priority\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                            CreepRoles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defaultParts\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bodyPartCounts\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tier\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cost\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    memory\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        findDirections\n                        \n                    \n                \n            \n            \n                \n                    \n                    findDirections(pos: RoomPosition)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pos\n                                    \n                                            RoomPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        findMaxCostPerCreep\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMaxCostPerCreep(maxCostPerCreep: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    maxCostPerCreep\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        organizeSpawns\n                        \n                    \n                \n            \n            \n                \n                    \n                    organizeSpawns()\n                \n            \n\n\n\n\n            \n                \n                    Find spawns that are inactive and active\nAssign spawnIDs to creeps\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        runSpawning\n                        \n                    \n                \n            \n            \n                \n                    \n                    runSpawning()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        runSpawnRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    runSpawnRequest(index: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :      | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        spawnRequestByGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    spawnRequestByGroup(args: SpawnRequestArgs)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            SpawnRequestArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        spawnRequestIndividually\n                        \n                    \n                \n            \n            \n                \n                    \n                    spawnRequestIndividually(args: SpawnRequestArgs)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            SpawnRequestArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        test\n                        \n                    \n                \n            \n            \n                \n                    \n                    test()\n                \n            \n\n\n\n\n            \n                \n                    Spawn request debugging\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        testArgs\n                        \n                    \n                \n            \n            \n                \n                    \n                    testArgs()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        testRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    testRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpeechStyle.html":{"url":"interfaces/SpeechStyle.html","title":"interface - SpeechStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpeechStyle\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/other/RoomVisual.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            background\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textcolor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textfont\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textsize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textstyle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        background\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        background:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textcolor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textcolor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textfont\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textfont:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textsize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textsize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textstyle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textstyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatsManager.html":{"url":"classes/StatsManager.html","title":"class - StatsManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatsManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/statsManager.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                average\n                            \n                            \n                                internationalConfig\n                            \n                            \n                                internationalEndTick\n                            \n                            \n                                internationalPreTick\n                            \n                            \n                                roomCommuneFinalEndTick\n                            \n                            \n                                roomConfig\n                            \n                            \n                                roomEndTick\n                            \n                            \n                                roomPreTick\n                            \n                            \n                                round\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        average\n                        \n                    \n                \n            \n            \n                \naverage(avg: number, number: number, averagedOverTickCount: number, precision?: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    avg\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    averagedOverTickCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1000\n                                    \n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        internationalConfig\n                        \n                    \n                \n            \n            \n                \ninternationalConfig()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        internationalEndTick\n                        \n                    \n                \n            \n            \n                \ninternationalEndTick()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        internationalPreTick\n                        \n                    \n                \n            \n            \n                \ninternationalPreTick()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roomCommuneFinalEndTick\n                        \n                    \n                \n            \n            \n                \nroomCommuneFinalEndTick(roomName: string, room?: Room, forceUpdate: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    forceUpdate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roomConfig\n                        \n                    \n                \n            \n            \n                \nroomConfig(roomName: string, roomType: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roomType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roomEndTick\n                        \n                    \n                \n            \n            \n                \nroomEndTick(roomName: string, roomType: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roomType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roomPreTick\n                        \n                    \n                \n            \n            \n                \nroomPreTick(roomName: string, roomType: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roomType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        round\n                        \n                    \n                \n            \n            \n                \nround(value: number, decimals: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    decimals\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        8\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StoringStructuresManager.html":{"url":"classes/StoringStructuresManager.html","title":"class - StoringStructuresManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StoringStructuresManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/storingStructures.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createRoomLogisticsRequests\n                            \n                            \n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createRoomLogisticsRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRoomLogisticsRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TerminalManager.html":{"url":"classes/TerminalManager.html","title":"class - TerminalManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TerminalManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/terminal/terminal.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                            \n                                dataCache\n                            \n                            \n                                room\n                            \n                            \n                                terminal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                amountInRoom\n                            \n                            \n                                balanceResourceToRCL8Rooms\n                            \n                            \n                                buildDataCache\n                            \n                            \n                                buyAt\n                            \n                            \n                                    Private\n                                createTerminalRequests\n                            \n                            \n                                doTrading\n                            \n                            \n                                doTransfers\n                            \n                            \n                                extendBuyOrders\n                            \n                            \n                                extendSellOrders\n                            \n                            \n                                    Private\n                                findBestAllyRequest\n                            \n                            \n                                findBestTerminalRequest\n                            \n                            \n                                getBestBuy\n                            \n                            \n                                getBestSell\n                            \n                            \n                                isTradingPossible\n                            \n                            \n                                    Private\n                                manageResources\n                            \n                            \n                                preTickRun\n                            \n                            \n                                    Private\n                                respondToAllyRequests\n                            \n                            \n                                    Private\n                                respondToTerminalRequests\n                            \n                            \n                                run\n                            \n                            \n                                runNewVersion\n                            \n                            \n                                sellAt\n                            \n                            \n                                sendAllToRooms\n                            \n                            \n                                sendResourceToRoom\n                            \n                            \n                                sendSomeToRooms\n                            \n                            \n                                tryBuyingStuff\n                            \n                            \n                                trySellingOffStuff\n                            \n                            \n                                updateBuyAvg\n                            \n                            \n                                updateSellAvg\n                            \n                            \n                                useTerminal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataCache\n                        \n                    \n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        room\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Room\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        terminal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StructureTerminal\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        amountInRoom\n                        \n                    \n                \n            \n            \n                \namountInRoom(resource: ResourceConstant, roomName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                            ResourceConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        balanceResourceToRCL8Rooms\n                        \n                    \n                \n            \n            \n                \nbalanceResourceToRCL8Rooms(resources: ResourceConstant[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resources\n                                    \n                                            ResourceConstant[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildDataCache\n                        \n                    \n                \n            \n            \n                \nbuildDataCache()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyAt\n                        \n                    \n                \n            \n            \n                \nbuyAt(resource: ResourceConstant, price: number, energyPrice: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                            ResourceConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    price\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    energyPrice\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createTerminalRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTerminalRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doTrading\n                        \n                    \n                \n            \n            \n                \ndoTrading()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doTransfers\n                        \n                    \n                \n            \n            \n                \ndoTransfers()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extendBuyOrders\n                        \n                    \n                \n            \n            \n                \nextendBuyOrders(purchaseTarget: literal type[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    purchaseTarget\n                                    \n                                            literal type[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extendSellOrders\n                        \n                    \n                \n            \n            \n                \nextendSellOrders(sellTarget: literal type[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sellTarget\n                                    \n                                            literal type[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        findBestAllyRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestAllyRequest()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findBestTerminalRequest\n                        \n                    \n                \n            \n            \n                \nfindBestTerminalRequest()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBestBuy\n                        \n                    \n                \n            \n            \n                \ngetBestBuy(resource: ResourceConstant, energyPrice: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                            ResourceConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    energyPrice\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBestSell\n                        \n                    \n                \n            \n            \n                \ngetBestSell(resource: ResourceConstant, energyPrice: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                            ResourceConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    energyPrice\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTradingPossible\n                        \n                    \n                \n            \n            \n                \nisTradingPossible()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        manageResources\n                        \n                    \n                \n            \n            \n                \n                    \n                    manageResources()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickRun\n                        \n                    \n                \n            \n            \n                \npreTickRun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        respondToAllyRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    respondToAllyRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        respondToTerminalRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    respondToTerminalRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runNewVersion\n                        \n                    \n                \n            \n            \n                \nrunNewVersion()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sellAt\n                        \n                    \n                \n            \n            \n                \nsellAt(resource: ResourceConstant, price: number, energyPrice: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                            ResourceConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    price\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    energyPrice\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendAllToRooms\n                        \n                    \n                \n            \n            \n                \nsendAllToRooms(resource: ResourceConstant, rooms: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                            ResourceConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rooms\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendResourceToRoom\n                        \n                    \n                \n            \n            \n                \nsendResourceToRoom(resource: ResourceConstant, rooms: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                            ResourceConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rooms\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendSomeToRooms\n                        \n                    \n                \n            \n            \n                \nsendSomeToRooms(resource: ResourceConstant, rooms: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                            ResourceConstant\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rooms\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tryBuyingStuff\n                        \n                    \n                \n            \n            \n                \ntryBuyingStuff(resourcesToDirectBuy: ResourceConstant[], energyPrice: number, rateOverride: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resourcesToDirectBuy\n                                    \n                                            ResourceConstant[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    energyPrice\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rateOverride\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trySellingOffStuff\n                        \n                    \n                \n            \n            \n                \ntrySellingOffStuff(resources: ResourceConstant[], energyPrice: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resources\n                                    \n                                            ResourceConstant[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    energyPrice\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBuyAvg\n                        \n                    \n                \n            \n            \n                \nupdateBuyAvg(energyPrice: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    energyPrice\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSellAvg\n                        \n                    \n                \n            \n            \n                \nupdateSellAvg(energyPrice: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    energyPrice\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useTerminal\n                        \n                    \n                \n            \n            \n                \nuseTerminal(bestEnergySellOrder: literal type)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bestEnergySellOrder\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TickInit.html":{"url":"classes/TickInit.html","title":"class - TickInit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TickInit\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/international/tickInit.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configCombatRequests\n                            \n                            \n                                configGeneral\n                            \n                            \n                                configHaulRequests\n                            \n                            \n                                configWorkRequests\n                            \n                            \n                                    Public\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configCombatRequests\n                        \n                    \n                \n            \n            \n                \nconfigCombatRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configGeneral\n                        \n                    \n                \n            \n            \n                \nconfigGeneral()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configHaulRequests\n                        \n                    \n                \n            \n            \n                \nconfigHaulRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configWorkRequests\n                        \n                    \n                \n            \n            \n                \nconfigWorkRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TombstoneManager.html":{"url":"classes/TombstoneManager.html","title":"class - TombstoneManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TombstoneManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/tombstones.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roomManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                runCommune\n                            \n                            \n                                runRemote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roomManager: RoomManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roomManager\n                                                  \n                                                        \n                                                                        RoomManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        roomManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoomManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        runCommune\n                        \n                    \n                \n            \n            \n                \nrunCommune()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runRemote\n                        \n                    \n                \n            \n            \n                \nrunRemote()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TowerDamageCoord.html":{"url":"interfaces/TowerDamageCoord.html","title":"interface - TowerDamageCoord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TowerDamageCoord\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/communePlanner.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Coord\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            minDamage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        minDamage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDamage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TowerDamageCoord-1.html":{"url":"interfaces/TowerDamageCoord-1.html","title":"interface - TowerDamageCoord-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TowerDamageCoord\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/remotePlanner.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Coord\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            minDamage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        minDamage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDamage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TowerManager.html":{"url":"classes/TowerManager.html","title":"class - TowerManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TowerManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/towers.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _towerRampartRepairThreshold\n                            \n                            \n                                actionableTowerIDs\n                            \n                            \n                                communeManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                attackEnemyCreeps\n                            \n                            \n                                    Private\n                                createPowerTasks\n                            \n                            \n                                    Private\n                                createRoomLogisticsRequests\n                            \n                            \n                                    Private\n                                findAttackTarget\n                            \n                            \n                                    Private\n                                findGeneralRepairTargets\n                            \n                            \n                                findHealTarget\n                            \n                            \n                                    Private\n                                findRampartRepairTarget\n                            \n                            \n                                    Private\n                                healCreeps\n                            \n                            \n                                    Private\n                                repairGeneral\n                            \n                            \n                                    Private\n                                repairRamparts\n                            \n                            \n                                run\n                            \n                            \n                                scatterShot\n                            \n                            \n                                    Private\n                                trackEnemySquads\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rampartRepairTreshold\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _towerRampartRepairThreshold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionableTowerIDs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Id[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        attackEnemyCreeps\n                        \n                    \n                \n            \n            \n                \n                    \n                    attackEnemyCreeps()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createPowerTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPowerTasks()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createRoomLogisticsRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRoomLogisticsRequests()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        findAttackTarget\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAttackTarget()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        findGeneralRepairTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    findGeneralRepairTargets()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findHealTarget\n                        \n                    \n                \n            \n            \n                \nfindHealTarget()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        findRampartRepairTarget\n                        \n                    \n                \n            \n            \n                \n                    \n                    findRampartRepairTarget()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        healCreeps\n                        \n                    \n                \n            \n            \n                \n                    \n                    healCreeps()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        repairGeneral\n                        \n                    \n                \n            \n            \n                \n                    \n                    repairGeneral()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        repairRamparts\n                        \n                    \n                \n            \n            \n                \n                    \n                    repairRamparts()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scatterShot\n                        \n                    \n                \n            \n            \n                \nscatterShot()\n                \n            \n\n\n\n\n            \n                \n                    Maybe we can mess up healing\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        trackEnemySquads\n                        \n                    \n                \n            \n            \n                \n                    \n                    trackEnemySquads()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rampartRepairTreshold\n                    \n                \n\n                \n                    \n                        getrampartRepairTreshold()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserScriptManager.html":{"url":"classes/UserScriptManager.html","title":"class - UserScriptManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserScriptManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/other/userScript/userScript.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Vanguard.html":{"url":"classes/Vanguard.html","title":"class - Vanguard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Vanguard\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/creeps/roleManagers/international/vanguard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Creep\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                findRampartTarget\n                            \n                            \n                                preTickManager\n                            \n                            \n                                    Optional\n                                repairRampart\n                            \n                            \n                                    Static\n                                roleManager\n                            \n                            \n                                    Optional\n                                run\n                            \n                            \n                                    Optional\n                                travelToSource\n                            \n                            \n                                    Optional\n                                upgradeRoom\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(creepID: Id)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        creepID\n                                                  \n                                                        \n                                                                    Id\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        findRampartTarget\n                        \n                    \n                \n            \n            \n                \nfindRampartTarget()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickManager\n                        \n                    \n                \n            \n            \n                \npreTickManager()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        repairRampart\n                        \n                    \n                \n            \n            \n                \nrepairRampart()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        roleManager\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleManager(room: Room, creepsOfRole: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                            Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creepsOfRole\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        travelToSource\n                        \n                    \n                \n            \n            \n                \ntravelToSource(sourceIndex: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        upgradeRoom\n                        \n                    \n                \n            \n            \n                \nupgradeRoom(conditions?: () => void)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkRequestManager.html":{"url":"classes/WorkRequestManager.html","title":"class - WorkRequestManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkRequestManager\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/commune/workRequest.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                communeManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                abandon\n                            \n                            \n                                    Private\n                                delete\n                            \n                            \n                                    Private\n                                deleteCombat\n                            \n                            \n                                preTickRun\n                            \n                            \n                                    Public\n                                run\n                            \n                            \n                                    Private\n                                stopResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(communeManager: CommuneManager)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        communeManager\n                                                  \n                                                        \n                                                                        CommuneManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        communeManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommuneManager\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        abandon\n                        \n                    \n                \n            \n            \n                \n                    \n                    abandon(abandonTime: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    abandonTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        20000\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        deleteCombat\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCombat()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preTickRun\n                        \n                    \n                \n            \n            \n                \npreTickRun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        stopResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    stopResponse(deleteCombat?: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deleteCombat\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            base32768 : ^3.0.1\n        \n            mermaid : ^10.3.0\n        \n            semantic-release : ^21.0.7\n        \n            source-map : ~0.6.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\nAbout\nThe International is my bot for Screeps, thematically based after communist aesthetics. Owned rooms are called communes, offensive and defensive forces are called the Red Army, economic workers are known as the Proletariat, and the Revolutionaries establish new communes and rebuild destroyed ones.\nThis bot can provide experienced and new players a reference for when they get stuck, need inspiration, or want to laugh at some terrible code. Comments are used commonly, and code is structured so it can be easily understood, replicated, and expanded upon. Please follow similar guidelines if you make a pull request 🙂.\nFeel welcome to fork it and otherwise use it, however do not be overly aggressive on the Screeps world, especially to newer players. The bot is intended to be automated, but can perform manual actions via the console. It has an information panel showing progress, events, economy, military, and more.\nIf you have specific questions or want to discuss the bot, please join our discord server.\n\n\n\n\nProgress and Design\nGrafana board\nVideos\nMarvinTMB's screeps profile\nPlans and bugs\nWiki\nRequirements\nPlease read the about section before installing and using this bot.\nFirst you'll want to download or fork the repository. Start by selecting a branch: Main is more stable but is often behind on features and improvements, while Development has more bugs, features and optimizations.\nNPM\nEnsure you have downloaded Node\nMake sure your node version is below 17.0.0\nYou can check your node version with:\nnode -v\nIf your node version is too recent, you can change it with NVM:\nLinux/MacOS nvm\nWindows nvm-windows\nAfter making sure you have correct node version go to the project folder (not in src), you'll want to install the dependencies like so:\nnpm i\nAnd that's it. Join our discord server if you need help.\nUsage\nBefore you use this bot, please consider two things. First, if you're a new player and especially one that wants to learn programming, JS, or TS, then this is not the place to start. I strongly encourage you to start your own bot and achieve a decent economy before using or contributing to this bot.\nSecondly, DO NOT USE THIS BOT TO BULLY. Do not attack noobs, taking their remotes or claimed rooms. This is a fun game where people often program their own bots from scratch, so it is entirely fun-ruining and incredibly rude to pick on those who aren't using an open source bot like this one. If you find yourself against another open source bot, or a bot that can put up a fair fight against you, then best of luck. Please feel welcome to share experiences or ask questions in the discord server.\nTo begin, you need to decide what branch to use. Main is generally old but stable, while Development is less stable but more up to date. If you want to find bugs or test new features, Development is for you.\nUsing rollup we will translate the code into a single js file, which will be used in environments set in .screeps.yaml file (see below if you don't have one yet). This compiles the code so it can be run by Screeps while we develop using folders and typescript.\nFirst, you'll need to set up your settings. In /src you'll find the settings.example.ts file. Please copy the folder and rename its clone to settings.ts. Then change the settingsExample definition to settings. You can then add your own prefences, including checks based on the name of the shard for server-specific settings. These same instructions with an example is included in the file.\nNext, rename .screeps.yaml.example to .screeps.yaml and fill in the required information for each environment you want to run the bot in. For the official server, replace the token with an API token for your account. On private servers, edit (or copy and rename) the pserver section with host set to your server domain or IP then complete username and password with your credentials on this server. For more information about this file, check the screeps unified credentials file spec.\nRunning rollup -c will compile your code and do a \"dry run\", preparing the code for upload but not actually pushing it. Running rollup -c --environment DEST:mmo will compile your code, and then upload it to a screeps server using the mmo config from .screeps.yaml.\nYou can use -cw instead of -c to automatically re-run when your source code changes - for example, rollup -cw --environment DEST:main will automatically upload your code to the mmo configuration every time your code is changed.\nFinally, there are also NPM scripts that serve as aliases for these commands in package.json for IDE integration. Running npm run push-mmo is equivalent to rollup -c --environment DEST:mmo, and npm run watch-pserver is equivalent to rollup -cw --dest pserver.\nImportant! To upload code to a private server, you must have screepsmod-auth installed and configured!\nFor more information, please go to the wiki\nGrafana\nSoon to be added again when PandaMaster fixes the new ScreepsPlus replacement site!\nPrivate server\nTo run the bot on an performance checking server, run npm run server and check out localhost:21025 (server) and localhost:3000 (grafana) in your browser. Alternatives with in-depth instructions can be found at Using a Private Server\nFor the performance server users, its always RoomName as email and password is password.\nIf you'd like to use rollup to compile to a private server, you'll need to download and configure screepsmod-auth to push your code.\nI'd also suggest using this less-laggy tool steamless-client to watch your private server run from the comfort of your browser.\nAdvanced usage\nIf you want to run custom code without conflicting with the project's source - say, if you want to commit or make pull requests - it's recommended you use the userScript folder. Head to src/other/userScript/userScript.example.ts and follow the instructions at the top of the file.\nContribution\nWe're a huge fan of teamwork, and many useful features of this bot have been added by contributors.\nIf you want to join us in development for this bot, please join our discord server and share what you're working on, or hoping to add. We're happy to review issues, merge pull requests, and add collaborators!\nPlease use the development branch for pull requests, commits, etc.\nAn extra special thanks to Panda Master, Allorrian, Plaid Rabbit, Aerics, and DefaultO, SimplyAlex, shu for their essential contribution to this project.\nSupport\nIf you'd like to support the project, Carson Burke (AKA MarvinTMB) is happy to accept single time or monthly donations through the following links.\nPaypal\nPatreon\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 The International Screeps\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    88 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    24 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.109.0\n        \n            Description : \n        \n            Homepage : https://github.com/The-International-Screeps-Bot/The-International-Open-Source\n        \n            Bugs : https://github.com/The-International-Screeps-Bot/The-International-Open-Source/issues\n        \n            License : GNU GPLv3\n        \n            Repository : https://github.com/The-International-Screeps-Bot/The-International-Open-Source\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FloodForCoordCheck   (src/.../roomUtils.ts)\n                        \n                        \n                            PlayerRelationship   (src/.../constants.ts)\n                        \n                        \n                            Poly   (src/.../RoomVisual.ts)\n                        \n                        \n                            SleepFor   (src/.../constants.ts)\n                        \n                        \n                            TCollectivizer   (src/.../collectivizer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/room/roomUtils.ts\n    \n    \n        \n            \n                \n                    \n                    FloodForCoordCheck\n                \n            \n            \n                \n                    considers a position being flooded\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/international/constants.ts\n    \n    \n        \n            \n                \n                    \n                    PlayerRelationship\n                \n            \n            \n                \n                        \"ally\" | \"enemy\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SleepFor\n                \n            \n            \n                \n                        \"any\" | \"noMove\"\n\n                \n            \n        \n    \n    src/other/RoomVisual.ts\n    \n    \n        \n            \n                \n                    \n                    Poly\n                \n            \n            \n                \n                        []\n\n                \n            \n        \n    \n    src/international/collectivizer.ts\n    \n    \n        \n            \n                \n                    \n                    TCollectivizer\n                \n            \n            \n                \n                            Collectivizer\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
